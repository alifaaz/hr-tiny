{
  "{\"sourceRoot\":\"/var/www/html/sales/hayderApp/app/backend/src/bin\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/var/www/html/sales/hayderApp/app/backend\",\"filename\":\"/var/www/html/sales/hayderApp/app/backend/src/bin/www.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/var/www/html/sales/hayderApp/app/backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/bin",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/var/www/html/sales/hayderApp/app/backend",
      "filename": "/var/www/html/sales/hayderApp/app/backend/src/bin/www.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/var/www/html/sales/hayderApp/app/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/var/www/html/sales/hayderApp/app/backend/src/bin/www.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/var/www/html/sales/hayderApp/app/backend/src/bin/www.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/bin",
        "sourceFileName": "www.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _app = _interopRequireDefault(require(\"../config/app\"));\n\nvar _conf = require(\"../config/conf\");\n\nvar _DB = _interopRequireDefault(require(\"../config/DB\"));\n\nvar _chalking = _interopRequireDefault(require(\"../config/chalking\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar log = console.log;\n(0, _DB.default)().then(function () {\n  _app.default.listen(_conf.port || 3030, function () {\n    return log(_chalking.default.yelo(\"connect succssfully to host http://localhost:\".concat(_conf.port)));\n  });\n\n  log(_chalking.default.success(\"sucssessfully connected to database \".concat(_chalking.default.emojies.coffee)));\n}).catch(function (err) {\n  console.log(_chalking.default.error(err));\n  throw err;\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInd3dy5qcyJdLCJuYW1lcyI6WyJsb2ciLCJjb25zb2xlIiwidGhlbiIsImFwcCIsImxpc3RlbiIsInBvcnQiLCJjaGFsa3MiLCJ5ZWxvIiwic3VjY2VzcyIsImVtb2ppZXMiLCJjb2ZmZWUiLCJjYXRjaCIsImVyciIsImVycm9yIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUEsSUFBTUEsR0FBRyxHQUFHQyxPQUFPLENBQUNELEdBQXBCO0FBRUEsbUJBQVFFLElBQVIsQ0FBYSxZQUFNO0FBQ2pCQyxlQUFJQyxNQUFKLENBQVdDLGNBQVEsSUFBbkIsRUFBeUI7QUFBQSxXQUFNTCxHQUFHLENBQUNNLGtCQUFPQyxJQUFQLHdEQUE0REYsVUFBNUQsRUFBRCxDQUFUO0FBQUEsR0FBekI7O0FBRUFMLEVBQUFBLEdBQUcsQ0FBQ00sa0JBQU9FLE9BQVAsK0NBQXNERixrQkFBT0csT0FBUCxDQUFlQyxNQUFyRSxFQUFELENBQUg7QUFDRCxDQUpELEVBSUdDLEtBSkgsQ0FJUyxVQUFDQyxHQUFELEVBQVM7QUFDaEJYLEVBQUFBLE9BQU8sQ0FBQ0QsR0FBUixDQUFZTSxrQkFBT08sS0FBUCxDQUFhRCxHQUFiLENBQVo7QUFDQSxRQUFNQSxHQUFOO0FBQ0QsQ0FQRCIsInNvdXJjZVJvb3QiOiIvdmFyL3d3dy9odG1sL3NhbGVzL2hheWRlckFwcC9hcHAvYmFja2VuZC9zcmMvYmluIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFwcCBmcm9tICcuLi9jb25maWcvYXBwJztcbmltcG9ydCB7IHBvcnQgfSBmcm9tICcuLi9jb25maWcvY29uZic7XG5pbXBvcnQgY29uRGIgZnJvbSAnLi4vY29uZmlnL0RCJztcbmltcG9ydCBjaGFsa3MgZnJvbSAnLi4vY29uZmlnL2NoYWxraW5nJztcblxuY29uc3QgbG9nID0gY29uc29sZS5sb2c7XG5cbmNvbkRiKCkudGhlbigoKSA9PiB7XG4gIGFwcC5saXN0ZW4ocG9ydCB8fCAzMDMwLCAoKSA9PiBsb2coY2hhbGtzLnllbG8oYGNvbm5lY3Qgc3VjY3NzZnVsbHkgdG8gaG9zdCBodHRwOi8vbG9jYWxob3N0OiR7cG9ydH1gKSkpO1xuXG4gIGxvZyhjaGFsa3Muc3VjY2Vzcyhgc3Vjc3Nlc3NmdWxseSBjb25uZWN0ZWQgdG8gZGF0YWJhc2UgJHtjaGFsa3MuZW1vamllcy5jb2ZmZWV9YCkpO1xufSkuY2F0Y2goKGVycikgPT4ge1xuICBjb25zb2xlLmxvZyhjaGFsa3MuZXJyb3IoZXJyKSk7XG4gIHRocm93IGVycjtcbn0pO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "www.js"
      ],
      "names": [
        "log",
        "console",
        "then",
        "app",
        "listen",
        "port",
        "chalks",
        "yelo",
        "success",
        "emojies",
        "coffee",
        "catch",
        "err",
        "error"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,GAAG,GAAGC,OAAO,CAACD,GAApB;AAEA,mBAAQE,IAAR,CAAa,YAAM;AACjBC,eAAIC,MAAJ,CAAWC,cAAQ,IAAnB,EAAyB;AAAA,WAAML,GAAG,CAACM,kBAAOC,IAAP,wDAA4DF,UAA5D,EAAD,CAAT;AAAA,GAAzB;;AAEAL,EAAAA,GAAG,CAACM,kBAAOE,OAAP,+CAAsDF,kBAAOG,OAAP,CAAeC,MAArE,EAAD,CAAH;AACD,CAJD,EAIGC,KAJH,CAIS,UAACC,GAAD,EAAS;AAChBX,EAAAA,OAAO,CAACD,GAAR,CAAYM,kBAAOO,KAAP,CAAaD,GAAb,CAAZ;AACA,QAAMA,GAAN;AACD,CAPD",
      "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/bin",
      "sourcesContent": [
        "import app from '../config/app';\nimport { port } from '../config/conf';\nimport conDb from '../config/DB';\nimport chalks from '../config/chalking';\n\nconst log = console.log;\n\nconDb().then(() => {\n  app.listen(port || 3030, () => log(chalks.yelo(`connect succssfully to host http://localhost:${port}`)));\n\n  log(chalks.success(`sucssessfully connected to database ${chalks.emojies.coffee}`));\n}).catch((err) => {\n  console.log(chalks.error(err));\n  throw err;\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1548346641843
  },
  "{\"sourceRoot\":\"/var/www/html/sales/hayderApp/app/backend/src/config\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/var/www/html/sales/hayderApp/app/backend\",\"filename\":\"/var/www/html/sales/hayderApp/app/backend/src/config/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/var/www/html/sales/hayderApp/app/backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/config",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/var/www/html/sales/hayderApp/app/backend",
      "filename": "/var/www/html/sales/hayderApp/app/backend/src/config/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/var/www/html/sales/hayderApp/app/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/var/www/html/sales/hayderApp/app/backend/src/config/app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/var/www/html/sales/hayderApp/app/backend/src/config/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/config",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _debug = _interopRequireDefault(require(\"debug\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _vm = require(\"vm\");\n\nvar _chalking = _interopRequireDefault(require(\"./chalking\"));\n\nvar _DB = _interopRequireDefault(require(\"./DB\"));\n\nvar _conf = require(\"./conf\");\n\nvar _errorHandling = _interopRequireDefault(require(\"./errorHandling\"));\n\nvar _errora = _interopRequireDefault(require(\"./errora\"));\n\nvar _index = _interopRequireDefault(require(\"../features/index\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar app = (0, _express.default)();\nvar log = (0, _debug.default)('app'); // logger to watch the coming request\n\napp.use((0, _morgan.default)('tiny')); // parse body && params and assign it to req.body\n\napp.use(_bodyParser.default.json());\napp.use(_bodyParser.default.urlencoded({\n  extended: true\n})); // corse origin problems\n\napp.use((0, _cors.default)()); // routers\n\napp.use('/api', _index.default.individuals);\napp.use('/api', _index.default.trips);\napp.get('/', function (req, res) {\n  return res.status(200).send({\n    msg: \" Hi Folks What's Up \"\n  });\n});\napp.get('/error', function (req, res, next) {\n  var err = new _errora.default('bad request', {\n    status: 403\n  });\n  return next(err);\n});\nlog('cooool'); // error handling\n\napp.use(_errorHandling.default.handler);\nvar _default = app;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJsb2ciLCJ1c2UiLCJib2R5UGFyc2VyIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsInJvdXRlcyIsImluZGl2aWR1YWxzIiwidHJpcHMiLCJnZXQiLCJyZXEiLCJyZXMiLCJzdGF0dXMiLCJzZW5kIiwibXNnIiwibmV4dCIsImVyciIsIkVycm9yYSIsImVycm9yIiwiaGFuZGxlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUEsSUFBTUEsR0FBRyxHQUFHLHVCQUFaO0FBQ0EsSUFBTUMsR0FBRyxHQUFHLG9CQUFNLEtBQU4sQ0FBWixDLENBRUE7O0FBQ0FELEdBQUcsQ0FBQ0UsR0FBSixDQUFRLHFCQUFPLE1BQVAsQ0FBUixFLENBRUE7O0FBQ0FGLEdBQUcsQ0FBQ0UsR0FBSixDQUFRQyxvQkFBV0MsSUFBWCxFQUFSO0FBQ0FKLEdBQUcsQ0FBQ0UsR0FBSixDQUFRQyxvQkFBV0UsVUFBWCxDQUFzQjtBQUFFQyxFQUFBQSxRQUFRLEVBQUU7QUFBWixDQUF0QixDQUFSLEUsQ0FFQTs7QUFDQU4sR0FBRyxDQUFDRSxHQUFKLENBQVEsb0JBQVIsRSxDQUdBOztBQUVBRixHQUFHLENBQUNFLEdBQUosQ0FBUSxNQUFSLEVBQWdCSyxlQUFPQyxXQUF2QjtBQUNBUixHQUFHLENBQUNFLEdBQUosQ0FBUSxNQUFSLEVBQWdCSyxlQUFPRSxLQUF2QjtBQUVBVCxHQUFHLENBQUNVLEdBQUosQ0FBUSxHQUFSLEVBQWEsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOO0FBQUEsU0FBY0EsR0FBRyxDQUFDQyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBRUMsSUFBQUEsR0FBRyxFQUFFO0FBQVAsR0FBckIsQ0FBZDtBQUFBLENBQWI7QUFDQWYsR0FBRyxDQUFDVSxHQUFKLENBQVEsUUFBUixFQUFrQixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0ksSUFBWCxFQUFvQjtBQUNwQyxNQUFNQyxHQUFHLEdBQUcsSUFBSUMsZUFBSixDQUFXLGFBQVgsRUFBMEI7QUFBRUwsSUFBQUEsTUFBTSxFQUFFO0FBQVYsR0FBMUIsQ0FBWjtBQUNBLFNBQU9HLElBQUksQ0FBQ0MsR0FBRCxDQUFYO0FBQ0EsQ0FIRjtBQUlBaEIsR0FBRyxDQUFDLFFBQUQsQ0FBSCxDLENBRUE7O0FBQ0FELEdBQUcsQ0FBQ0UsR0FBSixDQUFRaUIsdUJBQU1DLE9BQWQ7ZUFFZXBCLEciLCJzb3VyY2VSb290IjoiL3Zhci93d3cvaHRtbC9zYWxlcy9oYXlkZXJBcHAvYXBwL2JhY2tlbmQvc3JjL2NvbmZpZyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IGNvcnMgZnJvbSAnY29ycyc7XG5pbXBvcnQgbW9yZ2FuIGZyb20gJ21vcmdhbic7XG5pbXBvcnQgZGVidWcgZnJvbSAnZGVidWcnO1xuaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInO1xuaW1wb3J0IHsgcnVuSW5OZXdDb250ZXh0IH0gZnJvbSAndm0nO1xuaW1wb3J0IGNoYWxrcyBmcm9tICcuL2NoYWxraW5nJztcbmltcG9ydCBjb24gZnJvbSAnLi9EQic7XG5pbXBvcnQgeyBsb2dzIH0gZnJvbSAnLi9jb25mJztcbmltcG9ydCBlcnJvciBmcm9tICcuL2Vycm9ySGFuZGxpbmcnO1xuaW1wb3J0IEVycm9yYSBmcm9tICcuL2Vycm9yYSc7XG5pbXBvcnQgIHJvdXRlcyAgZnJvbSBcIi4uL2ZlYXR1cmVzL2luZGV4XCI7XG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcbmNvbnN0IGxvZyA9IGRlYnVnKCdhcHAnKTtcblxuLy8gbG9nZ2VyIHRvIHdhdGNoIHRoZSBjb21pbmcgcmVxdWVzdFxuYXBwLnVzZShtb3JnYW4oJ3RpbnknKSk7XG5cbi8vIHBhcnNlIGJvZHkgJiYgcGFyYW1zIGFuZCBhc3NpZ24gaXQgdG8gcmVxLmJvZHlcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoeyBleHRlbmRlZDogdHJ1ZSB9KSk7XG5cbi8vIGNvcnNlIG9yaWdpbiBwcm9ibGVtc1xuYXBwLnVzZShjb3JzKCkpO1xuXG5cbi8vIHJvdXRlcnNcblxuYXBwLnVzZSgnL2FwaScsIHJvdXRlcy5pbmRpdmlkdWFscylcbmFwcC51c2UoJy9hcGknLCByb3V0ZXMudHJpcHMpXG5cbmFwcC5nZXQoJy8nLCAocmVxLCByZXMpID0+IHJlcy5zdGF0dXMoMjAwKS5zZW5kKHsgbXNnOiBcIiBIaSBGb2xrcyBXaGF0J3MgVXAgXCIgfSkpO1xuYXBwLmdldCgnL2Vycm9yJywgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIGNvbnN0IGVyciA9IG5ldyBFcnJvcmEoJ2JhZCByZXF1ZXN0JywgeyBzdGF0dXM6IDQwMyB9KTtcbiAgcmV0dXJuIG5leHQoZXJyKTtcbiB9KTtcbmxvZygnY29vb29sJyk7XG5cbi8vIGVycm9yIGhhbmRsaW5nXG5hcHAudXNlKGVycm9yLmhhbmRsZXIpO1xuXG5leHBvcnQgZGVmYXVsdCBhcHA7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "log",
        "use",
        "bodyParser",
        "json",
        "urlencoded",
        "extended",
        "routes",
        "individuals",
        "trips",
        "get",
        "req",
        "res",
        "status",
        "send",
        "msg",
        "next",
        "err",
        "Errora",
        "error",
        "handler"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,GAAG,GAAG,uBAAZ;AACA,IAAMC,GAAG,GAAG,oBAAM,KAAN,CAAZ,C,CAEA;;AACAD,GAAG,CAACE,GAAJ,CAAQ,qBAAO,MAAP,CAAR,E,CAEA;;AACAF,GAAG,CAACE,GAAJ,CAAQC,oBAAWC,IAAX,EAAR;AACAJ,GAAG,CAACE,GAAJ,CAAQC,oBAAWE,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR,E,CAEA;;AACAN,GAAG,CAACE,GAAJ,CAAQ,oBAAR,E,CAGA;;AAEAF,GAAG,CAACE,GAAJ,CAAQ,MAAR,EAAgBK,eAAOC,WAAvB;AACAR,GAAG,CAACE,GAAJ,CAAQ,MAAR,EAAgBK,eAAOE,KAAvB;AAEAT,GAAG,CAACU,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAArB,CAAd;AAAA,CAAb;AACAf,GAAG,CAACU,GAAJ,CAAQ,QAAR,EAAkB,UAACC,GAAD,EAAMC,GAAN,EAAWI,IAAX,EAAoB;AACpC,MAAMC,GAAG,GAAG,IAAIC,eAAJ,CAAW,aAAX,EAA0B;AAAEL,IAAAA,MAAM,EAAE;AAAV,GAA1B,CAAZ;AACA,SAAOG,IAAI,CAACC,GAAD,CAAX;AACA,CAHF;AAIAhB,GAAG,CAAC,QAAD,CAAH,C,CAEA;;AACAD,GAAG,CAACE,GAAJ,CAAQiB,uBAAMC,OAAd;eAEepB,G",
      "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/config",
      "sourcesContent": [
        "import express from 'express';\nimport cors from 'cors';\nimport morgan from 'morgan';\nimport debug from 'debug';\nimport bodyParser from 'body-parser';\nimport { runInNewContext } from 'vm';\nimport chalks from './chalking';\nimport con from './DB';\nimport { logs } from './conf';\nimport error from './errorHandling';\nimport Errora from './errora';\nimport  routes  from \"../features/index\";\n\nconst app = express();\nconst log = debug('app');\n\n// logger to watch the coming request\napp.use(morgan('tiny'));\n\n// parse body && params and assign it to req.body\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\n\n// corse origin problems\napp.use(cors());\n\n\n// routers\n\napp.use('/api', routes.individuals)\napp.use('/api', routes.trips)\n\napp.get('/', (req, res) => res.status(200).send({ msg: \" Hi Folks What's Up \" }));\napp.get('/error', (req, res, next) => {\n  const err = new Errora('bad request', { status: 403 });\n  return next(err);\n });\nlog('cooool');\n\n// error handling\napp.use(error.handler);\n\nexport default app;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1548845077905
  },
  "{\"sourceRoot\":\"/var/www/html/sales/hayderApp/app/backend/src/config\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/var/www/html/sales/hayderApp/app/backend\",\"filename\":\"/var/www/html/sales/hayderApp/app/backend/src/config/chalking.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/var/www/html/sales/hayderApp/app/backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/config",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/var/www/html/sales/hayderApp/app/backend",
      "filename": "/var/www/html/sales/hayderApp/app/backend/src/config/chalking.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/var/www/html/sales/hayderApp/app/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/var/www/html/sales/hayderApp/app/backend/src/config/chalking.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/var/www/html/sales/hayderApp/app/backend/src/config/chalking.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/config",
        "sourceFileName": "chalking.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.emojies = exports.bgreen = exports.bgred = exports.yelo = exports.success = exports.error = void 0;\n\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\n\nvar _nodeEmoji = _interopRequireDefault(require(\"node-emoji\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// for better debugging experince\nvar emojify = _nodeEmoji.default.emojify;\nvar error = _chalk.default.bold.red;\nexports.error = error;\nvar success = _chalk.default.bold.green;\nexports.success = success;\nvar yelo = _chalk.default.yellow; // eslint-disable-next-line prefer-destructuring\n\nexports.yelo = yelo;\nvar bgred = _chalk.default.bgred;\nexports.bgred = bgred;\nvar bgreen = _chalk.default.bold.bgGreen;\nexports.bgreen = bgreen;\nvar emojies = {\n  coffee: emojify(':coffee:'),\n  heart: emojify(':heart:'),\n  cheart: emojify(':couple_with_heart:'),\n  warning: emojify(':couple_with_heart:'),\n  quest: emojify(':question:')\n};\nexports.emojies = emojies;\nvar _default = {\n  error: error,\n  success: success,\n  yelo: yelo,\n  bgred: bgred,\n  bgreen: bgreen,\n  emojies: emojies\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoYWxraW5nLmpzIl0sIm5hbWVzIjpbImVtb2ppZnkiLCJlbW9qaSIsImVycm9yIiwiY2hhbGsiLCJib2xkIiwicmVkIiwic3VjY2VzcyIsImdyZWVuIiwieWVsbyIsInllbGxvdyIsImJncmVkIiwiYmdyZWVuIiwiYmdHcmVlbiIsImVtb2ppZXMiLCJjb2ZmZWUiLCJoZWFydCIsImNoZWFydCIsIndhcm5pbmciLCJxdWVzdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7O0FBQ0E7SUFDUUEsTyxHQUFZQyxrQixDQUFaRCxPO0FBRUQsSUFBTUUsS0FBSyxHQUFHQyxlQUFNQyxJQUFOLENBQVdDLEdBQXpCOztBQUNBLElBQU1DLE9BQU8sR0FBR0gsZUFBTUMsSUFBTixDQUFXRyxLQUEzQjs7QUFDQSxJQUFNQyxJQUFJLEdBQUdMLGVBQU1NLE1BQW5CLEMsQ0FDUDs7O0FBQ08sSUFBTUMsS0FBSyxHQUFHUCxlQUFNTyxLQUFwQjs7QUFDQSxJQUFNQyxNQUFNLEdBQUdSLGVBQU1DLElBQU4sQ0FBV1EsT0FBMUI7O0FBQ0EsSUFBTUMsT0FBTyxHQUFHO0FBQ3JCQyxFQUFBQSxNQUFNLEVBQUVkLE9BQU8sQ0FBQyxVQUFELENBRE07QUFFckJlLEVBQUFBLEtBQUssRUFBRWYsT0FBTyxDQUFDLFNBQUQsQ0FGTztBQUdyQmdCLEVBQUFBLE1BQU0sRUFBRWhCLE9BQU8sQ0FBQyxxQkFBRCxDQUhNO0FBSXJCaUIsRUFBQUEsT0FBTyxFQUFFakIsT0FBTyxDQUFDLHFCQUFELENBSks7QUFLckJrQixFQUFBQSxLQUFLLEVBQUVsQixPQUFPLENBQUMsWUFBRDtBQUxPLENBQWhCOztlQVNRO0FBQ2JFLEVBQUFBLEtBQUssRUFBTEEsS0FEYTtBQUNOSSxFQUFBQSxPQUFPLEVBQVBBLE9BRE07QUFDR0UsRUFBQUEsSUFBSSxFQUFKQSxJQURIO0FBQ1NFLEVBQUFBLEtBQUssRUFBTEEsS0FEVDtBQUNnQkMsRUFBQUEsTUFBTSxFQUFOQSxNQURoQjtBQUN3QkUsRUFBQUEsT0FBTyxFQUFQQTtBQUR4QixDIiwic291cmNlUm9vdCI6Ii92YXIvd3d3L2h0bWwvc2FsZXMvaGF5ZGVyQXBwL2FwcC9iYWNrZW5kL3NyYy9jb25maWciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2hhbGsgZnJvbSAnY2hhbGsnO1xuaW1wb3J0IGVtb2ppIGZyb20gJ25vZGUtZW1vamknO1xuLy8gZm9yIGJldHRlciBkZWJ1Z2dpbmcgZXhwZXJpbmNlXG5jb25zdCB7IGVtb2ppZnkgfSA9IGVtb2ppO1xuXG5leHBvcnQgY29uc3QgZXJyb3IgPSBjaGFsay5ib2xkLnJlZDtcbmV4cG9ydCBjb25zdCBzdWNjZXNzID0gY2hhbGsuYm9sZC5ncmVlbjtcbmV4cG9ydCBjb25zdCB5ZWxvID0gY2hhbGsueWVsbG93O1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG5leHBvcnQgY29uc3QgYmdyZWQgPSBjaGFsay5iZ3JlZDtcbmV4cG9ydCBjb25zdCBiZ3JlZW4gPSBjaGFsay5ib2xkLmJnR3JlZW47XG5leHBvcnQgY29uc3QgZW1vamllcyA9IHtcbiAgY29mZmVlOiBlbW9qaWZ5KCc6Y29mZmVlOicpLFxuICBoZWFydDogZW1vamlmeSgnOmhlYXJ0OicpLFxuICBjaGVhcnQ6IGVtb2ppZnkoJzpjb3VwbGVfd2l0aF9oZWFydDonKSxcbiAgd2FybmluZzogZW1vamlmeSgnOmNvdXBsZV93aXRoX2hlYXJ0OicpLFxuICBxdWVzdDogZW1vamlmeSgnOnF1ZXN0aW9uOicpLFxuXG59O1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGVycm9yLCBzdWNjZXNzLCB5ZWxvLCBiZ3JlZCwgYmdyZWVuLCBlbW9qaWVzLFxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "chalking.js"
      ],
      "names": [
        "emojify",
        "emoji",
        "error",
        "chalk",
        "bold",
        "red",
        "success",
        "green",
        "yelo",
        "yellow",
        "bgred",
        "bgreen",
        "bgGreen",
        "emojies",
        "coffee",
        "heart",
        "cheart",
        "warning",
        "quest"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AACA;IACQA,O,GAAYC,kB,CAAZD,O;AAED,IAAME,KAAK,GAAGC,eAAMC,IAAN,CAAWC,GAAzB;;AACA,IAAMC,OAAO,GAAGH,eAAMC,IAAN,CAAWG,KAA3B;;AACA,IAAMC,IAAI,GAAGL,eAAMM,MAAnB,C,CACP;;;AACO,IAAMC,KAAK,GAAGP,eAAMO,KAApB;;AACA,IAAMC,MAAM,GAAGR,eAAMC,IAAN,CAAWQ,OAA1B;;AACA,IAAMC,OAAO,GAAG;AACrBC,EAAAA,MAAM,EAAEd,OAAO,CAAC,UAAD,CADM;AAErBe,EAAAA,KAAK,EAAEf,OAAO,CAAC,SAAD,CAFO;AAGrBgB,EAAAA,MAAM,EAAEhB,OAAO,CAAC,qBAAD,CAHM;AAIrBiB,EAAAA,OAAO,EAAEjB,OAAO,CAAC,qBAAD,CAJK;AAKrBkB,EAAAA,KAAK,EAAElB,OAAO,CAAC,YAAD;AALO,CAAhB;;eASQ;AACbE,EAAAA,KAAK,EAALA,KADa;AACNI,EAAAA,OAAO,EAAPA,OADM;AACGE,EAAAA,IAAI,EAAJA,IADH;AACSE,EAAAA,KAAK,EAALA,KADT;AACgBC,EAAAA,MAAM,EAANA,MADhB;AACwBE,EAAAA,OAAO,EAAPA;AADxB,C",
      "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/config",
      "sourcesContent": [
        "import chalk from 'chalk';\nimport emoji from 'node-emoji';\n// for better debugging experince\nconst { emojify } = emoji;\n\nexport const error = chalk.bold.red;\nexport const success = chalk.bold.green;\nexport const yelo = chalk.yellow;\n// eslint-disable-next-line prefer-destructuring\nexport const bgred = chalk.bgred;\nexport const bgreen = chalk.bold.bgGreen;\nexport const emojies = {\n  coffee: emojify(':coffee:'),\n  heart: emojify(':heart:'),\n  cheart: emojify(':couple_with_heart:'),\n  warning: emojify(':couple_with_heart:'),\n  quest: emojify(':question:'),\n\n};\n\nexport default {\n  error, success, yelo, bgred, bgreen, emojies,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1548332747260
  },
  "{\"sourceRoot\":\"/var/www/html/sales/hayderApp/app/backend/src/config\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/var/www/html/sales/hayderApp/app/backend\",\"filename\":\"/var/www/html/sales/hayderApp/app/backend/src/config/DB.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/var/www/html/sales/hayderApp/app/backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/config",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/var/www/html/sales/hayderApp/app/backend",
      "filename": "/var/www/html/sales/hayderApp/app/backend/src/config/DB.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/var/www/html/sales/hayderApp/app/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/var/www/html/sales/hayderApp/app/backend/src/config/DB.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/var/www/html/sales/hayderApp/app/backend/src/config/DB.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/config",
        "sourceFileName": "DB.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _conf = require(\"./conf\");\n\nvar _chalking = _interopRequireDefault(require(\"./chalking\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Check Errors On Problems\n_mongoose.default.connection.on('error', function (err) {\n  console.error(err);\n});\n\n_mongoose.default.connection.on('open', function () {\n  console.log(_chalking.default.yelo('connecton opened hahh'));\n});\n\n_mongoose.default.connection.on('connected', function () {\n  console.log(_chalking.default.error(\"connecton con hahh \".concat(_chalking.default.emojies.cheart)));\n});\n\n_mongoose.default.connection.on('disconnected', function () {\n  console.log(_chalking.default.success('Mongoose default connection disconnected'));\n});\n\n_mongoose.default.connection.on('close', function () {\n  console.log(_chalking.default.error('connecton closes hahh'));\n});\n\nprocess.on('SIGINT', function () {\n  _mongoose.default.connection.close(function () {\n    console.log('Mongoose default connection is disconnected due to application termination');\n    process.exit(0);\n  });\n}); // debug mode\n\nif (_conf.env === 'development') {\n  _mongoose.default.set('debug', true);\n}\n/**\n * connect to db\n *\n * @return {object} - connection object\n * @public\n */\n\n\nvar _default = function _default() {\n  _mongoose.default.connect(_conf.mongo.uri, {\n    /**\n    * @keepAlive - to send packet every 120ms to checkk conectivity\n    * @poolSize - number of socket to run operation on dbs\n    * @reconntTries - number of tried connection after its drop\n    * @reconnctInterval - time by ms of try to connect when its drop\n    */\n    useNewUrlParser: true,\n    // keepAlive: 120,\n    poolSize: 10 // reconnectTries: Number.MAX_VALUE,\n    // reconnectInterval: 500,\n\n  });\n\n  return _mongoose.default.connection;\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRCLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwiY29ubmVjdGlvbiIsIm9uIiwiZXJyIiwiY29uc29sZSIsImVycm9yIiwibG9nIiwiY2hrIiwieWVsbyIsImVtb2ppZXMiLCJjaGVhcnQiLCJzdWNjZXNzIiwicHJvY2VzcyIsImNsb3NlIiwiZXhpdCIsImVudiIsInNldCIsImNvbm5lY3QiLCJtb25nbyIsInVyaSIsInVzZU5ld1VybFBhcnNlciIsInBvb2xTaXplIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFHQTtBQUNBQSxrQkFBU0MsVUFBVCxDQUFvQkMsRUFBcEIsQ0FBdUIsT0FBdkIsRUFBZ0MsVUFBQ0MsR0FBRCxFQUFTO0FBQUVDLEVBQUFBLE9BQU8sQ0FBQ0MsS0FBUixDQUFjRixHQUFkO0FBQXFCLENBQWhFOztBQUNBSCxrQkFBU0MsVUFBVCxDQUFvQkMsRUFBcEIsQ0FBdUIsTUFBdkIsRUFBK0IsWUFBTTtBQUFFRSxFQUFBQSxPQUFPLENBQUNFLEdBQVIsQ0FBWUMsa0JBQUlDLElBQUosQ0FBUyx1QkFBVCxDQUFaO0FBQWlELENBQXhGOztBQUNBUixrQkFBU0MsVUFBVCxDQUFvQkMsRUFBcEIsQ0FBdUIsV0FBdkIsRUFBb0MsWUFBTTtBQUFFRSxFQUFBQSxPQUFPLENBQUNFLEdBQVIsQ0FBWUMsa0JBQUlGLEtBQUosOEJBQWdDRSxrQkFBSUUsT0FBSixDQUFZQyxNQUE1QyxFQUFaO0FBQXFFLENBQWpIOztBQUNBVixrQkFBU0MsVUFBVCxDQUFvQkMsRUFBcEIsQ0FBdUIsY0FBdkIsRUFBdUMsWUFBTTtBQUMzQ0UsRUFBQUEsT0FBTyxDQUFDRSxHQUFSLENBQVlDLGtCQUFJSSxPQUFKLENBQVksMENBQVosQ0FBWjtBQUNELENBRkQ7O0FBR0FYLGtCQUFTQyxVQUFULENBQW9CQyxFQUFwQixDQUF1QixPQUF2QixFQUFnQyxZQUFNO0FBQUVFLEVBQUFBLE9BQU8sQ0FBQ0UsR0FBUixDQUFZQyxrQkFBSUYsS0FBSixDQUFVLHVCQUFWLENBQVo7QUFBa0QsQ0FBMUY7O0FBQ0FPLE9BQU8sQ0FBQ1YsRUFBUixDQUFXLFFBQVgsRUFBcUIsWUFBTTtBQUN6QkYsb0JBQVNDLFVBQVQsQ0FBb0JZLEtBQXBCLENBQTBCLFlBQU07QUFDOUJULElBQUFBLE9BQU8sQ0FBQ0UsR0FBUixDQUFZLDRFQUFaO0FBQ0FNLElBQUFBLE9BQU8sQ0FBQ0UsSUFBUixDQUFhLENBQWI7QUFDRCxHQUhEO0FBSUQsQ0FMRCxFLENBUUE7O0FBQ0EsSUFBSUMsY0FBUSxhQUFaLEVBQTJCO0FBQ3pCZixvQkFBU2dCLEdBQVQsQ0FBYSxPQUFiLEVBQXNCLElBQXRCO0FBQ0Q7QUFHRDs7Ozs7Ozs7ZUFRZSxvQkFBTTtBQUNuQmhCLG9CQUFTaUIsT0FBVCxDQUFpQkMsWUFBTUMsR0FBdkIsRUFBNEI7QUFDMUI7Ozs7OztBQU1BQyxJQUFBQSxlQUFlLEVBQUUsSUFQUztBQVExQjtBQUNBQyxJQUFBQSxRQUFRLEVBQUUsRUFUZ0IsQ0FVMUI7QUFDQTs7QUFYMEIsR0FBNUI7O0FBY0EsU0FBT3JCLGtCQUFTQyxVQUFoQjtBQUNELEMiLCJzb3VyY2VSb290IjoiL3Zhci93d3cvaHRtbC9zYWxlcy9oYXlkZXJBcHAvYXBwL2JhY2tlbmQvc3JjL2NvbmZpZyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5pbXBvcnQgeyBlbnYsIG1vbmdvIH0gZnJvbSAnLi9jb25mJztcbmltcG9ydCBjaGsgZnJvbSAnLi9jaGFsa2luZyc7XG5cblxuLy8gQ2hlY2sgRXJyb3JzIE9uIFByb2JsZW1zXG5tb25nb29zZS5jb25uZWN0aW9uLm9uKCdlcnJvcicsIChlcnIpID0+IHsgY29uc29sZS5lcnJvcihlcnIpOyB9KTtcbm1vbmdvb3NlLmNvbm5lY3Rpb24ub24oJ29wZW4nLCAoKSA9PiB7IGNvbnNvbGUubG9nKGNoay55ZWxvKCdjb25uZWN0b24gb3BlbmVkIGhhaGgnKSk7IH0pO1xubW9uZ29vc2UuY29ubmVjdGlvbi5vbignY29ubmVjdGVkJywgKCkgPT4geyBjb25zb2xlLmxvZyhjaGsuZXJyb3IoYGNvbm5lY3RvbiBjb24gaGFoaCAke2Noay5lbW9qaWVzLmNoZWFydH1gKSk7IH0pO1xubW9uZ29vc2UuY29ubmVjdGlvbi5vbignZGlzY29ubmVjdGVkJywgKCkgPT4ge1xuICBjb25zb2xlLmxvZyhjaGsuc3VjY2VzcygnTW9uZ29vc2UgZGVmYXVsdCBjb25uZWN0aW9uIGRpc2Nvbm5lY3RlZCcpKTtcbn0pO1xubW9uZ29vc2UuY29ubmVjdGlvbi5vbignY2xvc2UnLCAoKSA9PiB7IGNvbnNvbGUubG9nKGNoay5lcnJvcignY29ubmVjdG9uIGNsb3NlcyBoYWhoJykpOyB9KTtcbnByb2Nlc3Mub24oJ1NJR0lOVCcsICgpID0+IHtcbiAgbW9uZ29vc2UuY29ubmVjdGlvbi5jbG9zZSgoKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ01vbmdvb3NlIGRlZmF1bHQgY29ubmVjdGlvbiBpcyBkaXNjb25uZWN0ZWQgZHVlIHRvIGFwcGxpY2F0aW9uIHRlcm1pbmF0aW9uJyk7XG4gICAgcHJvY2Vzcy5leGl0KDApO1xuICB9KTtcbn0pO1xuXG5cbi8vIGRlYnVnIG1vZGVcbmlmIChlbnYgPT09ICdkZXZlbG9wbWVudCcpIHtcbiAgbW9uZ29vc2Uuc2V0KCdkZWJ1ZycsIHRydWUpO1xufVxuXG5cbi8qKlxuICogY29ubmVjdCB0byBkYlxuICpcbiAqIEByZXR1cm4ge29iamVjdH0gLSBjb25uZWN0aW9uIG9iamVjdFxuICogQHB1YmxpY1xuICovXG5cblxuZXhwb3J0IGRlZmF1bHQgKCkgPT4ge1xuICBtb25nb29zZS5jb25uZWN0KG1vbmdvLnVyaSwge1xuICAgIC8qKlxuICogQGtlZXBBbGl2ZSAtIHRvIHNlbmQgcGFja2V0IGV2ZXJ5IDEyMG1zIHRvIGNoZWNrayBjb25lY3Rpdml0eVxuICogQHBvb2xTaXplIC0gbnVtYmVyIG9mIHNvY2tldCB0byBydW4gb3BlcmF0aW9uIG9uIGRic1xuICogQHJlY29ubnRUcmllcyAtIG51bWJlciBvZiB0cmllZCBjb25uZWN0aW9uIGFmdGVyIGl0cyBkcm9wXG4gKiBAcmVjb25uY3RJbnRlcnZhbCAtIHRpbWUgYnkgbXMgb2YgdHJ5IHRvIGNvbm5lY3Qgd2hlbiBpdHMgZHJvcFxuICovXG4gICAgdXNlTmV3VXJsUGFyc2VyOiB0cnVlLFxuICAgIC8vIGtlZXBBbGl2ZTogMTIwLFxuICAgIHBvb2xTaXplOiAxMCxcbiAgICAvLyByZWNvbm5lY3RUcmllczogTnVtYmVyLk1BWF9WQUxVRSxcbiAgICAvLyByZWNvbm5lY3RJbnRlcnZhbDogNTAwLFxuXG4gIH0pO1xuICByZXR1cm4gbW9uZ29vc2UuY29ubmVjdGlvbjtcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "DB.js"
      ],
      "names": [
        "mongoose",
        "connection",
        "on",
        "err",
        "console",
        "error",
        "log",
        "chk",
        "yelo",
        "emojies",
        "cheart",
        "success",
        "process",
        "close",
        "exit",
        "env",
        "set",
        "connect",
        "mongo",
        "uri",
        "useNewUrlParser",
        "poolSize"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAGA;AACAA,kBAASC,UAAT,CAAoBC,EAApB,CAAuB,OAAvB,EAAgC,UAACC,GAAD,EAAS;AAAEC,EAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AAAqB,CAAhE;;AACAH,kBAASC,UAAT,CAAoBC,EAApB,CAAuB,MAAvB,EAA+B,YAAM;AAAEE,EAAAA,OAAO,CAACE,GAAR,CAAYC,kBAAIC,IAAJ,CAAS,uBAAT,CAAZ;AAAiD,CAAxF;;AACAR,kBAASC,UAAT,CAAoBC,EAApB,CAAuB,WAAvB,EAAoC,YAAM;AAAEE,EAAAA,OAAO,CAACE,GAAR,CAAYC,kBAAIF,KAAJ,8BAAgCE,kBAAIE,OAAJ,CAAYC,MAA5C,EAAZ;AAAqE,CAAjH;;AACAV,kBAASC,UAAT,CAAoBC,EAApB,CAAuB,cAAvB,EAAuC,YAAM;AAC3CE,EAAAA,OAAO,CAACE,GAAR,CAAYC,kBAAII,OAAJ,CAAY,0CAAZ,CAAZ;AACD,CAFD;;AAGAX,kBAASC,UAAT,CAAoBC,EAApB,CAAuB,OAAvB,EAAgC,YAAM;AAAEE,EAAAA,OAAO,CAACE,GAAR,CAAYC,kBAAIF,KAAJ,CAAU,uBAAV,CAAZ;AAAkD,CAA1F;;AACAO,OAAO,CAACV,EAAR,CAAW,QAAX,EAAqB,YAAM;AACzBF,oBAASC,UAAT,CAAoBY,KAApB,CAA0B,YAAM;AAC9BT,IAAAA,OAAO,CAACE,GAAR,CAAY,4EAAZ;AACAM,IAAAA,OAAO,CAACE,IAAR,CAAa,CAAb;AACD,GAHD;AAID,CALD,E,CAQA;;AACA,IAAIC,cAAQ,aAAZ,EAA2B;AACzBf,oBAASgB,GAAT,CAAa,OAAb,EAAsB,IAAtB;AACD;AAGD;;;;;;;;eAQe,oBAAM;AACnBhB,oBAASiB,OAAT,CAAiBC,YAAMC,GAAvB,EAA4B;AAC1B;;;;;;AAMAC,IAAAA,eAAe,EAAE,IAPS;AAQ1B;AACAC,IAAAA,QAAQ,EAAE,EATgB,CAU1B;AACA;;AAX0B,GAA5B;;AAcA,SAAOrB,kBAASC,UAAhB;AACD,C",
      "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/config",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nimport { env, mongo } from './conf';\nimport chk from './chalking';\n\n\n// Check Errors On Problems\nmongoose.connection.on('error', (err) => { console.error(err); });\nmongoose.connection.on('open', () => { console.log(chk.yelo('connecton opened hahh')); });\nmongoose.connection.on('connected', () => { console.log(chk.error(`connecton con hahh ${chk.emojies.cheart}`)); });\nmongoose.connection.on('disconnected', () => {\n  console.log(chk.success('Mongoose default connection disconnected'));\n});\nmongoose.connection.on('close', () => { console.log(chk.error('connecton closes hahh')); });\nprocess.on('SIGINT', () => {\n  mongoose.connection.close(() => {\n    console.log('Mongoose default connection is disconnected due to application termination');\n    process.exit(0);\n  });\n});\n\n\n// debug mode\nif (env === 'development') {\n  mongoose.set('debug', true);\n}\n\n\n/**\n * connect to db\n *\n * @return {object} - connection object\n * @public\n */\n\n\nexport default () => {\n  mongoose.connect(mongo.uri, {\n    /**\n * @keepAlive - to send packet every 120ms to checkk conectivity\n * @poolSize - number of socket to run operation on dbs\n * @reconntTries - number of tried connection after its drop\n * @reconnctInterval - time by ms of try to connect when its drop\n */\n    useNewUrlParser: true,\n    // keepAlive: 120,\n    poolSize: 10,\n    // reconnectTries: Number.MAX_VALUE,\n    // reconnectInterval: 500,\n\n  });\n  return mongoose.connection;\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1548346682517
  },
  "{\"sourceRoot\":\"/var/www/html/sales/hayderApp/app/backend/src/config\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/var/www/html/sales/hayderApp/app/backend\",\"filename\":\"/var/www/html/sales/hayderApp/app/backend/src/config/conf.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/var/www/html/sales/hayderApp/app/backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/config",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/var/www/html/sales/hayderApp/app/backend",
      "filename": "/var/www/html/sales/hayderApp/app/backend/src/config/conf.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/var/www/html/sales/hayderApp/app/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/var/www/html/sales/hayderApp/app/backend/src/config/conf.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/var/www/html/sales/hayderApp/app/backend/src/config/conf.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/config",
        "sourceFileName": "conf.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire('dotenv').config();\n\nmodule.exports = {\n  env: process.env.NODE_ENV,\n  mongo: {\n    uri: process.env.NODE_ENV === 'development' ? process.env.MONGO_URI_DEVELPMENT : process.env.MONGO_URI\n  },\n  jwt_scret: process.env.JWT_SECRET,\n  jwtInterval: process.env.JWT_INTERVAL_MIN,\n  port: process.env.PORT,\n  log: process.env.NODE_ENV === 'development' ? 'dev' : 'combined'\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmYuanMiXSwibmFtZXMiOlsicmVxdWlyZSIsImNvbmZpZyIsIm1vZHVsZSIsImV4cG9ydHMiLCJlbnYiLCJwcm9jZXNzIiwiTk9ERV9FTlYiLCJtb25nbyIsInVyaSIsIk1PTkdPX1VSSV9ERVZFTFBNRU5UIiwiTU9OR09fVVJJIiwiand0X3NjcmV0IiwiSldUX1NFQ1JFVCIsImp3dEludGVydmFsIiwiSldUX0lOVEVSVkFMX01JTiIsInBvcnQiLCJQT1JUIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxPQUFPLENBQUMsUUFBRCxDQUFQLENBQWtCQyxNQUFsQjs7QUFHQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBRWZDLEVBQUFBLEdBQUcsRUFBRUMsT0FBTyxDQUFDRCxHQUFSLENBQVlFLFFBRkY7QUFJZkMsRUFBQUEsS0FBSyxFQUFFO0FBQUVDLElBQUFBLEdBQUcsRUFBRUgsT0FBTyxDQUFDRCxHQUFSLENBQVlFLFFBQVosS0FBeUIsYUFBekIsR0FBeUNELE9BQU8sQ0FBQ0QsR0FBUixDQUFZSyxvQkFBckQsR0FBNEVKLE9BQU8sQ0FBQ0QsR0FBUixDQUFZTTtBQUEvRixHQUpRO0FBTWZDLEVBQUFBLFNBQVMsRUFBRU4sT0FBTyxDQUFDRCxHQUFSLENBQVlRLFVBTlI7QUFRZkMsRUFBQUEsV0FBVyxFQUFFUixPQUFPLENBQUNELEdBQVIsQ0FBWVUsZ0JBUlY7QUFVZkMsRUFBQUEsSUFBSSxFQUFFVixPQUFPLENBQUNELEdBQVIsQ0FBWVksSUFWSDtBQVlmQyxFQUFBQSxHQUFHLEVBQUVaLE9BQU8sQ0FBQ0QsR0FBUixDQUFZRSxRQUFaLEtBQXlCLGFBQXpCLEdBQXlDLEtBQXpDLEdBQWlEO0FBWnZDLENBQWpCIiwic291cmNlUm9vdCI6Ii92YXIvd3d3L2h0bWwvc2FsZXMvaGF5ZGVyQXBwL2FwcC9iYWNrZW5kL3NyYy9jb25maWciLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCdkb3RlbnYnKS5jb25maWcoKTtcblxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcblxuICBlbnY6IHByb2Nlc3MuZW52Lk5PREVfRU5WLFxuXG4gIG1vbmdvOiB7IHVyaTogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcgPyBwcm9jZXNzLmVudi5NT05HT19VUklfREVWRUxQTUVOVCA6IHByb2Nlc3MuZW52Lk1PTkdPX1VSSSB9LFxuXG4gIGp3dF9zY3JldDogcHJvY2Vzcy5lbnYuSldUX1NFQ1JFVCxcblxuICBqd3RJbnRlcnZhbDogcHJvY2Vzcy5lbnYuSldUX0lOVEVSVkFMX01JTixcblxuICBwb3J0OiBwcm9jZXNzLmVudi5QT1JULFxuXG4gIGxvZzogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcgPyAnZGV2JyA6ICdjb21iaW5lZCcsXG5cbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "conf.js"
      ],
      "names": [
        "require",
        "config",
        "module",
        "exports",
        "env",
        "process",
        "NODE_ENV",
        "mongo",
        "uri",
        "MONGO_URI_DEVELPMENT",
        "MONGO_URI",
        "jwt_scret",
        "JWT_SECRET",
        "jwtInterval",
        "JWT_INTERVAL_MIN",
        "port",
        "PORT",
        "log"
      ],
      "mappings": ";;AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAGAC,MAAM,CAACC,OAAP,GAAiB;AAEfC,EAAAA,GAAG,EAAEC,OAAO,CAACD,GAAR,CAAYE,QAFF;AAIfC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,GAAG,EAAEH,OAAO,CAACD,GAAR,CAAYE,QAAZ,KAAyB,aAAzB,GAAyCD,OAAO,CAACD,GAAR,CAAYK,oBAArD,GAA4EJ,OAAO,CAACD,GAAR,CAAYM;AAA/F,GAJQ;AAMfC,EAAAA,SAAS,EAAEN,OAAO,CAACD,GAAR,CAAYQ,UANR;AAQfC,EAAAA,WAAW,EAAER,OAAO,CAACD,GAAR,CAAYU,gBARV;AAUfC,EAAAA,IAAI,EAAEV,OAAO,CAACD,GAAR,CAAYY,IAVH;AAYfC,EAAAA,GAAG,EAAEZ,OAAO,CAACD,GAAR,CAAYE,QAAZ,KAAyB,aAAzB,GAAyC,KAAzC,GAAiD;AAZvC,CAAjB",
      "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/config",
      "sourcesContent": [
        "require('dotenv').config();\n\n\nmodule.exports = {\n\n  env: process.env.NODE_ENV,\n\n  mongo: { uri: process.env.NODE_ENV === 'development' ? process.env.MONGO_URI_DEVELPMENT : process.env.MONGO_URI },\n\n  jwt_scret: process.env.JWT_SECRET,\n\n  jwtInterval: process.env.JWT_INTERVAL_MIN,\n\n  port: process.env.PORT,\n\n  log: process.env.NODE_ENV === 'development' ? 'dev' : 'combined',\n\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1548335516919
  },
  "{\"sourceRoot\":\"/var/www/html/sales/hayderApp/app/backend/src/config\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/var/www/html/sales/hayderApp/app/backend\",\"filename\":\"/var/www/html/sales/hayderApp/app/backend/src/config/errorHandling.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/var/www/html/sales/hayderApp/app/backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/config",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/var/www/html/sales/hayderApp/app/backend",
      "filename": "/var/www/html/sales/hayderApp/app/backend/src/config/errorHandling.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/var/www/html/sales/hayderApp/app/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/var/www/html/sales/hayderApp/app/backend/src/config/errorHandling.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/var/www/html/sales/hayderApp/app/backend/src/config/errorHandling.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/config",
        "sourceFileName": "errorHandling.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _conf = require(\"./conf\");\n\n/**\n * @function handler\n * @param {OBJECT} error - which is {message , code, trace }\n */\nvar handler = function handler(err, req, res, next) {\n  var response = {\n    message: err.message,\n    code: err.status,\n    trace: err.stack\n  };\n\n  if (_conf.env !== 'development') {\n    delete response.trace;\n  }\n\n  res.status(response.code).send(response);\n  res.end();\n};\n\nvar _default = {\n  handler: handler\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVycm9ySGFuZGxpbmcuanMiXSwibmFtZXMiOlsiaGFuZGxlciIsImVyciIsInJlcSIsInJlcyIsIm5leHQiLCJyZXNwb25zZSIsIm1lc3NhZ2UiLCJjb2RlIiwic3RhdHVzIiwidHJhY2UiLCJzdGFjayIsImVudiIsInNlbmQiLCJlbmQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7OztBQUtBLElBQU1BLE9BQU8sR0FBRyxTQUFWQSxPQUFVLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxHQUFYLEVBQWdCQyxJQUFoQixFQUF5QjtBQUN2QyxNQUFNQyxRQUFRLEdBQUc7QUFDZkMsSUFBQUEsT0FBTyxFQUFFTCxHQUFHLENBQUNLLE9BREU7QUFFZkMsSUFBQUEsSUFBSSxFQUFFTixHQUFHLENBQUNPLE1BRks7QUFHZkMsSUFBQUEsS0FBSyxFQUFFUixHQUFHLENBQUNTO0FBSEksR0FBakI7O0FBTUEsTUFBSUMsY0FBUSxhQUFaLEVBQTJCO0FBQ3pCLFdBQU9OLFFBQVEsQ0FBQ0ksS0FBaEI7QUFDRDs7QUFDRE4sRUFBQUEsR0FBRyxDQUFDSyxNQUFKLENBQVdILFFBQVEsQ0FBQ0UsSUFBcEIsRUFBMEJLLElBQTFCLENBQStCUCxRQUEvQjtBQUNBRixFQUFBQSxHQUFHLENBQUNVLEdBQUo7QUFDRCxDQVpEOztlQWVlO0FBQ2JiLEVBQUFBLE9BQU8sRUFBUEE7QUFEYSxDIiwic291cmNlUm9vdCI6Ii92YXIvd3d3L2h0bWwvc2FsZXMvaGF5ZGVyQXBwL2FwcC9iYWNrZW5kL3NyYy9jb25maWciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBlbnYgfSBmcm9tICcuL2NvbmYnO1xuLyoqXG4gKiBAZnVuY3Rpb24gaGFuZGxlclxuICogQHBhcmFtIHtPQkpFQ1R9IGVycm9yIC0gd2hpY2ggaXMge21lc3NhZ2UgLCBjb2RlLCB0cmFjZSB9XG4gKi9cblxuY29uc3QgaGFuZGxlciA9IChlcnIsIHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIGNvbnN0IHJlc3BvbnNlID0ge1xuICAgIG1lc3NhZ2U6IGVyci5tZXNzYWdlLFxuICAgIGNvZGU6IGVyci5zdGF0dXMsXG4gICAgdHJhY2U6IGVyci5zdGFjayxcbiAgfTtcblxuICBpZiAoZW52ICE9PSAnZGV2ZWxvcG1lbnQnKSB7XG4gICAgZGVsZXRlIHJlc3BvbnNlLnRyYWNlO1xuICB9XG4gIHJlcy5zdGF0dXMocmVzcG9uc2UuY29kZSkuc2VuZChyZXNwb25zZSk7XG4gIHJlcy5lbmQoKTtcbn07XG5cblxuZXhwb3J0IGRlZmF1bHQge1xuICBoYW5kbGVyLFxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "errorHandling.js"
      ],
      "names": [
        "handler",
        "err",
        "req",
        "res",
        "next",
        "response",
        "message",
        "code",
        "status",
        "trace",
        "stack",
        "env",
        "send",
        "end"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAKA,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AACvC,MAAMC,QAAQ,GAAG;AACfC,IAAAA,OAAO,EAAEL,GAAG,CAACK,OADE;AAEfC,IAAAA,IAAI,EAAEN,GAAG,CAACO,MAFK;AAGfC,IAAAA,KAAK,EAAER,GAAG,CAACS;AAHI,GAAjB;;AAMA,MAAIC,cAAQ,aAAZ,EAA2B;AACzB,WAAON,QAAQ,CAACI,KAAhB;AACD;;AACDN,EAAAA,GAAG,CAACK,MAAJ,CAAWH,QAAQ,CAACE,IAApB,EAA0BK,IAA1B,CAA+BP,QAA/B;AACAF,EAAAA,GAAG,CAACU,GAAJ;AACD,CAZD;;eAee;AACbb,EAAAA,OAAO,EAAPA;AADa,C",
      "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/config",
      "sourcesContent": [
        "import { env } from './conf';\n/**\n * @function handler\n * @param {OBJECT} error - which is {message , code, trace }\n */\n\nconst handler = (err, req, res, next) => {\n  const response = {\n    message: err.message,\n    code: err.status,\n    trace: err.stack,\n  };\n\n  if (env !== 'development') {\n    delete response.trace;\n  }\n  res.status(response.code).send(response);\n  res.end();\n};\n\n\nexport default {\n  handler,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1548346084412
  },
  "{\"sourceRoot\":\"/var/www/html/sales/hayderApp/app/backend/src/config\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/var/www/html/sales/hayderApp/app/backend\",\"filename\":\"/var/www/html/sales/hayderApp/app/backend/src/config/errora.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/var/www/html/sales/hayderApp/app/backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/config",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/var/www/html/sales/hayderApp/app/backend",
      "filename": "/var/www/html/sales/hayderApp/app/backend/src/config/errora.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/var/www/html/sales/hayderApp/app/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/var/www/html/sales/hayderApp/app/backend/src/config/errora.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/var/www/html/sales/hayderApp/app/backend/src/config/errora.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/config",
        "sourceFileName": "errora.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @class {fancyError} - extends from Error object\n * @param {number} status - error code\n * @param {BOOLEAN} isDebug - to check if we in debug or production server\n *\n */\nvar fancyError =\n/*#__PURE__*/\nfunction (_Error) {\n  _inherits(fancyError, _Error);\n\n  function fancyError(args, _ref) {\n    var _this;\n\n    var status = _ref.status,\n        isDebug = _ref.isDebug;\n\n    _classCallCheck(this, fancyError);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(fancyError).call(this, args));\n    _this.status = status;\n    _this.isDebug = isDebug;\n    _this.name = _this.constructor.name;\n    return _this;\n  }\n\n  return fancyError;\n}(_wrapNativeSuper(Error));\n\nexports.default = fancyError;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVycm9yYS5qcyJdLCJuYW1lcyI6WyJmYW5jeUVycm9yIiwiYXJncyIsInN0YXR1cyIsImlzRGVidWciLCJuYW1lIiwiY29uc3RydWN0b3IiLCJFcnJvciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7Ozs7O0lBTXFCQSxVOzs7OztBQUNuQixzQkFBWUMsSUFBWixRQUF1QztBQUFBOztBQUFBLFFBQW5CQyxNQUFtQixRQUFuQkEsTUFBbUI7QUFBQSxRQUFYQyxPQUFXLFFBQVhBLE9BQVc7O0FBQUE7O0FBQ3JDLG9GQUFNRixJQUFOO0FBQ0EsVUFBS0MsTUFBTCxHQUFjQSxNQUFkO0FBQ0EsVUFBS0MsT0FBTCxHQUFlQSxPQUFmO0FBQ0EsVUFBS0MsSUFBTCxHQUFZLE1BQUtDLFdBQUwsQ0FBaUJELElBQTdCO0FBSnFDO0FBS3RDOzs7bUJBTnFDRSxLIiwic291cmNlUm9vdCI6Ii92YXIvd3d3L2h0bWwvc2FsZXMvaGF5ZGVyQXBwL2FwcC9iYWNrZW5kL3NyYy9jb25maWciLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBjbGFzcyB7ZmFuY3lFcnJvcn0gLSBleHRlbmRzIGZyb20gRXJyb3Igb2JqZWN0XG4gKiBAcGFyYW0ge251bWJlcn0gc3RhdHVzIC0gZXJyb3IgY29kZVxuICogQHBhcmFtIHtCT09MRUFOfSBpc0RlYnVnIC0gdG8gY2hlY2sgaWYgd2UgaW4gZGVidWcgb3IgcHJvZHVjdGlvbiBzZXJ2ZXJcbiAqXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGZhbmN5RXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIGNvbnN0cnVjdG9yKGFyZ3MsIHsgc3RhdHVzLCBpc0RlYnVnIH0pIHtcbiAgICBzdXBlcihhcmdzKTtcbiAgICB0aGlzLnN0YXR1cyA9IHN0YXR1cztcbiAgICB0aGlzLmlzRGVidWcgPSBpc0RlYnVnO1xuICAgIHRoaXMubmFtZSA9IHRoaXMuY29uc3RydWN0b3IubmFtZTtcbiAgfVxufVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "errora.js"
      ],
      "names": [
        "fancyError",
        "args",
        "status",
        "isDebug",
        "name",
        "constructor",
        "Error"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAMqBA,U;;;;;AACnB,sBAAYC,IAAZ,QAAuC;AAAA;;AAAA,QAAnBC,MAAmB,QAAnBA,MAAmB;AAAA,QAAXC,OAAW,QAAXA,OAAW;;AAAA;;AACrC,oFAAMF,IAAN;AACA,UAAKC,MAAL,GAAcA,MAAd;AACA,UAAKC,OAAL,GAAeA,OAAf;AACA,UAAKC,IAAL,GAAY,MAAKC,WAAL,CAAiBD,IAA7B;AAJqC;AAKtC;;;mBANqCE,K",
      "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/config",
      "sourcesContent": [
        "/**\n * @class {fancyError} - extends from Error object\n * @param {number} status - error code\n * @param {BOOLEAN} isDebug - to check if we in debug or production server\n *\n */\nexport default class fancyError extends Error {\n  constructor(args, { status, isDebug }) {\n    super(args);\n    this.status = status;\n    this.isDebug = isDebug;\n    this.name = this.constructor.name;\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1548340380880
  },
  "{\"sourceRoot\":\"/var/www/html/sales/hayderApp/app/backend/src/features\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/var/www/html/sales/hayderApp/app/backend\",\"filename\":\"/var/www/html/sales/hayderApp/app/backend/src/features/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/var/www/html/sales/hayderApp/app/backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/features",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/var/www/html/sales/hayderApp/app/backend",
      "filename": "/var/www/html/sales/hayderApp/app/backend/src/features/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/var/www/html/sales/hayderApp/app/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/var/www/html/sales/hayderApp/app/backend/src/features/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/var/www/html/sales/hayderApp/app/backend/src/features/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/features",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _individuals = _interopRequireDefault(require(\"./individuals/individuals.router\"));\n\nvar _trips = _interopRequireDefault(require(\"./trips/trips.router\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = {\n  individuals: _individuals.default,\n  trips: _trips.default\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImluZGl2aWR1YWxzIiwidHJpcHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7OztlQUVlO0FBQ2RBLEVBQUFBLFdBQVcsRUFBWEEsb0JBRGM7QUFFZEMsRUFBQUEsS0FBSyxFQUFMQTtBQUZjLEMiLCJzb3VyY2VSb290IjoiL3Zhci93d3cvaHRtbC9zYWxlcy9oYXlkZXJBcHAvYXBwL2JhY2tlbmQvc3JjL2ZlYXR1cmVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGluZGl2aWR1YWxzIGZyb20gJy4vaW5kaXZpZHVhbHMvaW5kaXZpZHVhbHMucm91dGVyJztcbmltcG9ydCB0cmlwcyBmcm9tIFwiLi90cmlwcy90cmlwcy5yb3V0ZXJcIjtcblxuZXhwb3J0IGRlZmF1bHQge1xuXHRpbmRpdmlkdWFscyxcblx0dHJpcHMsXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "individuals",
        "trips"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;eAEe;AACdA,EAAAA,WAAW,EAAXA,oBADc;AAEdC,EAAAA,KAAK,EAALA;AAFc,C",
      "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/features",
      "sourcesContent": [
        "import individuals from './individuals/individuals.router';\nimport trips from \"./trips/trips.router\";\n\nexport default {\n\tindividuals,\n\ttrips,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1548845047960
  },
  "{\"sourceRoot\":\"/var/www/html/sales/hayderApp/app/backend/src/features/individuals\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/var/www/html/sales/hayderApp/app/backend\",\"filename\":\"/var/www/html/sales/hayderApp/app/backend/src/features/individuals/validation.router.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/var/www/html/sales/hayderApp/app/backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/features/individuals",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/var/www/html/sales/hayderApp/app/backend",
      "filename": "/var/www/html/sales/hayderApp/app/backend/src/features/individuals/validation.router.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/var/www/html/sales/hayderApp/app/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/var/www/html/sales/hayderApp/app/backend/src/features/individuals/validation.router.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/var/www/html/sales/hayderApp/app/backend/src/features/individuals/validation.router.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/features/individuals",
        "sourceFileName": "validation.router.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = require(\"express\");\n\nvar _expressValidation = _interopRequireDefault(require(\"express-validation\"));\n\nvar _individual = require(\"./individual.validation\");\n\nvar _individual2 = _interopRequireDefault(require(\"./individual.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable import/no-unresolved */\n\n/* eslint-disable import/no-named-as-default */\nvar router = (0, _express.Router)(); // first rest urli for adding individual\n\nrouter.route('/individual').post((0, _expressValidation.default)(_individual.indi), _individual2.default.addIndivduals); // editing individual\n\nrouter.route('/individual/edit').patch((0, _expressValidation.default)(_individual.indi), _individual2.default.editIndividual); // deletting individual\n\nrouter.route('/individual/:id').delete((0, _expressValidation.default)(_individual.ID), _individual2.default.deleteIndivisual);\nvar _default = router;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZhbGlkYXRpb24ucm91dGVyLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsInJvdXRlIiwicG9zdCIsImluZGkiLCJjb250cm9sbGVyIiwiYWRkSW5kaXZkdWFscyIsInBhdGNoIiwiZWRpdEluZGl2aWR1YWwiLCJkZWxldGUiLCJJRCIsImRlbGV0ZUluZGl2aXN1YWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUxBOztBQUNBO0FBTUEsSUFBTUEsTUFBTSxHQUFHLHNCQUFmLEMsQ0FFQTs7QUFDQUEsTUFBTSxDQUFDQyxLQUFQLENBQWEsYUFBYixFQUE0QkMsSUFBNUIsQ0FBaUMsZ0NBQVNDLGdCQUFULENBQWpDLEVBQWlEQyxxQkFBV0MsYUFBNUQsRSxDQUVBOztBQUNBTCxNQUFNLENBQUNDLEtBQVAsQ0FBYSxrQkFBYixFQUFpQ0ssS0FBakMsQ0FBdUMsZ0NBQVNILGdCQUFULENBQXZDLEVBQXVEQyxxQkFBV0csY0FBbEUsRSxDQUdBOztBQUVBUCxNQUFNLENBQUNDLEtBQVAsQ0FBYSxpQkFBYixFQUFnQ08sTUFBaEMsQ0FBdUMsZ0NBQVNDLGNBQVQsQ0FBdkMsRUFBcURMLHFCQUFXTSxnQkFBaEU7ZUFHZVYsTSIsInNvdXJjZVJvb3QiOiIvdmFyL3d3dy9odG1sL3NhbGVzL2hheWRlckFwcC9hcHAvYmFja2VuZC9zcmMvZmVhdHVyZXMvaW5kaXZpZHVhbHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBpbXBvcnQvbm8tdW5yZXNvbHZlZCAqL1xuLyogZXNsaW50LWRpc2FibGUgaW1wb3J0L25vLW5hbWVkLWFzLWRlZmF1bHQgKi9cbmltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHZhbGlkYXRlIGZyb20gJ2V4cHJlc3MtdmFsaWRhdGlvbic7XG5pbXBvcnQgeyBpbmRpLCBJRCB9IGZyb20gJy4vaW5kaXZpZHVhbC52YWxpZGF0aW9uJztcbmltcG9ydCBjb250cm9sbGVyIGZyb20gJy4vaW5kaXZpZHVhbC5jb250cm9sbGVyJztcblxuY29uc3Qgcm91dGVyID0gUm91dGVyKCk7XG5cbi8vIGZpcnN0IHJlc3QgdXJsaSBmb3IgYWRkaW5nIGluZGl2aWR1YWxcbnJvdXRlci5yb3V0ZSgnL2luZGl2aWR1YWwnKS5wb3N0KHZhbGlkYXRlKGluZGkpLCBjb250cm9sbGVyLmFkZEluZGl2ZHVhbHMpO1xuXG4vLyBlZGl0aW5nIGluZGl2aWR1YWxcbnJvdXRlci5yb3V0ZSgnL2luZGl2aWR1YWwvZWRpdCcpLnBhdGNoKHZhbGlkYXRlKGluZGkpLCBjb250cm9sbGVyLmVkaXRJbmRpdmlkdWFsKTtcblxuXG4vLyBkZWxldHRpbmcgaW5kaXZpZHVhbFxuXG5yb3V0ZXIucm91dGUoJy9pbmRpdmlkdWFsLzppZCcpLmRlbGV0ZSh2YWxpZGF0ZShJRCksIGNvbnRyb2xsZXIuZGVsZXRlSW5kaXZpc3VhbCk7XG5cblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "validation.router.js"
      ],
      "names": [
        "router",
        "route",
        "post",
        "indi",
        "controller",
        "addIndivduals",
        "patch",
        "editIndividual",
        "delete",
        "ID",
        "deleteIndivisual"
      ],
      "mappings": ";;;;;;;AAEA;;AACA;;AACA;;AACA;;;;AALA;;AACA;AAMA,IAAMA,MAAM,GAAG,sBAAf,C,CAEA;;AACAA,MAAM,CAACC,KAAP,CAAa,aAAb,EAA4BC,IAA5B,CAAiC,gCAASC,gBAAT,CAAjC,EAAiDC,qBAAWC,aAA5D,E,CAEA;;AACAL,MAAM,CAACC,KAAP,CAAa,kBAAb,EAAiCK,KAAjC,CAAuC,gCAASH,gBAAT,CAAvC,EAAuDC,qBAAWG,cAAlE,E,CAGA;;AAEAP,MAAM,CAACC,KAAP,CAAa,iBAAb,EAAgCO,MAAhC,CAAuC,gCAASC,cAAT,CAAvC,EAAqDL,qBAAWM,gBAAhE;eAGeV,M",
      "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/features/individuals",
      "sourcesContent": [
        "/* eslint-disable import/no-unresolved */\n/* eslint-disable import/no-named-as-default */\nimport { Router } from 'express';\nimport validate from 'express-validation';\nimport { indi, ID } from './individual.validation';\nimport controller from './individual.controller';\n\nconst router = Router();\n\n// first rest urli for adding individual\nrouter.route('/individual').post(validate(indi), controller.addIndivduals);\n\n// editing individual\nrouter.route('/individual/edit').patch(validate(indi), controller.editIndividual);\n\n\n// deletting individual\n\nrouter.route('/individual/:id').delete(validate(ID), controller.deleteIndivisual);\n\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1548647922291
  },
  "{\"sourceRoot\":\"/var/www/html/sales/hayderApp/app/backend/src/features/individuals\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/var/www/html/sales/hayderApp/app/backend\",\"filename\":\"/var/www/html/sales/hayderApp/app/backend/src/features/individuals/individual.validation.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/var/www/html/sales/hayderApp/app/backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/features/individuals",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/var/www/html/sales/hayderApp/app/backend",
      "filename": "/var/www/html/sales/hayderApp/app/backend/src/features/individuals/individual.validation.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/var/www/html/sales/hayderApp/app/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/var/www/html/sales/hayderApp/app/backend/src/features/individuals/individual.validation.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/var/www/html/sales/hayderApp/app/backend/src/features/individuals/individual.validation.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/features/individuals",
        "sourceFileName": "individual.validation.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.indi = exports.ID = void 0;\n\nvar _joi = _interopRequireDefault(require(\"joi\"));\n\nvar _joi$object;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar str = _joi.default.string();\n\nvar ary = _joi.default.array();\n\nvar phoneObject = _joi.default.object({\n  service: str,\n  num: str.max(14).min(8)\n});\n\nvar mstatus = ['متزوج', 'اعزب'];\nvar Sstatus = ['خريج', 'طالب', 'امي'];\nvar tstudy = ['ابتدائي', 'متوسط', 'اعدادي', 'ثانوي', 'دبلوم', 'بكلوريوس', 'ماجستير', 'دكتوراه'];\n\nvar socialObject = _joi.default.object({\n  type: str,\n  url: str.uri()\n});\n\nvar ID = {\n  params: {\n    id: str.required()\n  }\n};\nexports.ID = ID;\nvar indi = {\n  body: {\n    data: _joi.default.object((_joi$object = {\n      // name must be string between > 3 character and < 40 and it is a must value\n      name: str.min(2).max(30).required(),\n      // father name string  > 3 character and < 20\n      fatherName: str.min(2).max(30),\n      //  name string  > 3 character and < 20\n      motherName: str,\n      //  name string  > 3 character and < 20\n      familyName: str.min(2).max(30),\n      // father name string  > 3 character and < 20\n      nickName: str.min(2).max(30),\n      // birth date must be less than 1-1-2018\n      birthDate: _joi.default.date().max('1-1-2018'),\n      // gender must be one of these spc values\n      gender: str.valid('ذكر', 'انثى'),\n      // phones is array of objects\n      phones: ary.items(phoneObject),\n      // email must be lower case\n      emails: ary.items(str.email().lowercase()),\n      // soicl is array of object must type be  strign and url is uri\n      social: ary.items(socialObject),\n      // city string between 3 and 20\n      city: str.min(3).max(20),\n      state: str.min(3).max(20),\n      zqaq: str.max(4),\n      mahla: str.max(4),\n      homeNum: str.max(10),\n      // string between 3 and 30\n      pointCenter: str.min(3).max(30),\n      applyDate: _joi.default.date(),\n      byWho: str,\n      who: str,\n      status: str,\n      gifts: ary.items(str),\n      hobbies: ary.items(str),\n      extra: ary.items(str),\n      majorJob: str,\n      minorJob: str,\n      workPlace: str,\n      hireDate: _joi.default.date().max('now'),\n      martialStaus: str.allow(mstatus),\n      image: str,\n      numOfChild: _joi.default.number().min(1).max(20),\n      type: ary.items(str),\n      notes: str,\n      grade: str,\n      graduationDate: _joi.default.date().max('now'),\n      special: ary.items(str)\n    }, _defineProperty(_joi$object, \"status\", str.allow(Sstatus)), _defineProperty(_joi$object, \"typeStudy\", str.allow(tstudy)), _joi$object))\n  }\n};\nexports.indi = indi;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "individual.validation.js"
      ],
      "names": [
        "str",
        "joi",
        "string",
        "ary",
        "array",
        "phoneObject",
        "object",
        "service",
        "num",
        "max",
        "min",
        "mstatus",
        "Sstatus",
        "tstudy",
        "socialObject",
        "type",
        "url",
        "uri",
        "ID",
        "params",
        "id",
        "required",
        "indi",
        "body",
        "data",
        "name",
        "fatherName",
        "motherName",
        "familyName",
        "nickName",
        "birthDate",
        "date",
        "gender",
        "valid",
        "phones",
        "items",
        "emails",
        "email",
        "lowercase",
        "social",
        "city",
        "state",
        "zqaq",
        "mahla",
        "homeNum",
        "pointCenter",
        "applyDate",
        "byWho",
        "who",
        "status",
        "gifts",
        "hobbies",
        "extra",
        "majorJob",
        "minorJob",
        "workPlace",
        "hireDate",
        "martialStaus",
        "allow",
        "image",
        "numOfChild",
        "number",
        "notes",
        "grade",
        "graduationDate",
        "special"
      ],
      "mappings": ";;;;;;;AAEA;;;;;;;;AAEA,IAAMA,GAAG,GAAGC,aAAIC,MAAJ,EAAZ;;AACA,IAAMC,GAAG,GAAGF,aAAIG,KAAJ,EAAZ;;AACA,IAAMC,WAAW,GAAGJ,aAAIK,MAAJ,CAAW;AAC7BC,EAAAA,OAAO,EAAEP,GADoB;AAE7BQ,EAAAA,GAAG,EAAER,GAAG,CAACS,GAAJ,CAAQ,EAAR,EAAYC,GAAZ,CAAgB,CAAhB;AAFwB,CAAX,CAApB;;AAIA,IAAMC,OAAO,GAAG,CAAC,OAAD,EAAU,MAAV,CAAhB;AACA,IAAMC,OAAO,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,KAAjB,CAAhB;AACA,IAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,OAAZ,EAAqB,QAArB,EAA+B,OAA/B,EAAwC,OAAxC,EAAiD,UAAjD,EAA6D,SAA7D,EAAwE,SAAxE,CAAf;;AACA,IAAMC,YAAY,GAAGb,aAAIK,MAAJ,CAAW;AAC9BS,EAAAA,IAAI,EAAEf,GADwB;AAE9BgB,EAAAA,GAAG,EAAEhB,GAAG,CAACiB,GAAJ;AAFyB,CAAX,CAArB;;AAKO,IAAMC,EAAE,GAAG;AAChBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,EAAE,EAAEpB,GAAG,CAACqB,QAAJ;AADE;AADQ,CAAX;;AAMA,IAAMC,IAAI,GAAG;AAElBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAEvB,aAAIK,MAAJ;AACN;AACEmB,MAAAA,IAAI,EAAEzB,GAAG,CAACU,GAAJ,CAAQ,CAAR,EAAWD,GAAX,CAAe,EAAf,EAAmBY,QAAnB,EAFF;AAGJ;AACAK,MAAAA,UAAU,EAAE1B,GAAG,CAACU,GAAJ,CAAQ,CAAR,EAAWD,GAAX,CAAe,EAAf,CAJR;AAMJ;AACAkB,MAAAA,UAAU,EAAE3B,GAPR;AASJ;AACA4B,MAAAA,UAAU,EAAE5B,GAAG,CAACU,GAAJ,CAAQ,CAAR,EAAWD,GAAX,CAAe,EAAf,CAVR;AAYJ;AACAoB,MAAAA,QAAQ,EAAE7B,GAAG,CAACU,GAAJ,CAAQ,CAAR,EAAWD,GAAX,CAAe,EAAf,CAbN;AAeJ;AACAqB,MAAAA,SAAS,EAAE7B,aAAI8B,IAAJ,GAAWtB,GAAX,CAAe,UAAf,CAhBP;AAiBJ;AACAuB,MAAAA,MAAM,EAAEhC,GAAG,CAACiC,KAAJ,CAAU,KAAV,EAAiB,MAAjB,CAlBJ;AAoBJ;AACAC,MAAAA,MAAM,EAAE/B,GAAG,CAACgC,KAAJ,CAAU9B,WAAV,CArBJ;AAuBJ;AACA+B,MAAAA,MAAM,EAAEjC,GAAG,CAACgC,KAAJ,CAAUnC,GAAG,CAACqC,KAAJ,GAAYC,SAAZ,EAAV,CAxBJ;AA0BJ;AACAC,MAAAA,MAAM,EAAEpC,GAAG,CAACgC,KAAJ,CAAUrB,YAAV,CA3BJ;AA6BJ;AACA0B,MAAAA,IAAI,EAAExC,GAAG,CAACU,GAAJ,CAAQ,CAAR,EAAWD,GAAX,CAAe,EAAf,CA9BF;AA+BJgC,MAAAA,KAAK,EAAEzC,GAAG,CAACU,GAAJ,CAAQ,CAAR,EAAWD,GAAX,CAAe,EAAf,CA/BH;AAiCJiC,MAAAA,IAAI,EAAE1C,GAAG,CAACS,GAAJ,CAAQ,CAAR,CAjCF;AAkCJkC,MAAAA,KAAK,EAAE3C,GAAG,CAACS,GAAJ,CAAQ,CAAR,CAlCH;AAoCJmC,MAAAA,OAAO,EAAE5C,GAAG,CAACS,GAAJ,CAAQ,EAAR,CApCL;AAqCJ;AACAoC,MAAAA,WAAW,EAAE7C,GAAG,CAACU,GAAJ,CAAQ,CAAR,EAAWD,GAAX,CAAe,EAAf,CAtCT;AAwCJqC,MAAAA,SAAS,EAAE7C,aAAI8B,IAAJ,EAxCP;AA0CJgB,MAAAA,KAAK,EAAE/C,GA1CH;AA2CJgD,MAAAA,GAAG,EAAEhD,GA3CD;AA4CJiD,MAAAA,MAAM,EAAEjD,GA5CJ;AA+CJkD,MAAAA,KAAK,EAAE/C,GAAG,CAACgC,KAAJ,CAAUnC,GAAV,CA/CH;AAgDJmD,MAAAA,OAAO,EAAEhD,GAAG,CAACgC,KAAJ,CAAUnC,GAAV,CAhDL;AAiDJoD,MAAAA,KAAK,EAAEjD,GAAG,CAACgC,KAAJ,CAAUnC,GAAV,CAjDH;AAoDJqD,MAAAA,QAAQ,EAAErD,GApDN;AAqDJsD,MAAAA,QAAQ,EAAEtD,GArDN;AAsDJuD,MAAAA,SAAS,EAAEvD,GAtDP;AAuDJwD,MAAAA,QAAQ,EAAEvD,aAAI8B,IAAJ,GAAWtB,GAAX,CAAe,KAAf,CAvDN;AA0DJgD,MAAAA,YAAY,EAAEzD,GAAG,CAAC0D,KAAJ,CAAU/C,OAAV,CA1DV;AA2DJgD,MAAAA,KAAK,EAAE3D,GA3DH;AA4DJ4D,MAAAA,UAAU,EAAE3D,aAAI4D,MAAJ,GAAanD,GAAb,CAAiB,CAAjB,EAAoBD,GAApB,CAAwB,EAAxB,CA5DR;AA6DJM,MAAAA,IAAI,EAAEZ,GAAG,CAACgC,KAAJ,CAAUnC,GAAV,CA7DF;AA8DJ8D,MAAAA,KAAK,EAAE9D,GA9DH;AAiEJ+D,MAAAA,KAAK,EAAE/D,GAjEH;AAkEJgE,MAAAA,cAAc,EAAE/D,aAAI8B,IAAJ,GAAWtB,GAAX,CAAe,KAAf,CAlEZ;AAmEJwD,MAAAA,OAAO,EAAE9D,GAAG,CAACgC,KAAJ,CAAUnC,GAAV;AAnEL,8CAoEIA,GAAG,CAAC0D,KAAJ,CAAU9C,OAAV,CApEJ,6CAqEOZ,GAAG,CAAC0D,KAAJ,CAAU7C,MAAV,CArEP;AADF;AAFY,CAAb",
      "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/features/individuals",
      "sourcesContent": [
        "/* eslint-disable no-dupe-keys */\n/* eslint-disable import/prefer-default-export */\nimport joi from 'joi';\n\nconst str = joi.string();\nconst ary = joi.array();\nconst phoneObject = joi.object({\n  service: str,\n  num: str.max(14).min(8),\n});\nconst mstatus = ['متزوج', 'اعزب'];\nconst Sstatus = ['خريج', 'طالب', 'امي'];\nconst tstudy = ['ابتدائي', 'متوسط', 'اعدادي', 'ثانوي', 'دبلوم', 'بكلوريوس', 'ماجستير', 'دكتوراه'];\nconst socialObject = joi.object({\n  type: str,\n  url: str.uri(),\n});\n\nexport const ID = {\n  params: {\n    id: str.required(),\n  },\n};\n\nexport const indi = {\n\n  body: {\n    data: joi.object({\n    // name must be string between > 3 character and < 40 and it is a must value\n      name: str.min(2).max(30).required(),\n      // father name string  > 3 character and < 20\n      fatherName: str.min(2).max(30),\n\n      //  name string  > 3 character and < 20\n      motherName: str,\n\n      //  name string  > 3 character and < 20\n      familyName: str.min(2).max(30),\n\n      // father name string  > 3 character and < 20\n      nickName: str.min(2).max(30),\n\n      // birth date must be less than 1-1-2018\n      birthDate: joi.date().max('1-1-2018'),\n      // gender must be one of these spc values\n      gender: str.valid('ذكر', 'انثى'),\n\n      // phones is array of objects\n      phones: ary.items(phoneObject),\n\n      // email must be lower case\n      emails: ary.items(str.email().lowercase()),\n\n      // soicl is array of object must type be  strign and url is uri\n      social: ary.items(socialObject),\n\n      // city string between 3 and 20\n      city: str.min(3).max(20),\n      state: str.min(3).max(20),\n\n      zqaq: str.max(4),\n      mahla: str.max(4),\n\n      homeNum: str.max(10),\n      // string between 3 and 30\n      pointCenter: str.min(3).max(30),\n\n      applyDate: joi.date(),\n\n      byWho: str,\n      who: str,\n      status: str,\n\n\n      gifts: ary.items(str),\n      hobbies: ary.items(str),\n      extra: ary.items(str),\n\n\n      majorJob: str,\n      minorJob: str,\n      workPlace: str,\n      hireDate: joi.date().max('now'),\n\n\n      martialStaus: str.allow(mstatus),\n      image: str,\n      numOfChild: joi.number().min(1).max(20),\n      type: ary.items(str),\n      notes: str,\n\n\n      grade: str,\n      graduationDate: joi.date().max('now'),\n      special: ary.items(str),\n      status: str.allow(Sstatus),\n      typeStudy: str.allow(tstudy),\n    }),\n  },\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1548648109120
  },
  "{\"sourceRoot\":\"/var/www/html/sales/hayderApp/app/backend/src/features/individuals\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/var/www/html/sales/hayderApp/app/backend\",\"filename\":\"/var/www/html/sales/hayderApp/app/backend/src/features/individuals/individual.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/var/www/html/sales/hayderApp/app/backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/features/individuals",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/var/www/html/sales/hayderApp/app/backend",
      "filename": "/var/www/html/sales/hayderApp/app/backend/src/features/individuals/individual.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/var/www/html/sales/hayderApp/app/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/var/www/html/sales/hayderApp/app/backend/src/features/individuals/individual.controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/var/www/html/sales/hayderApp/app/backend/src/features/individuals/individual.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/features/individuals",
        "sourceFileName": "individual.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _indivisual = _interopRequireDefault(require(\"./indivisual.model\"));\n\nvar _chalking = _interopRequireDefault(require(\"../../config/chalking\"));\n\nvar _errora = _interopRequireDefault(require(\"../../config/errora\"));\n\nvar _resonses = require(\"../../helpers/resonses\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable import/no-named-as-default-member */\n// const e = new _E()\n// add fuckers to database\nvar addIndivduals = function addIndivduals(req, res, next) {\n  console.log('add individual'); // extract data from body request of http\n  // data hold all form data of peoples\n\n  var data = req.body.data;\n  var newInde = new _indivisual.default(); // construct schema object again\n\n  newInde.basicInfo = {\n    name: data.name,\n    fatherName: data.fatherName,\n    motherName: data.motherName,\n    familyName: data.familyName,\n    nickName: data.nickName,\n    birthDate: data.birthDate,\n    gender: data.gender\n  };\n  newInde.contactInfo = {\n    phones: data.phones,\n    emails: data.emails,\n    social: data.social\n  };\n  newInde.address = {\n    city: data.city,\n    state: data.state,\n    zqaq: data.zqaq,\n    mahla: data.mahla,\n    homeNum: data.homeNum,\n    pointCenter: data.pointCenter\n  };\n  newInde.applicationInfo = {\n    applyDate: data.applyDate,\n    byWho: data.byWho,\n    who: data.who,\n    status: data.status\n  };\n  newInde.skill = {\n    gifts: data.gifts,\n    hobbies: data.hobbies,\n    extra: data.extra\n  };\n  newInde.jonsInfo = {\n    majorJob: data.majorJob,\n    minorJob: data.minorJob,\n    workPlace: data.workPlace,\n    hireDate: data.hireDate\n  }; // eslint-disable-next-line no-unused-expressions\n\n  newInde.generalInfo = {\n    martialStaus: data.martialStatus,\n    image: data.image,\n    numOfChild: data.children,\n    type: data.gtype,\n    notes: data.notes\n  };\n  newInde.study = {\n    grade: data.grade,\n    graduationDate: data.graduationDate,\n    special: data.special,\n    status: data.Sstatus,\n    typeStudy: data.tstudy\n  };\n  newInde.save().then(function (ind) {\n    return (0, _resonses.cleanResponse)(res, {\n      code: 200,\n      msg: 'لقد قمت باضافه انسان جديد للنظان ^__^'\n    });\n  }).catch(function (err) {\n    // debuging error\n    console.log(_chalking.default.error(err));\n    return res.send({\n      msg: err.message,\n      code: err.code\n    }); // handling error\n    // next(err);\n  });\n}; // delete fucker from database\n\n\nvar deleteIndivisual = function deleteIndivisual(req, res, next) {\n  var id = req.params.id;\n  console.log('delete individual');\n\n  _indivisual.default.findByIdAndDelete(id).then(function (indi) {\n    return (0, _resonses.cleanResponse)(res, {\n      code: 200,\n      msg: 'لقد قمت بنجاح بمسح هذا الكائن الحي'\n    });\n  }).catch(function (err) {\n    console.log(_chalking.default.error(err.message)); // res.send({msg:err.message})\n\n    return next(err);\n  });\n}; // edit fucker upon the database\n\n\nvar editIndividual = function editIndividual(req, res, next) {\n  console.log('edit individual');\n  var data = req.body.data;\n  var id = req.body.id;\n  var newInde = new _indivisual.default(); // construct schema object again\n\n  newInde.basicInfo = {\n    name: data.name,\n    fatherName: data.fatherName,\n    motherName: data.motherName,\n    familyName: data.familyName,\n    nickName: data.nickName,\n    birthDate: data.birthDate,\n    gender: data.gender\n  };\n  newInde.contactInfo = {\n    phones: data.phones,\n    emails: data.emails,\n    social: data.social\n  };\n  newInde.address = {\n    city: data.city,\n    state: data.state,\n    zqaq: data.zqaq,\n    mahla: data.mahla,\n    homeNum: data.homeNum,\n    pointCenter: data.pointCenter\n  };\n  newInde.applicationInfo = {\n    applyDate: data.applyDate,\n    byWho: data.byWho,\n    who: data.who,\n    status: data.status\n  };\n  newInde.skill = {\n    gifts: data.gifts,\n    hobbies: data.hobbies,\n    extra: data.extra\n  };\n  newInde.jonsInfo = {\n    majorJob: data.majorJob,\n    minorJob: data.minorJob,\n    workPlace: data.workPlace,\n    hireDate: data.hireDate\n  }; // eslint-disable-next-line no-unused-expressions\n\n  newInde.generalInfo = {\n    martialStaus: data.martialStatus,\n    image: data.image,\n    numOfChild: data.children,\n    type: data.gtype,\n    notes: data.notes\n  };\n  newInde.study = {\n    grade: data.grade,\n    graduationDate: data.graduationDate,\n    special: data.special,\n    status: data.Sstatus,\n    typeStudy: data.tstudy\n  };\n\n  _indivisual.default.findByIdAndUpdate(id, newInde).then(function (indi) {\n    return (0, _resonses.cleanResponse)(res, {\n      code: 200,\n      msg: 'لقد قمت بتعديل الكائن الحي'\n    });\n  }).catch(function (err) {\n    console.log(_chalking.default.error(err));\n    return next(err);\n  });\n};\n\nvar getIndividuals = function getIndividuals(req, res, next) {\n  var _req$query = req.query,\n      p = _req$query.p,\n      l = _req$query.l,\n      pt = _req$query.pt,\n      id = _req$query.id;\n  console.log(pt); // pagination formla\n\n  var skip = l * (p - 1); // one api for all individuals and for one\n\n  if (pt === 'indi_tables') {\n    var data = {};\n\n    _indivisual.default.find({}, {\n      contactInfo: 1,\n      basicInfo: 1,\n      id: 1,\n      created_at: 1\n    }, {\n      skip: skip,\n      limit: parseInt(l)\n    }).then(function (indis) {\n      data.indis = indis;\n      console.log(indis);\n      return _indivisual.default.countDocuments();\n    }).then(function (counts) {\n      data.pages = counts;\n    }).then(function () {\n      return (0, _resonses.cleanResponse)(res, {\n        code: 200,\n        msg: \"لقد قمت ب البحث \",\n        data: data\n      });\n    }).catch(function (err) {\n      console.log(_chalking.default.error(err));\n    });\n  } else if (pt === 'indi_one' && id) {\n    _indivisual.default.findById(id).then(function (indi) {\n      return (0, _resonses.cleanResponse)(res, {\n        code: 200,\n        msg: \"لقد احضرت الانسان\",\n        data: {\n          indi: indi\n        }\n      });\n    }).catch(function (err) {\n      return console.log(_chalking.default.error(err));\n    });\n  } else {\n    // return next(e)\n    console.log('noTHin here');\n  }\n};\n\nvar _default = {\n  editIndividual: editIndividual,\n  addIndivduals: addIndivduals,\n  deleteIndivisual: deleteIndivisual,\n  getIndividuals: getIndividuals\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "individual.controller.js"
      ],
      "names": [
        "addIndivduals",
        "req",
        "res",
        "next",
        "console",
        "log",
        "data",
        "body",
        "newInde",
        "INDE",
        "basicInfo",
        "name",
        "fatherName",
        "motherName",
        "familyName",
        "nickName",
        "birthDate",
        "gender",
        "contactInfo",
        "phones",
        "emails",
        "social",
        "address",
        "city",
        "state",
        "zqaq",
        "mahla",
        "homeNum",
        "pointCenter",
        "applicationInfo",
        "applyDate",
        "byWho",
        "who",
        "status",
        "skill",
        "gifts",
        "hobbies",
        "extra",
        "jonsInfo",
        "majorJob",
        "minorJob",
        "workPlace",
        "hireDate",
        "generalInfo",
        "martialStaus",
        "martialStatus",
        "image",
        "numOfChild",
        "children",
        "type",
        "gtype",
        "notes",
        "study",
        "grade",
        "graduationDate",
        "special",
        "Sstatus",
        "typeStudy",
        "tstudy",
        "save",
        "then",
        "ind",
        "code",
        "msg",
        "catch",
        "err",
        "_c",
        "error",
        "send",
        "message",
        "deleteIndivisual",
        "id",
        "params",
        "findByIdAndDelete",
        "indi",
        "editIndividual",
        "findByIdAndUpdate",
        "getIndividuals",
        "query",
        "p",
        "l",
        "pt",
        "skip",
        "find",
        "created_at",
        "limit",
        "parseInt",
        "indis",
        "countDocuments",
        "counts",
        "pages",
        "findById"
      ],
      "mappings": ";;;;;;;AACA;;AACA;;AACA;;AAEA;;;;AALA;AAIA;AAKA;AACA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EADwC,CAExC;AACA;;AAHwC,MAKhCC,IALgC,GAKvBL,GAAG,CAACM,IALmB,CAKhCD,IALgC;AAMxC,MAAME,OAAO,GAAG,IAAIC,mBAAJ,EAAhB,CANwC,CAQxC;;AACAD,EAAAA,OAAO,CAACE,SAAR,GAAoB;AAClBC,IAAAA,IAAI,EAAEL,IAAI,CAACK,IADO;AAElBC,IAAAA,UAAU,EAAEN,IAAI,CAACM,UAFC;AAGlBC,IAAAA,UAAU,EAAEP,IAAI,CAACO,UAHC;AAIlBC,IAAAA,UAAU,EAAER,IAAI,CAACQ,UAJC;AAKlBC,IAAAA,QAAQ,EAAET,IAAI,CAACS,QALG;AAMlBC,IAAAA,SAAS,EAAEV,IAAI,CAACU,SANE;AAOlBC,IAAAA,MAAM,EAAEX,IAAI,CAACW;AAPK,GAApB;AASAT,EAAAA,OAAO,CAACU,WAAR,GAAsB;AACpBC,IAAAA,MAAM,EAAEb,IAAI,CAACa,MADO;AAEpBC,IAAAA,MAAM,EAAEd,IAAI,CAACc,MAFO;AAGpBC,IAAAA,MAAM,EAAEf,IAAI,CAACe;AAHO,GAAtB;AAKAb,EAAAA,OAAO,CAACc,OAAR,GAAkB;AAChBC,IAAAA,IAAI,EAAEjB,IAAI,CAACiB,IADK;AAEhBC,IAAAA,KAAK,EAAElB,IAAI,CAACkB,KAFI;AAGhBC,IAAAA,IAAI,EAAEnB,IAAI,CAACmB,IAHK;AAIhBC,IAAAA,KAAK,EAAEpB,IAAI,CAACoB,KAJI;AAKhBC,IAAAA,OAAO,EAAErB,IAAI,CAACqB,OALE;AAMhBC,IAAAA,WAAW,EAAEtB,IAAI,CAACsB;AANF,GAAlB;AAQApB,EAAAA,OAAO,CAACqB,eAAR,GAA0B;AACxBC,IAAAA,SAAS,EAAExB,IAAI,CAACwB,SADQ;AAExBC,IAAAA,KAAK,EAAEzB,IAAI,CAACyB,KAFY;AAGxBC,IAAAA,GAAG,EAAE1B,IAAI,CAAC0B,GAHc;AAIxBC,IAAAA,MAAM,EAAE3B,IAAI,CAAC2B;AAJW,GAA1B;AAMAzB,EAAAA,OAAO,CAAC0B,KAAR,GAAgB;AACdC,IAAAA,KAAK,EAAE7B,IAAI,CAAC6B,KADE;AAEdC,IAAAA,OAAO,EAAE9B,IAAI,CAAC8B,OAFA;AAGdC,IAAAA,KAAK,EAAE/B,IAAI,CAAC+B;AAHE,GAAhB;AAKA7B,EAAAA,OAAO,CAAC8B,QAAR,GAAmB;AACjBC,IAAAA,QAAQ,EAAEjC,IAAI,CAACiC,QADE;AAEjBC,IAAAA,QAAQ,EAAElC,IAAI,CAACkC,QAFE;AAGjBC,IAAAA,SAAS,EAAEnC,IAAI,CAACmC,SAHC;AAIjBC,IAAAA,QAAQ,EAAEpC,IAAI,CAACoC;AAJE,GAAnB,CA1CwC,CAgDxC;;AACAlC,EAAAA,OAAO,CAACmC,WAAR,GAAsB;AACpBC,IAAAA,YAAY,EAAEtC,IAAI,CAACuC,aADC;AAEpBC,IAAAA,KAAK,EAAExC,IAAI,CAACwC,KAFQ;AAGpBC,IAAAA,UAAU,EAAEzC,IAAI,CAAC0C,QAHG;AAIpBC,IAAAA,IAAI,EAAE3C,IAAI,CAAC4C,KAJS;AAKpBC,IAAAA,KAAK,EAAE7C,IAAI,CAAC6C;AALQ,GAAtB;AAOA3C,EAAAA,OAAO,CAAC4C,KAAR,GAAgB;AACdC,IAAAA,KAAK,EAAE/C,IAAI,CAAC+C,KADE;AAEdC,IAAAA,cAAc,EAAEhD,IAAI,CAACgD,cAFP;AAGdC,IAAAA,OAAO,EAAEjD,IAAI,CAACiD,OAHA;AAIdtB,IAAAA,MAAM,EAAE3B,IAAI,CAACkD,OAJC;AAKdC,IAAAA,SAAS,EAAEnD,IAAI,CAACoD;AALF,GAAhB;AAQAlD,EAAAA,OAAO,CAACmD,IAAR,GACGC,IADH,CACQ,UAAAC,GAAG;AAAA,WAAI,6BAAc3D,GAAd,EAAmB;AAAE4D,MAAAA,IAAI,EAAE,GAAR;AAAaC,MAAAA,GAAG,EAAE;AAAlB,KAAnB,CAAJ;AAAA,GADX,EAEGC,KAFH,CAES,UAACC,GAAD,EAAS;AAChB;AACE7D,IAAAA,OAAO,CAACC,GAAR,CAAY6D,kBAAGC,KAAH,CAASF,GAAT,CAAZ;AACA,WAAO/D,GAAG,CAACkE,IAAJ,CAAS;AAAEL,MAAAA,GAAG,EAAEE,GAAG,CAACI,OAAX;AAAoBP,MAAAA,IAAI,EAAEG,GAAG,CAACH;AAA9B,KAAT,CAAP,CAHc,CAId;AACA;AACD,GARH;AASD,CAzED,C,CA2EA;;;AACA,IAAMQ,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACrE,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAAA,MACnCoE,EADmC,GAC5BtE,GAAG,CAACuE,MADwB,CACnCD,EADmC;AAE3CnE,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;;AACAI,sBAAKgE,iBAAL,CAAuBF,EAAvB,EACGX,IADH,CACQ,UAAAc,IAAI;AAAA,WAAI,6BAAcxE,GAAd,EAAmB;AAAE4D,MAAAA,IAAI,EAAE,GAAR;AAAaC,MAAAA,GAAG,EAAE;AAAlB,KAAnB,CAAJ;AAAA,GADZ,EAEGC,KAFH,CAES,UAACC,GAAD,EAAS;AACd7D,IAAAA,OAAO,CAACC,GAAR,CAAY6D,kBAAGC,KAAH,CAASF,GAAG,CAACI,OAAb,CAAZ,EADc,CAEd;;AACA,WAAOlE,IAAI,CAAC8D,GAAD,CAAX;AACD,GANH;AAOD,CAVD,C,CAYA;;;AACA,IAAMU,cAAc,GAAG,SAAjBA,cAAiB,CAAC1E,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACzCC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AADyC,MAEjCC,IAFiC,GAExBL,GAAG,CAACM,IAFoB,CAEjCD,IAFiC;AAAA,MAGjCiE,EAHiC,GAG1BtE,GAAG,CAACM,IAHsB,CAGjCgE,EAHiC;AAIzC,MAAM/D,OAAO,GAAG,IAAIC,mBAAJ,EAAhB,CAJyC,CAMzC;;AACAD,EAAAA,OAAO,CAACE,SAAR,GAAoB;AAClBC,IAAAA,IAAI,EAAEL,IAAI,CAACK,IADO;AAElBC,IAAAA,UAAU,EAAEN,IAAI,CAACM,UAFC;AAGlBC,IAAAA,UAAU,EAAEP,IAAI,CAACO,UAHC;AAIlBC,IAAAA,UAAU,EAAER,IAAI,CAACQ,UAJC;AAKlBC,IAAAA,QAAQ,EAAET,IAAI,CAACS,QALG;AAMlBC,IAAAA,SAAS,EAAEV,IAAI,CAACU,SANE;AAOlBC,IAAAA,MAAM,EAAEX,IAAI,CAACW;AAPK,GAApB;AASAT,EAAAA,OAAO,CAACU,WAAR,GAAsB;AACpBC,IAAAA,MAAM,EAAEb,IAAI,CAACa,MADO;AAEpBC,IAAAA,MAAM,EAAEd,IAAI,CAACc,MAFO;AAGpBC,IAAAA,MAAM,EAAEf,IAAI,CAACe;AAHO,GAAtB;AAKAb,EAAAA,OAAO,CAACc,OAAR,GAAkB;AAChBC,IAAAA,IAAI,EAAEjB,IAAI,CAACiB,IADK;AAEhBC,IAAAA,KAAK,EAAElB,IAAI,CAACkB,KAFI;AAGhBC,IAAAA,IAAI,EAAEnB,IAAI,CAACmB,IAHK;AAIhBC,IAAAA,KAAK,EAAEpB,IAAI,CAACoB,KAJI;AAKhBC,IAAAA,OAAO,EAAErB,IAAI,CAACqB,OALE;AAMhBC,IAAAA,WAAW,EAAEtB,IAAI,CAACsB;AANF,GAAlB;AAQApB,EAAAA,OAAO,CAACqB,eAAR,GAA0B;AACxBC,IAAAA,SAAS,EAAExB,IAAI,CAACwB,SADQ;AAExBC,IAAAA,KAAK,EAAEzB,IAAI,CAACyB,KAFY;AAGxBC,IAAAA,GAAG,EAAE1B,IAAI,CAAC0B,GAHc;AAIxBC,IAAAA,MAAM,EAAE3B,IAAI,CAAC2B;AAJW,GAA1B;AAMAzB,EAAAA,OAAO,CAAC0B,KAAR,GAAgB;AACdC,IAAAA,KAAK,EAAE7B,IAAI,CAAC6B,KADE;AAEdC,IAAAA,OAAO,EAAE9B,IAAI,CAAC8B,OAFA;AAGdC,IAAAA,KAAK,EAAE/B,IAAI,CAAC+B;AAHE,GAAhB;AAKA7B,EAAAA,OAAO,CAAC8B,QAAR,GAAmB;AACjBC,IAAAA,QAAQ,EAAEjC,IAAI,CAACiC,QADE;AAEjBC,IAAAA,QAAQ,EAAElC,IAAI,CAACkC,QAFE;AAGjBC,IAAAA,SAAS,EAAEnC,IAAI,CAACmC,SAHC;AAIjBC,IAAAA,QAAQ,EAAEpC,IAAI,CAACoC;AAJE,GAAnB,CAxCyC,CA8CzC;;AACAlC,EAAAA,OAAO,CAACmC,WAAR,GAAsB;AACpBC,IAAAA,YAAY,EAAEtC,IAAI,CAACuC,aADC;AAEpBC,IAAAA,KAAK,EAAExC,IAAI,CAACwC,KAFQ;AAGpBC,IAAAA,UAAU,EAAEzC,IAAI,CAAC0C,QAHG;AAIpBC,IAAAA,IAAI,EAAE3C,IAAI,CAAC4C,KAJS;AAKpBC,IAAAA,KAAK,EAAE7C,IAAI,CAAC6C;AALQ,GAAtB;AAOA3C,EAAAA,OAAO,CAAC4C,KAAR,GAAgB;AACdC,IAAAA,KAAK,EAAE/C,IAAI,CAAC+C,KADE;AAEdC,IAAAA,cAAc,EAAEhD,IAAI,CAACgD,cAFP;AAGdC,IAAAA,OAAO,EAAEjD,IAAI,CAACiD,OAHA;AAIdtB,IAAAA,MAAM,EAAE3B,IAAI,CAACkD,OAJC;AAKdC,IAAAA,SAAS,EAAEnD,IAAI,CAACoD;AALF,GAAhB;;AAQAjD,sBAAKmE,iBAAL,CAAuBL,EAAvB,EAA2B/D,OAA3B,EACGoD,IADH,CACQ,UAAAc,IAAI;AAAA,WAAI,6BAAcxE,GAAd,EAAmB;AAAE4D,MAAAA,IAAI,EAAE,GAAR;AAAaC,MAAAA,GAAG,EAAE;AAAlB,KAAnB,CAAJ;AAAA,GADZ,EAEGC,KAFH,CAES,UAACC,GAAD,EAAS;AACd7D,IAAAA,OAAO,CAACC,GAAR,CAAY6D,kBAAGC,KAAH,CAASF,GAAT,CAAZ;AACA,WAAO9D,IAAI,CAAC8D,GAAD,CAAX;AACD,GALH;AAMD,CApED;;AAuEA,IAAMY,cAAc,GAAG,SAAjBA,cAAiB,CAAC5E,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAAA,mBAGvCF,GAAG,CAAC6E,KAHmC;AAAA,MAE1CC,CAF0C,cAE1CA,CAF0C;AAAA,MAEvCC,CAFuC,cAEvCA,CAFuC;AAAA,MAEpCC,EAFoC,cAEpCA,EAFoC;AAAA,MAEhCV,EAFgC,cAEhCA,EAFgC;AAKzCnE,EAAAA,OAAO,CAACC,GAAR,CAAY4E,EAAZ,EALyC,CAMzC;;AACA,MAAMC,IAAI,GAAGF,CAAC,IAAID,CAAC,GAAG,CAAR,CAAd,CAPyC,CAQzC;;AACA,MAAIE,EAAE,KAAK,aAAX,EAA0B;AACxB,QAAM3E,IAAI,GAAG,EAAb;;AACAG,wBAAK0E,IAAL,CAAU,EAAV,EAAc;AAAEjE,MAAAA,WAAW,EAAE,CAAf;AAAkBR,MAAAA,SAAS,EAAE,CAA7B;AAAgC6D,MAAAA,EAAE,EAAE,CAApC;AAAuCa,MAAAA,UAAU,EAAC;AAAlD,KAAd,EAAoE;AAAEF,MAAAA,IAAI,EAAJA,IAAF;AAAQG,MAAAA,KAAK,EAAEC,QAAQ,CAACN,CAAD;AAAvB,KAApE,EACGpB,IADH,CACQ,UAAC2B,KAAD,EAAW;AACfjF,MAAAA,IAAI,CAACiF,KAAL,GAAaA,KAAb;AACAnF,MAAAA,OAAO,CAACC,GAAR,CAAYkF,KAAZ;AACA,aAAO9E,oBAAK+E,cAAL,EAAP;AAED,KANH,EAMK5B,IANL,CAMU,UAAA6B,MAAM,EAAI;AAAEnF,MAAAA,IAAI,CAACoF,KAAL,GAAaD,MAAb;AAAqB,KAN3C,EAOG7B,IAPH,CAOQ;AAAA,aAAM,6BAAc1D,GAAd,EAAmB;AAAE4D,QAAAA,IAAI,EAAE,GAAR;AAAaC,QAAAA,GAAG,EAAE,kBAAlB;AAAsCzD,QAAAA,IAAI,EAAJA;AAAtC,OAAnB,CAAN;AAAA,KAPR,EAQG0D,KARH,CAQS,UAACC,GAAD,EAAS;AACd7D,MAAAA,OAAO,CAACC,GAAR,CAAY6D,kBAAGC,KAAH,CAASF,GAAT,CAAZ;AACD,KAVH;AAWD,GAbD,MAaO,IAAIgB,EAAE,KAAK,UAAP,IAAqBV,EAAzB,EAA6B;AAElC9D,wBAAKkF,QAAL,CAAcpB,EAAd,EACGX,IADH,CACQ,UAAAc,IAAI;AAAA,aAAI,6BAAcxE,GAAd,EAAmB;AAAC4D,QAAAA,IAAI,EAAE,GAAP;AAAYC,QAAAA,GAAG,EAAC,mBAAhB;AAAqCzD,QAAAA,IAAI,EAAE;AAAEoE,UAAAA,IAAI,EAAJA;AAAF;AAA3C,OAAnB,CAAJ;AAAA,KADZ,EAEGV,KAFH,CAES,UAAAC,GAAG;AAAA,aAAI7D,OAAO,CAACC,GAAR,CAAY6D,kBAAGC,KAAH,CAASF,GAAT,CAAZ,CAAJ;AAAA,KAFZ;AAKD,GAPM,MAOD;AACJ;AACA7D,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD;AACF,CAjCD;;eAoCe;AACbsE,EAAAA,cAAc,EAAdA,cADa;AACG3E,EAAAA,aAAa,EAAbA,aADH;AACkBsE,EAAAA,gBAAgB,EAAhBA,gBADlB;AACoCO,EAAAA,cAAc,EAAdA;AADpC,C",
      "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/features/individuals",
      "sourcesContent": [
        "/* eslint-disable import/no-named-as-default-member */\nimport INDE from './indivisual.model';\nimport _c from '../../config/chalking';\nimport _E from '../../config/errora';\n// const e = new _E()\nimport { cleanResponse } from \"../../helpers/resonses\";\n\n\n\n// add fuckers to database\nconst addIndivduals = (req, res, next) => {\n  console.log('add individual');\n  // extract data from body request of http\n  // data hold all form data of peoples\n\n  const { data } = req.body;\n  const newInde = new INDE();\n\n  // construct schema object again\n  newInde.basicInfo = {\n    name: data.name,\n    fatherName: data.fatherName,\n    motherName: data.motherName,\n    familyName: data.familyName,\n    nickName: data.nickName,\n    birthDate: data.birthDate,\n    gender: data.gender,\n  };\n  newInde.contactInfo = {\n    phones: data.phones,\n    emails: data.emails,\n    social: data.social,\n  };\n  newInde.address = {\n    city: data.city,\n    state: data.state,\n    zqaq: data.zqaq,\n    mahla: data.mahla,\n    homeNum: data.homeNum,\n    pointCenter: data.pointCenter,\n  };\n  newInde.applicationInfo = {\n    applyDate: data.applyDate,\n    byWho: data.byWho,\n    who: data.who,\n    status: data.status,\n  };\n  newInde.skill = {\n    gifts: data.gifts,\n    hobbies: data.hobbies,\n    extra: data.extra,\n  };\n  newInde.jonsInfo = {\n    majorJob: data.majorJob,\n    minorJob: data.minorJob,\n    workPlace: data.workPlace,\n    hireDate: data.hireDate,\n  };\n  // eslint-disable-next-line no-unused-expressions\n  newInde.generalInfo = {\n    martialStaus: data.martialStatus,\n    image: data.image,\n    numOfChild: data.children,\n    type: data.gtype,\n    notes: data.notes,\n  };\n  newInde.study = {\n    grade: data.grade,\n    graduationDate: data.graduationDate,\n    special: data.special,\n    status: data.Sstatus,\n    typeStudy: data.tstudy,\n  };\n\n  newInde.save()\n    .then(ind => cleanResponse(res, { code: 200, msg: 'لقد قمت باضافه انسان جديد للنظان ^__^' }))\n    .catch((err) => {\n    // debuging error\n      console.log(_c.error(err));\n      return res.send({ msg: err.message, code: err.code });\n      // handling error\n      // next(err);\n    });\n};\n\n// delete fucker from database\nconst deleteIndivisual = (req, res, next) => {\n  const { id } = req.params;\n  console.log('delete individual');\n  INDE.findByIdAndDelete(id)\n    .then(indi => cleanResponse(res, { code: 200, msg: 'لقد قمت بنجاح بمسح هذا الكائن الحي' }))\n    .catch((err) => {\n      console.log(_c.error(err.message));\n      // res.send({msg:err.message})\n      return next(err);\n    });\n};\n\n// edit fucker upon the database\nconst editIndividual = (req, res, next) => {\n  console.log('edit individual');\n  const { data } = req.body;\n  const { id } = req.body;\n  const newInde = new INDE();\n\n  // construct schema object again\n  newInde.basicInfo = {\n    name: data.name,\n    fatherName: data.fatherName,\n    motherName: data.motherName,\n    familyName: data.familyName,\n    nickName: data.nickName,\n    birthDate: data.birthDate,\n    gender: data.gender,\n  };\n  newInde.contactInfo = {\n    phones: data.phones,\n    emails: data.emails,\n    social: data.social,\n  };\n  newInde.address = {\n    city: data.city,\n    state: data.state,\n    zqaq: data.zqaq,\n    mahla: data.mahla,\n    homeNum: data.homeNum,\n    pointCenter: data.pointCenter,\n  };\n  newInde.applicationInfo = {\n    applyDate: data.applyDate,\n    byWho: data.byWho,\n    who: data.who,\n    status: data.status,\n  };\n  newInde.skill = {\n    gifts: data.gifts,\n    hobbies: data.hobbies,\n    extra: data.extra,\n  };\n  newInde.jonsInfo = {\n    majorJob: data.majorJob,\n    minorJob: data.minorJob,\n    workPlace: data.workPlace,\n    hireDate: data.hireDate,\n  };\n  // eslint-disable-next-line no-unused-expressions\n  newInde.generalInfo = {\n    martialStaus: data.martialStatus,\n    image: data.image,\n    numOfChild: data.children,\n    type: data.gtype,\n    notes: data.notes,\n  };\n  newInde.study = {\n    grade: data.grade,\n    graduationDate: data.graduationDate,\n    special: data.special,\n    status: data.Sstatus,\n    typeStudy: data.tstudy,\n  };\n\n  INDE.findByIdAndUpdate(id, newInde)\n    .then(indi => cleanResponse(res, { code: 200, msg: 'لقد قمت بتعديل الكائن الحي' }))\n    .catch((err) => {\n      console.log(_c.error(err));\n      return next(err);\n    });\n};\n\n\nconst getIndividuals = (req, res, next) => {\n  const {\n p, l, pt, id\n} = req.query;\n\n  console.log(pt);\n  // pagination formla\n  const skip = l * (p - 1);\n  // one api for all individuals and for one\n  if (pt === 'indi_tables') {\n    const data = {}\n    INDE.find({}, { contactInfo: 1, basicInfo: 1, id: 1, created_at:1}, { skip, limit: parseInt(l) })\n      .then((indis) => {\n        data.indis = indis\n        console.log(indis);\n        return INDE.countDocuments()\n\n      }).then(counts => { data.pages = counts })\n      .then(() => cleanResponse(res, { code: 200, msg: \"لقد قمت ب البحث \", data }))\n      .catch((err) => {\n        console.log(_c.error(err));\n      });\n  } else if (pt === 'indi_one' && id) {\n\n    INDE.findById(id)\n      .then(indi => cleanResponse(res, {code: 200, msg:\"لقد احضرت الانسان\", data: { indi }}))\n      .catch(err => console.log(_c.error(err)))\n\n\n  }else {\n    // return next(e)\n    console.log('noTHin here');\n  }\n};\n\n\nexport default {\n  editIndividual, addIndivduals, deleteIndivisual, getIndividuals,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1548802817683
  },
  "{\"sourceRoot\":\"/var/www/html/sales/hayderApp/app/backend/src/features/individuals\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/var/www/html/sales/hayderApp/app/backend\",\"filename\":\"/var/www/html/sales/hayderApp/app/backend/src/features/individuals/indivisual.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/var/www/html/sales/hayderApp/app/backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/features/individuals",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/var/www/html/sales/hayderApp/app/backend",
      "filename": "/var/www/html/sales/hayderApp/app/backend/src/features/individuals/indivisual.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/var/www/html/sales/hayderApp/app/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/var/www/html/sales/hayderApp/app/backend/src/features/individuals/indivisual.model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/var/www/html/sales/hayderApp/app/backend/src/features/individuals/indivisual.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/features/individuals",
        "sourceFileName": "indivisual.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _mongoose = _interopRequireWildcard(require(\"mongoose\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nvar ID = _mongoose.Schema.Types.ObjectId;\n/**\n * @class {individual} -- object for individuals to identifies people i had\n * \t@param {object} basicInfo - human basic info which contain\n * \t\t@param {STRING} name - name of human being\n * \t\t@param {STRING} fatherName\n * \t\t@param {STRING} motherName\n * \t\t@param {STRING} nickName\n\t\t\t@param {STRING} familyName\n\t\t\t@param {DATE}  birthDate\n\t\t\t@param {ENUM}  gender -  [\"ذكر \"و\"انثى\",\"غير ذلك\"]\n\t\t@param {object} contactInfo - contact info for people\n\t\t\t@param {ARRAYofOBJECT} phones -  [{service , num}] array of phones\n\t\t\t@param {ARRAY} emails - [] array of emails\n\t\t\t@param {ARRAYofOBJECT} socail [{type,url}]\n\t\t@param {OBJECT} address\n\t\t\t@param {STRING} city\n\t\t\t@param {STRING}  zqaq\n\t\t\t@param {STRING} homeNum\n\t\t\t@param {STRING} mahla\n\t\t\t@param {STRING} pointCenter - نقطة دالة\n\t\t\t@param {STRING} state -المنطقة\n\t\t@param {OBJECT} applicationInfo\n\t\t\t@param {DATE} applyDate\n\t\t\t@param {STRING} status\n\t\t\t@param {ID} byWho - المستقطب\n\t\t\t@param {ID} who - المعرف\n\t\t@param {OBJECT} skill -مهارات اصجاب العمل\n\t\t\t@param {ARRAYofSTRING} gifts - المهارات الاحترافية\n\t\t\t@param {ARRAY} extra - الاضافية\n\t\t\t@param {ARRAY} hobbies  - الهوايات\n\t\t@param {OBJECT} jonsInfo - معلومات العمل\n\t\t\t@param {DATE} hireDate - تاريج التعيين\n\t\t\t@param {STRING} workPlace - مكان العمل\n\t\t\t@param {STRING} majorJob\n\t\t\t@param {STRING} minorJob\n\t\t@param {OBJECT} generalInfo\n\t\t\t@param {ENUM} martialStaus - [\"اعزب\",\"متزوج\"]\n\t\t\t@param {STRING} image\n\t\t\t@param {NUMBER} numOfChild\n\t\t\t@param {ARRAy} type\n\t\t@param {OBJECT} study\n\t\t\t@param {ENUM} grade - المرحلة\n\t\t\t@param {DATE} graduationDate\n\t\t\t@param {ARRAY} special - التخصص\n\t\t\t@param {ENUM} status - خريج او طالب\n\t\t\t@param {ENUM} type - ابتدائي اعدادي متوسط ثانوي\n\n\t\t\t*/\n\nvar genders = ['ذكر', 'انثى'];\nvar mstatus = ['متزوج', 'اعزب'];\nvar Sstatus = ['خريج', 'طالب', 'امي'];\nvar tstudy = ['ابتدائي', 'متوسط', 'اعدادي', 'ثانوي', 'دبلوم', 'بكلوريوس', 'ماجستير', 'دكتوراه'];\nvar indivisualSchema = new _mongoose.Schema({\n  basicInfo: {\n    name: {\n      $type: String,\n      required: true\n    },\n    fatherName: {\n      $type: String\n    },\n    motherName: {\n      $type: String\n    },\n    familyName: {\n      $type: String\n    },\n    nickName: {\n      $type: String\n    },\n    birthDate: Date,\n    gender: {\n      $type: String,\n      enum: genders\n    }\n  },\n  contactInfo: {\n    phones: [{\n      service: String,\n      num: String\n    }],\n    emails: [{\n      $type: String,\n      unique: true\n    }],\n    social: [{\n      type: String,\n      url: String\n    }]\n  },\n  address: {\n    city: String,\n    state: String,\n    zqaq: String,\n    mahla: String,\n    homeNum: String,\n    pointCenter: String\n  },\n  applicationInfo: {\n    applyDate: Date,\n    byWho: {\n      $type: ID\n    },\n    who: {\n      $type: ID\n    },\n    status: String\n  },\n  skill: {\n    gifts: [String],\n    hobbies: [String],\n    extra: [String]\n  },\n  jonsInfo: {\n    majorJob: String,\n    minorJob: String,\n    workPlace: String,\n    hireDate: Date\n  },\n  generalInfo: {\n    martialStaus: {\n      $type: String,\n      enum: mstatus\n    },\n    image: String,\n    numOfChild: Number,\n    type: [String],\n    notes: String\n  },\n  study: {\n    grade: {\n      $type: Number,\n      enum: [1, 2, 3, 4, 5, 6]\n    },\n    graduationDate: Date,\n    special: [String],\n    status: {\n      $type: String,\n      enum: Sstatus\n    },\n    typeStudy: {\n      $type: String,\n      enum: tstudy\n    }\n  }\n}, {\n  timestamps: {\n    createdAt: 'created_at',\n    updatedAt: 'updated_at'\n  },\n  collation: {\n    locale: 'ar'\n  },\n  strictQuery: true,\n  typeKey: '$type'\n});\n\nvar _default = _mongoose.default.model('Individuals', indivisualSchema);\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGl2aXN1YWwubW9kZWwuanMiXSwibmFtZXMiOlsiSUQiLCJTY2hlbWEiLCJUeXBlcyIsIk9iamVjdElkIiwiZ2VuZGVycyIsIm1zdGF0dXMiLCJTc3RhdHVzIiwidHN0dWR5IiwiaW5kaXZpc3VhbFNjaGVtYSIsImJhc2ljSW5mbyIsIm5hbWUiLCIkdHlwZSIsIlN0cmluZyIsInJlcXVpcmVkIiwiZmF0aGVyTmFtZSIsIm1vdGhlck5hbWUiLCJmYW1pbHlOYW1lIiwibmlja05hbWUiLCJiaXJ0aERhdGUiLCJEYXRlIiwiZ2VuZGVyIiwiZW51bSIsImNvbnRhY3RJbmZvIiwicGhvbmVzIiwic2VydmljZSIsIm51bSIsImVtYWlscyIsInVuaXF1ZSIsInNvY2lhbCIsInR5cGUiLCJ1cmwiLCJhZGRyZXNzIiwiY2l0eSIsInN0YXRlIiwienFhcSIsIm1haGxhIiwiaG9tZU51bSIsInBvaW50Q2VudGVyIiwiYXBwbGljYXRpb25JbmZvIiwiYXBwbHlEYXRlIiwiYnlXaG8iLCJ3aG8iLCJzdGF0dXMiLCJza2lsbCIsImdpZnRzIiwiaG9iYmllcyIsImV4dHJhIiwiam9uc0luZm8iLCJtYWpvckpvYiIsIm1pbm9ySm9iIiwid29ya1BsYWNlIiwiaGlyZURhdGUiLCJnZW5lcmFsSW5mbyIsIm1hcnRpYWxTdGF1cyIsImltYWdlIiwibnVtT2ZDaGlsZCIsIk51bWJlciIsIm5vdGVzIiwic3R1ZHkiLCJncmFkZSIsImdyYWR1YXRpb25EYXRlIiwic3BlY2lhbCIsInR5cGVTdHVkeSIsInRpbWVzdGFtcHMiLCJjcmVhdGVkQXQiLCJ1cGRhdGVkQXQiLCJjb2xsYXRpb24iLCJsb2NhbGUiLCJzdHJpY3RRdWVyeSIsInR5cGVLZXkiLCJtb25nb29zZSIsIm1vZGVsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFFQSxJQUFNQSxFQUFFLEdBQUdDLGlCQUFPQyxLQUFQLENBQWFDLFFBQXhCO0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpREEsSUFBTUMsT0FBTyxHQUFHLENBQUMsS0FBRCxFQUFRLE1BQVIsQ0FBaEI7QUFDQSxJQUFNQyxPQUFPLEdBQUcsQ0FBQyxPQUFELEVBQVUsTUFBVixDQUFoQjtBQUNBLElBQU1DLE9BQU8sR0FBRyxDQUFDLE1BQUQsRUFBUyxNQUFULEVBQWlCLEtBQWpCLENBQWhCO0FBQ0EsSUFBTUMsTUFBTSxHQUFHLENBQUMsU0FBRCxFQUFZLE9BQVosRUFBcUIsUUFBckIsRUFBK0IsT0FBL0IsRUFBd0MsT0FBeEMsRUFBaUQsVUFBakQsRUFBNkQsU0FBN0QsRUFBd0UsU0FBeEUsQ0FBZjtBQUNBLElBQU1DLGdCQUFnQixHQUFHLElBQUlQLGdCQUFKLENBQVc7QUFDbENRLEVBQUFBLFNBQVMsRUFBRTtBQUNUQyxJQUFBQSxJQUFJLEVBQUU7QUFBRUMsTUFBQUEsS0FBSyxFQUFFQyxNQUFUO0FBQWlCQyxNQUFBQSxRQUFRLEVBQUU7QUFBM0IsS0FERztBQUVUQyxJQUFBQSxVQUFVLEVBQUU7QUFBRUgsTUFBQUEsS0FBSyxFQUFFQztBQUFULEtBRkg7QUFHVEcsSUFBQUEsVUFBVSxFQUFFO0FBQUVKLE1BQUFBLEtBQUssRUFBRUM7QUFBVCxLQUhIO0FBSVRJLElBQUFBLFVBQVUsRUFBRTtBQUFFTCxNQUFBQSxLQUFLLEVBQUVDO0FBQVQsS0FKSDtBQUtUSyxJQUFBQSxRQUFRLEVBQUU7QUFBRU4sTUFBQUEsS0FBSyxFQUFFQztBQUFULEtBTEQ7QUFNVE0sSUFBQUEsU0FBUyxFQUFFQyxJQU5GO0FBT1RDLElBQUFBLE1BQU0sRUFBRTtBQUFFVCxNQUFBQSxLQUFLLEVBQUVDLE1BQVQ7QUFBaUJTLE1BQUFBLElBQUksRUFBRWpCO0FBQXZCO0FBUEMsR0FEdUI7QUFVbENrQixFQUFBQSxXQUFXLEVBQUU7QUFDWEMsSUFBQUEsTUFBTSxFQUFFLENBQUM7QUFBRUMsTUFBQUEsT0FBTyxFQUFFWixNQUFYO0FBQW1CYSxNQUFBQSxHQUFHLEVBQUViO0FBQXhCLEtBQUQsQ0FERztBQUVYYyxJQUFBQSxNQUFNLEVBQUUsQ0FBQztBQUFFZixNQUFBQSxLQUFLLEVBQUVDLE1BQVQ7QUFBaUJlLE1BQUFBLE1BQU0sRUFBRTtBQUF6QixLQUFELENBRkc7QUFHWEMsSUFBQUEsTUFBTSxFQUFFLENBQUM7QUFBRUMsTUFBQUEsSUFBSSxFQUFFakIsTUFBUjtBQUFnQmtCLE1BQUFBLEdBQUcsRUFBRWxCO0FBQXJCLEtBQUQ7QUFIRyxHQVZxQjtBQWdCbENtQixFQUFBQSxPQUFPLEVBQUU7QUFDUEMsSUFBQUEsSUFBSSxFQUFFcEIsTUFEQztBQUVQcUIsSUFBQUEsS0FBSyxFQUFFckIsTUFGQTtBQUdQc0IsSUFBQUEsSUFBSSxFQUFFdEIsTUFIQztBQUlQdUIsSUFBQUEsS0FBSyxFQUFFdkIsTUFKQTtBQUtQd0IsSUFBQUEsT0FBTyxFQUFFeEIsTUFMRjtBQU1QeUIsSUFBQUEsV0FBVyxFQUFFekI7QUFOTixHQWhCeUI7QUF3QmxDMEIsRUFBQUEsZUFBZSxFQUFFO0FBQ2ZDLElBQUFBLFNBQVMsRUFBRXBCLElBREk7QUFFZnFCLElBQUFBLEtBQUssRUFBRTtBQUFFN0IsTUFBQUEsS0FBSyxFQUFFWDtBQUFULEtBRlE7QUFHZnlDLElBQUFBLEdBQUcsRUFBRTtBQUFFOUIsTUFBQUEsS0FBSyxFQUFFWDtBQUFULEtBSFU7QUFJZjBDLElBQUFBLE1BQU0sRUFBRTlCO0FBSk8sR0F4QmlCO0FBOEJsQytCLEVBQUFBLEtBQUssRUFBRTtBQUNMQyxJQUFBQSxLQUFLLEVBQUUsQ0FBQ2hDLE1BQUQsQ0FERjtBQUVMaUMsSUFBQUEsT0FBTyxFQUFFLENBQUNqQyxNQUFELENBRko7QUFHTGtDLElBQUFBLEtBQUssRUFBRSxDQUFDbEMsTUFBRDtBQUhGLEdBOUIyQjtBQW1DbENtQyxFQUFBQSxRQUFRLEVBQUU7QUFDUkMsSUFBQUEsUUFBUSxFQUFFcEMsTUFERjtBQUVScUMsSUFBQUEsUUFBUSxFQUFFckMsTUFGRjtBQUdSc0MsSUFBQUEsU0FBUyxFQUFFdEMsTUFISDtBQUlSdUMsSUFBQUEsUUFBUSxFQUFFaEM7QUFKRixHQW5Dd0I7QUF5Q2xDaUMsRUFBQUEsV0FBVyxFQUFFO0FBQ1hDLElBQUFBLFlBQVksRUFBRTtBQUFFMUMsTUFBQUEsS0FBSyxFQUFFQyxNQUFUO0FBQWlCUyxNQUFBQSxJQUFJLEVBQUVoQjtBQUF2QixLQURIO0FBRVhpRCxJQUFBQSxLQUFLLEVBQUUxQyxNQUZJO0FBR1gyQyxJQUFBQSxVQUFVLEVBQUVDLE1BSEQ7QUFJWDNCLElBQUFBLElBQUksRUFBRSxDQUFDakIsTUFBRCxDQUpLO0FBS1g2QyxJQUFBQSxLQUFLLEVBQUU3QztBQUxJLEdBekNxQjtBQWdEbEM4QyxFQUFBQSxLQUFLLEVBQUU7QUFDTEMsSUFBQUEsS0FBSyxFQUFFO0FBQUVoRCxNQUFBQSxLQUFLLEVBQUU2QyxNQUFUO0FBQWlCbkMsTUFBQUEsSUFBSSxFQUFFLENBQUMsQ0FBRCxFQUFJLENBQUosRUFBTyxDQUFQLEVBQVUsQ0FBVixFQUFhLENBQWIsRUFBZ0IsQ0FBaEI7QUFBdkIsS0FERjtBQUVMdUMsSUFBQUEsY0FBYyxFQUFFekMsSUFGWDtBQUdMMEMsSUFBQUEsT0FBTyxFQUFFLENBQUNqRCxNQUFELENBSEo7QUFJTDhCLElBQUFBLE1BQU0sRUFBRTtBQUFFL0IsTUFBQUEsS0FBSyxFQUFFQyxNQUFUO0FBQWlCUyxNQUFBQSxJQUFJLEVBQUVmO0FBQXZCLEtBSkg7QUFLTHdELElBQUFBLFNBQVMsRUFBRTtBQUFFbkQsTUFBQUEsS0FBSyxFQUFFQyxNQUFUO0FBQWlCUyxNQUFBQSxJQUFJLEVBQUVkO0FBQXZCO0FBTE47QUFoRDJCLENBQVgsRUF3RHRCO0FBQ0R3RCxFQUFBQSxVQUFVLEVBQUU7QUFBRUMsSUFBQUEsU0FBUyxFQUFFLFlBQWI7QUFBMkJDLElBQUFBLFNBQVMsRUFBRTtBQUF0QyxHQURYO0FBRURDLEVBQUFBLFNBQVMsRUFBRTtBQUFFQyxJQUFBQSxNQUFNLEVBQUU7QUFBVixHQUZWO0FBR0RDLEVBQUFBLFdBQVcsRUFBRSxJQUhaO0FBSURDLEVBQUFBLE9BQU8sRUFBRTtBQUpSLENBeERzQixDQUF6Qjs7ZUFnRWVDLGtCQUFTQyxLQUFULENBQWUsYUFBZixFQUE4Qi9ELGdCQUE5QixDIiwic291cmNlUm9vdCI6Ii92YXIvd3d3L2h0bWwvc2FsZXMvaGF5ZGVyQXBwL2FwcC9iYWNrZW5kL3NyYy9mZWF0dXJlcy9pbmRpdmlkdWFscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSwgeyBTY2hlbWEsIFNjaGVtYVR5cGUgfSBmcm9tICdtb25nb29zZSc7XG5cbmNvbnN0IElEID0gU2NoZW1hLlR5cGVzLk9iamVjdElkO1xuXG4vKipcbiAqIEBjbGFzcyB7aW5kaXZpZHVhbH0gLS0gb2JqZWN0IGZvciBpbmRpdmlkdWFscyB0byBpZGVudGlmaWVzIHBlb3BsZSBpIGhhZFxuICogXHRAcGFyYW0ge29iamVjdH0gYmFzaWNJbmZvIC0gaHVtYW4gYmFzaWMgaW5mbyB3aGljaCBjb250YWluXG4gKiBcdFx0QHBhcmFtIHtTVFJJTkd9IG5hbWUgLSBuYW1lIG9mIGh1bWFuIGJlaW5nXG4gKiBcdFx0QHBhcmFtIHtTVFJJTkd9IGZhdGhlck5hbWVcbiAqIFx0XHRAcGFyYW0ge1NUUklOR30gbW90aGVyTmFtZVxuICogXHRcdEBwYXJhbSB7U1RSSU5HfSBuaWNrTmFtZVxuXHRcdFx0QHBhcmFtIHtTVFJJTkd9IGZhbWlseU5hbWVcblx0XHRcdEBwYXJhbSB7REFURX0gIGJpcnRoRGF0ZVxuXHRcdFx0QHBhcmFtIHtFTlVNfSAgZ2VuZGVyIC0gIFtcItiw2YPYsSBcItmIXCLYp9mG2KvZiVwiLFwi2LrZitixINiw2YTZg1wiXVxuXHRcdEBwYXJhbSB7b2JqZWN0fSBjb250YWN0SW5mbyAtIGNvbnRhY3QgaW5mbyBmb3IgcGVvcGxlXG5cdFx0XHRAcGFyYW0ge0FSUkFZb2ZPQkpFQ1R9IHBob25lcyAtICBbe3NlcnZpY2UgLCBudW19XSBhcnJheSBvZiBwaG9uZXNcblx0XHRcdEBwYXJhbSB7QVJSQVl9IGVtYWlscyAtIFtdIGFycmF5IG9mIGVtYWlsc1xuXHRcdFx0QHBhcmFtIHtBUlJBWW9mT0JKRUNUfSBzb2NhaWwgW3t0eXBlLHVybH1dXG5cdFx0QHBhcmFtIHtPQkpFQ1R9IGFkZHJlc3Ncblx0XHRcdEBwYXJhbSB7U1RSSU5HfSBjaXR5XG5cdFx0XHRAcGFyYW0ge1NUUklOR30gIHpxYXFcblx0XHRcdEBwYXJhbSB7U1RSSU5HfSBob21lTnVtXG5cdFx0XHRAcGFyYW0ge1NUUklOR30gbWFobGFcblx0XHRcdEBwYXJhbSB7U1RSSU5HfSBwb2ludENlbnRlciAtINmG2YLYt9ipINiv2KfZhNipXG5cdFx0XHRAcGFyYW0ge1NUUklOR30gc3RhdGUgLdin2YTZhdmG2LfZgtipXG5cdFx0QHBhcmFtIHtPQkpFQ1R9IGFwcGxpY2F0aW9uSW5mb1xuXHRcdFx0QHBhcmFtIHtEQVRFfSBhcHBseURhdGVcblx0XHRcdEBwYXJhbSB7U1RSSU5HfSBzdGF0dXNcblx0XHRcdEBwYXJhbSB7SUR9IGJ5V2hvIC0g2KfZhNmF2LPYqtmC2LfYqFxuXHRcdFx0QHBhcmFtIHtJRH0gd2hvIC0g2KfZhNmF2LnYsdmBXG5cdFx0QHBhcmFtIHtPQkpFQ1R9IHNraWxsIC3ZhdmH2KfYsdin2Kog2KfYtdis2KfYqCDYp9mE2LnZhdmEXG5cdFx0XHRAcGFyYW0ge0FSUkFZb2ZTVFJJTkd9IGdpZnRzIC0g2KfZhNmF2YfYp9ix2KfYqiDYp9mE2KfYrdiq2LHYp9mB2YrYqVxuXHRcdFx0QHBhcmFtIHtBUlJBWX0gZXh0cmEgLSDYp9mE2KfYttin2YHZitipXG5cdFx0XHRAcGFyYW0ge0FSUkFZfSBob2JiaWVzICAtINin2YTZh9mI2KfZitin2Kpcblx0XHRAcGFyYW0ge09CSkVDVH0gam9uc0luZm8gLSDZhdi52YTZiNmF2KfYqiDYp9mE2LnZhdmEXG5cdFx0XHRAcGFyYW0ge0RBVEV9IGhpcmVEYXRlIC0g2KrYp9ix2YrYrCDYp9mE2KrYudmK2YrZhlxuXHRcdFx0QHBhcmFtIHtTVFJJTkd9IHdvcmtQbGFjZSAtINmF2YPYp9mGINin2YTYudmF2YRcblx0XHRcdEBwYXJhbSB7U1RSSU5HfSBtYWpvckpvYlxuXHRcdFx0QHBhcmFtIHtTVFJJTkd9IG1pbm9ySm9iXG5cdFx0QHBhcmFtIHtPQkpFQ1R9IGdlbmVyYWxJbmZvXG5cdFx0XHRAcGFyYW0ge0VOVU19IG1hcnRpYWxTdGF1cyAtIFtcItin2LnYstioXCIsXCLZhdiq2LLZiNisXCJdXG5cdFx0XHRAcGFyYW0ge1NUUklOR30gaW1hZ2Vcblx0XHRcdEBwYXJhbSB7TlVNQkVSfSBudW1PZkNoaWxkXG5cdFx0XHRAcGFyYW0ge0FSUkF5fSB0eXBlXG5cdFx0QHBhcmFtIHtPQkpFQ1R9IHN0dWR5XG5cdFx0XHRAcGFyYW0ge0VOVU19IGdyYWRlIC0g2KfZhNmF2LHYrdmE2Klcblx0XHRcdEBwYXJhbSB7REFURX0gZ3JhZHVhdGlvbkRhdGVcblx0XHRcdEBwYXJhbSB7QVJSQVl9IHNwZWNpYWwgLSDYp9mE2KrYrti12LVcblx0XHRcdEBwYXJhbSB7RU5VTX0gc3RhdHVzIC0g2K7YsdmK2Kwg2KfZiCDYt9in2YTYqFxuXHRcdFx0QHBhcmFtIHtFTlVNfSB0eXBlIC0g2KfYqNiq2K/Yp9im2Yog2KfYudiv2KfYr9mKINmF2KrZiNiz2Lcg2KvYp9mG2YjZilxuXG5cdFx0XHQqL1xuXG5jb25zdCBnZW5kZXJzID0gWyfYsNmD2LEnLCAn2KfZhtir2YknXTtcbmNvbnN0IG1zdGF0dXMgPSBbJ9mF2KrYstmI2KwnLCAn2KfYudiy2KgnXTtcbmNvbnN0IFNzdGF0dXMgPSBbJ9iu2LHZitisJywgJ9i32KfZhNioJywgJ9in2YXZiiddO1xuY29uc3QgdHN0dWR5ID0gWyfYp9io2KrYr9in2KbZiicsICfZhdiq2YjYs9i3JywgJ9in2LnYr9in2K/ZiicsICfYq9in2YbZiNmKJywgJ9iv2KjZhNmI2YUnLCAn2KjZg9mE2YjYsdmK2YjYsycsICfZhdin2KzYs9iq2YrYsScsICfYr9mD2KrZiNix2KfZhyddO1xuY29uc3QgaW5kaXZpc3VhbFNjaGVtYSA9IG5ldyBTY2hlbWEoe1xuICBiYXNpY0luZm86IHtcbiAgICBuYW1lOiB7ICR0eXBlOiBTdHJpbmcsIHJlcXVpcmVkOiB0cnVlIH0sXG4gICAgZmF0aGVyTmFtZTogeyAkdHlwZTogU3RyaW5nIH0sXG4gICAgbW90aGVyTmFtZTogeyAkdHlwZTogU3RyaW5nIH0sXG4gICAgZmFtaWx5TmFtZTogeyAkdHlwZTogU3RyaW5nIH0sXG4gICAgbmlja05hbWU6IHsgJHR5cGU6IFN0cmluZyB9LFxuICAgIGJpcnRoRGF0ZTogRGF0ZSxcbiAgICBnZW5kZXI6IHsgJHR5cGU6IFN0cmluZywgZW51bTogZ2VuZGVycyB9LFxuICB9LFxuICBjb250YWN0SW5mbzoge1xuICAgIHBob25lczogW3sgc2VydmljZTogU3RyaW5nLCBudW06IFN0cmluZyB9XSxcbiAgICBlbWFpbHM6IFt7ICR0eXBlOiBTdHJpbmcsIHVuaXF1ZTogdHJ1ZSB9XSxcbiAgICBzb2NpYWw6IFt7IHR5cGU6IFN0cmluZywgdXJsOiBTdHJpbmcgfV0sXG5cbiAgfSxcbiAgYWRkcmVzczoge1xuICAgIGNpdHk6IFN0cmluZyxcbiAgICBzdGF0ZTogU3RyaW5nLFxuICAgIHpxYXE6IFN0cmluZyxcbiAgICBtYWhsYTogU3RyaW5nLFxuICAgIGhvbWVOdW06IFN0cmluZyxcbiAgICBwb2ludENlbnRlcjogU3RyaW5nLFxuICB9LFxuICBhcHBsaWNhdGlvbkluZm86IHtcbiAgICBhcHBseURhdGU6IERhdGUsXG4gICAgYnlXaG86IHsgJHR5cGU6IElEIH0sXG4gICAgd2hvOiB7ICR0eXBlOiBJRCB9LFxuICAgIHN0YXR1czogU3RyaW5nLFxuICB9LFxuICBza2lsbDoge1xuICAgIGdpZnRzOiBbU3RyaW5nXSxcbiAgICBob2JiaWVzOiBbU3RyaW5nXSxcbiAgICBleHRyYTogW1N0cmluZ10sXG4gIH0sXG4gIGpvbnNJbmZvOiB7XG4gICAgbWFqb3JKb2I6IFN0cmluZyxcbiAgICBtaW5vckpvYjogU3RyaW5nLFxuICAgIHdvcmtQbGFjZTogU3RyaW5nLFxuICAgIGhpcmVEYXRlOiBEYXRlLFxuICB9LFxuICBnZW5lcmFsSW5mbzoge1xuICAgIG1hcnRpYWxTdGF1czogeyAkdHlwZTogU3RyaW5nLCBlbnVtOiBtc3RhdHVzIH0sXG4gICAgaW1hZ2U6IFN0cmluZyxcbiAgICBudW1PZkNoaWxkOiBOdW1iZXIsXG4gICAgdHlwZTogW1N0cmluZ10sXG4gICAgbm90ZXM6IFN0cmluZyxcbiAgfSxcbiAgc3R1ZHk6IHtcbiAgICBncmFkZTogeyAkdHlwZTogTnVtYmVyLCBlbnVtOiBbMSwgMiwgMywgNCwgNSwgNl0gfSxcbiAgICBncmFkdWF0aW9uRGF0ZTogRGF0ZSxcbiAgICBzcGVjaWFsOiBbU3RyaW5nXSxcbiAgICBzdGF0dXM6IHsgJHR5cGU6IFN0cmluZywgZW51bTogU3N0YXR1cyB9LFxuICAgIHR5cGVTdHVkeTogeyAkdHlwZTogU3RyaW5nLCBlbnVtOiB0c3R1ZHkgfSxcbiAgfSxcblxufSwge1xuICB0aW1lc3RhbXBzOiB7IGNyZWF0ZWRBdDogJ2NyZWF0ZWRfYXQnLCB1cGRhdGVkQXQ6ICd1cGRhdGVkX2F0JyB9LFxuICBjb2xsYXRpb246IHsgbG9jYWxlOiAnYXInIH0sXG4gIHN0cmljdFF1ZXJ5OiB0cnVlLFxuICB0eXBlS2V5OiAnJHR5cGUnLFxufSk7XG5cblxuZXhwb3J0IGRlZmF1bHQgbW9uZ29vc2UubW9kZWwoJ0luZGl2aWR1YWxzJywgaW5kaXZpc3VhbFNjaGVtYSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "indivisual.model.js"
      ],
      "names": [
        "ID",
        "Schema",
        "Types",
        "ObjectId",
        "genders",
        "mstatus",
        "Sstatus",
        "tstudy",
        "indivisualSchema",
        "basicInfo",
        "name",
        "$type",
        "String",
        "required",
        "fatherName",
        "motherName",
        "familyName",
        "nickName",
        "birthDate",
        "Date",
        "gender",
        "enum",
        "contactInfo",
        "phones",
        "service",
        "num",
        "emails",
        "unique",
        "social",
        "type",
        "url",
        "address",
        "city",
        "state",
        "zqaq",
        "mahla",
        "homeNum",
        "pointCenter",
        "applicationInfo",
        "applyDate",
        "byWho",
        "who",
        "status",
        "skill",
        "gifts",
        "hobbies",
        "extra",
        "jonsInfo",
        "majorJob",
        "minorJob",
        "workPlace",
        "hireDate",
        "generalInfo",
        "martialStaus",
        "image",
        "numOfChild",
        "Number",
        "notes",
        "study",
        "grade",
        "graduationDate",
        "special",
        "typeStudy",
        "timestamps",
        "createdAt",
        "updatedAt",
        "collation",
        "locale",
        "strictQuery",
        "typeKey",
        "mongoose",
        "model"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,IAAMA,EAAE,GAAGC,iBAAOC,KAAP,CAAaC,QAAxB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA,IAAMC,OAAO,GAAG,CAAC,KAAD,EAAQ,MAAR,CAAhB;AACA,IAAMC,OAAO,GAAG,CAAC,OAAD,EAAU,MAAV,CAAhB;AACA,IAAMC,OAAO,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,KAAjB,CAAhB;AACA,IAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,OAAZ,EAAqB,QAArB,EAA+B,OAA/B,EAAwC,OAAxC,EAAiD,UAAjD,EAA6D,SAA7D,EAAwE,SAAxE,CAAf;AACA,IAAMC,gBAAgB,GAAG,IAAIP,gBAAJ,CAAW;AAClCQ,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,KAAK,EAAEC,MAAT;AAAiBC,MAAAA,QAAQ,EAAE;AAA3B,KADG;AAETC,IAAAA,UAAU,EAAE;AAAEH,MAAAA,KAAK,EAAEC;AAAT,KAFH;AAGTG,IAAAA,UAAU,EAAE;AAAEJ,MAAAA,KAAK,EAAEC;AAAT,KAHH;AAITI,IAAAA,UAAU,EAAE;AAAEL,MAAAA,KAAK,EAAEC;AAAT,KAJH;AAKTK,IAAAA,QAAQ,EAAE;AAAEN,MAAAA,KAAK,EAAEC;AAAT,KALD;AAMTM,IAAAA,SAAS,EAAEC,IANF;AAOTC,IAAAA,MAAM,EAAE;AAAET,MAAAA,KAAK,EAAEC,MAAT;AAAiBS,MAAAA,IAAI,EAAEjB;AAAvB;AAPC,GADuB;AAUlCkB,EAAAA,WAAW,EAAE;AACXC,IAAAA,MAAM,EAAE,CAAC;AAAEC,MAAAA,OAAO,EAAEZ,MAAX;AAAmBa,MAAAA,GAAG,EAAEb;AAAxB,KAAD,CADG;AAEXc,IAAAA,MAAM,EAAE,CAAC;AAAEf,MAAAA,KAAK,EAAEC,MAAT;AAAiBe,MAAAA,MAAM,EAAE;AAAzB,KAAD,CAFG;AAGXC,IAAAA,MAAM,EAAE,CAAC;AAAEC,MAAAA,IAAI,EAAEjB,MAAR;AAAgBkB,MAAAA,GAAG,EAAElB;AAArB,KAAD;AAHG,GAVqB;AAgBlCmB,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAEpB,MADC;AAEPqB,IAAAA,KAAK,EAAErB,MAFA;AAGPsB,IAAAA,IAAI,EAAEtB,MAHC;AAIPuB,IAAAA,KAAK,EAAEvB,MAJA;AAKPwB,IAAAA,OAAO,EAAExB,MALF;AAMPyB,IAAAA,WAAW,EAAEzB;AANN,GAhByB;AAwBlC0B,EAAAA,eAAe,EAAE;AACfC,IAAAA,SAAS,EAAEpB,IADI;AAEfqB,IAAAA,KAAK,EAAE;AAAE7B,MAAAA,KAAK,EAAEX;AAAT,KAFQ;AAGfyC,IAAAA,GAAG,EAAE;AAAE9B,MAAAA,KAAK,EAAEX;AAAT,KAHU;AAIf0C,IAAAA,MAAM,EAAE9B;AAJO,GAxBiB;AA8BlC+B,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,CAAChC,MAAD,CADF;AAELiC,IAAAA,OAAO,EAAE,CAACjC,MAAD,CAFJ;AAGLkC,IAAAA,KAAK,EAAE,CAAClC,MAAD;AAHF,GA9B2B;AAmClCmC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAEpC,MADF;AAERqC,IAAAA,QAAQ,EAAErC,MAFF;AAGRsC,IAAAA,SAAS,EAAEtC,MAHH;AAIRuC,IAAAA,QAAQ,EAAEhC;AAJF,GAnCwB;AAyClCiC,EAAAA,WAAW,EAAE;AACXC,IAAAA,YAAY,EAAE;AAAE1C,MAAAA,KAAK,EAAEC,MAAT;AAAiBS,MAAAA,IAAI,EAAEhB;AAAvB,KADH;AAEXiD,IAAAA,KAAK,EAAE1C,MAFI;AAGX2C,IAAAA,UAAU,EAAEC,MAHD;AAIX3B,IAAAA,IAAI,EAAE,CAACjB,MAAD,CAJK;AAKX6C,IAAAA,KAAK,EAAE7C;AALI,GAzCqB;AAgDlC8C,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE;AAAEhD,MAAAA,KAAK,EAAE6C,MAAT;AAAiBnC,MAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB;AAAvB,KADF;AAELuC,IAAAA,cAAc,EAAEzC,IAFX;AAGL0C,IAAAA,OAAO,EAAE,CAACjD,MAAD,CAHJ;AAIL8B,IAAAA,MAAM,EAAE;AAAE/B,MAAAA,KAAK,EAAEC,MAAT;AAAiBS,MAAAA,IAAI,EAAEf;AAAvB,KAJH;AAKLwD,IAAAA,SAAS,EAAE;AAAEnD,MAAAA,KAAK,EAAEC,MAAT;AAAiBS,MAAAA,IAAI,EAAEd;AAAvB;AALN;AAhD2B,CAAX,EAwDtB;AACDwD,EAAAA,UAAU,EAAE;AAAEC,IAAAA,SAAS,EAAE,YAAb;AAA2BC,IAAAA,SAAS,EAAE;AAAtC,GADX;AAEDC,EAAAA,SAAS,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAFV;AAGDC,EAAAA,WAAW,EAAE,IAHZ;AAIDC,EAAAA,OAAO,EAAE;AAJR,CAxDsB,CAAzB;;eAgEeC,kBAASC,KAAT,CAAe,aAAf,EAA8B/D,gBAA9B,C",
      "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/features/individuals",
      "sourcesContent": [
        "import mongoose, { Schema, SchemaType } from 'mongoose';\n\nconst ID = Schema.Types.ObjectId;\n\n/**\n * @class {individual} -- object for individuals to identifies people i had\n * \t@param {object} basicInfo - human basic info which contain\n * \t\t@param {STRING} name - name of human being\n * \t\t@param {STRING} fatherName\n * \t\t@param {STRING} motherName\n * \t\t@param {STRING} nickName\n\t\t\t@param {STRING} familyName\n\t\t\t@param {DATE}  birthDate\n\t\t\t@param {ENUM}  gender -  [\"ذكر \"و\"انثى\",\"غير ذلك\"]\n\t\t@param {object} contactInfo - contact info for people\n\t\t\t@param {ARRAYofOBJECT} phones -  [{service , num}] array of phones\n\t\t\t@param {ARRAY} emails - [] array of emails\n\t\t\t@param {ARRAYofOBJECT} socail [{type,url}]\n\t\t@param {OBJECT} address\n\t\t\t@param {STRING} city\n\t\t\t@param {STRING}  zqaq\n\t\t\t@param {STRING} homeNum\n\t\t\t@param {STRING} mahla\n\t\t\t@param {STRING} pointCenter - نقطة دالة\n\t\t\t@param {STRING} state -المنطقة\n\t\t@param {OBJECT} applicationInfo\n\t\t\t@param {DATE} applyDate\n\t\t\t@param {STRING} status\n\t\t\t@param {ID} byWho - المستقطب\n\t\t\t@param {ID} who - المعرف\n\t\t@param {OBJECT} skill -مهارات اصجاب العمل\n\t\t\t@param {ARRAYofSTRING} gifts - المهارات الاحترافية\n\t\t\t@param {ARRAY} extra - الاضافية\n\t\t\t@param {ARRAY} hobbies  - الهوايات\n\t\t@param {OBJECT} jonsInfo - معلومات العمل\n\t\t\t@param {DATE} hireDate - تاريج التعيين\n\t\t\t@param {STRING} workPlace - مكان العمل\n\t\t\t@param {STRING} majorJob\n\t\t\t@param {STRING} minorJob\n\t\t@param {OBJECT} generalInfo\n\t\t\t@param {ENUM} martialStaus - [\"اعزب\",\"متزوج\"]\n\t\t\t@param {STRING} image\n\t\t\t@param {NUMBER} numOfChild\n\t\t\t@param {ARRAy} type\n\t\t@param {OBJECT} study\n\t\t\t@param {ENUM} grade - المرحلة\n\t\t\t@param {DATE} graduationDate\n\t\t\t@param {ARRAY} special - التخصص\n\t\t\t@param {ENUM} status - خريج او طالب\n\t\t\t@param {ENUM} type - ابتدائي اعدادي متوسط ثانوي\n\n\t\t\t*/\n\nconst genders = ['ذكر', 'انثى'];\nconst mstatus = ['متزوج', 'اعزب'];\nconst Sstatus = ['خريج', 'طالب', 'امي'];\nconst tstudy = ['ابتدائي', 'متوسط', 'اعدادي', 'ثانوي', 'دبلوم', 'بكلوريوس', 'ماجستير', 'دكتوراه'];\nconst indivisualSchema = new Schema({\n  basicInfo: {\n    name: { $type: String, required: true },\n    fatherName: { $type: String },\n    motherName: { $type: String },\n    familyName: { $type: String },\n    nickName: { $type: String },\n    birthDate: Date,\n    gender: { $type: String, enum: genders },\n  },\n  contactInfo: {\n    phones: [{ service: String, num: String }],\n    emails: [{ $type: String, unique: true }],\n    social: [{ type: String, url: String }],\n\n  },\n  address: {\n    city: String,\n    state: String,\n    zqaq: String,\n    mahla: String,\n    homeNum: String,\n    pointCenter: String,\n  },\n  applicationInfo: {\n    applyDate: Date,\n    byWho: { $type: ID },\n    who: { $type: ID },\n    status: String,\n  },\n  skill: {\n    gifts: [String],\n    hobbies: [String],\n    extra: [String],\n  },\n  jonsInfo: {\n    majorJob: String,\n    minorJob: String,\n    workPlace: String,\n    hireDate: Date,\n  },\n  generalInfo: {\n    martialStaus: { $type: String, enum: mstatus },\n    image: String,\n    numOfChild: Number,\n    type: [String],\n    notes: String,\n  },\n  study: {\n    grade: { $type: Number, enum: [1, 2, 3, 4, 5, 6] },\n    graduationDate: Date,\n    special: [String],\n    status: { $type: String, enum: Sstatus },\n    typeStudy: { $type: String, enum: tstudy },\n  },\n\n}, {\n  timestamps: { createdAt: 'created_at', updatedAt: 'updated_at' },\n  collation: { locale: 'ar' },\n  strictQuery: true,\n  typeKey: '$type',\n});\n\n\nexport default mongoose.model('Individuals', indivisualSchema);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1548646688776
  },
  "{\"sourceRoot\":\"/var/www/html/sales/hayderApp/app/backend/src/features/individuals\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/var/www/html/sales/hayderApp/app/backend\",\"filename\":\"/var/www/html/sales/hayderApp/app/backend/src/features/individuals/individuals.router.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/var/www/html/sales/hayderApp/app/backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/features/individuals",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/var/www/html/sales/hayderApp/app/backend",
      "filename": "/var/www/html/sales/hayderApp/app/backend/src/features/individuals/individuals.router.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/var/www/html/sales/hayderApp/app/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/var/www/html/sales/hayderApp/app/backend/src/features/individuals/individuals.router.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/var/www/html/sales/hayderApp/app/backend/src/features/individuals/individuals.router.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/features/individuals",
        "sourceFileName": "individuals.router.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = require(\"express\");\n\nvar _expressValidation = _interopRequireDefault(require(\"express-validation\"));\n\nvar _individual = require(\"./individual.validation\");\n\nvar _individual2 = _interopRequireDefault(require(\"./individual.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable import/no-unresolved */\n\n/* eslint-disable import/no-named-as-default */\nvar router = (0, _express.Router)(); // first rest urli for adding individual\n\nrouter.route('/individual').post((0, _expressValidation.default)(_individual.indi), _individual2.default.addIndivduals); // editing individual\n\nrouter.route('/individual/edit').patch((0, _expressValidation.default)(_individual.indi), _individual2.default.editIndividual); // deletting individual\n\nrouter.route('/individual/:id').delete((0, _expressValidation.default)(_individual.ID), _individual2.default.deleteIndivisual); // get individuals\n\nrouter.route('/individuals').get(_individual2.default.getIndividuals);\nvar _default = router;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGl2aWR1YWxzLnJvdXRlci5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJyb3V0ZSIsInBvc3QiLCJpbmRpIiwiY29udHJvbGxlciIsImFkZEluZGl2ZHVhbHMiLCJwYXRjaCIsImVkaXRJbmRpdmlkdWFsIiwiZGVsZXRlIiwiSUQiLCJkZWxldGVJbmRpdmlzdWFsIiwiZ2V0IiwiZ2V0SW5kaXZpZHVhbHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUxBOztBQUNBO0FBTUEsSUFBTUEsTUFBTSxHQUFHLHNCQUFmLEMsQ0FFQTs7QUFDQUEsTUFBTSxDQUFDQyxLQUFQLENBQWEsYUFBYixFQUE0QkMsSUFBNUIsQ0FBaUMsZ0NBQVNDLGdCQUFULENBQWpDLEVBQWlEQyxxQkFBV0MsYUFBNUQsRSxDQUVBOztBQUNBTCxNQUFNLENBQUNDLEtBQVAsQ0FBYSxrQkFBYixFQUFpQ0ssS0FBakMsQ0FBdUMsZ0NBQVNILGdCQUFULENBQXZDLEVBQXVEQyxxQkFBV0csY0FBbEUsRSxDQUdBOztBQUVBUCxNQUFNLENBQUNDLEtBQVAsQ0FBYSxpQkFBYixFQUFnQ08sTUFBaEMsQ0FBdUMsZ0NBQVNDLGNBQVQsQ0FBdkMsRUFBcURMLHFCQUFXTSxnQkFBaEUsRSxDQUVBOztBQUVBVixNQUFNLENBQUNDLEtBQVAsQ0FBYSxjQUFiLEVBQTZCVSxHQUE3QixDQUFpQ1AscUJBQVdRLGNBQTVDO2VBQ2VaLE0iLCJzb3VyY2VSb290IjoiL3Zhci93d3cvaHRtbC9zYWxlcy9oYXlkZXJBcHAvYXBwL2JhY2tlbmQvc3JjL2ZlYXR1cmVzL2luZGl2aWR1YWxzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgaW1wb3J0L25vLXVucmVzb2x2ZWQgKi9cbi8qIGVzbGludC1kaXNhYmxlIGltcG9ydC9uby1uYW1lZC1hcy1kZWZhdWx0ICovXG5pbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdleHByZXNzJztcbmltcG9ydCB2YWxpZGF0ZSBmcm9tICdleHByZXNzLXZhbGlkYXRpb24nO1xuaW1wb3J0IHsgaW5kaSwgSUQgfSBmcm9tICcuL2luZGl2aWR1YWwudmFsaWRhdGlvbic7XG5pbXBvcnQgY29udHJvbGxlciBmcm9tICcuL2luZGl2aWR1YWwuY29udHJvbGxlcic7XG5cbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpO1xuXG4vLyBmaXJzdCByZXN0IHVybGkgZm9yIGFkZGluZyBpbmRpdmlkdWFsXG5yb3V0ZXIucm91dGUoJy9pbmRpdmlkdWFsJykucG9zdCh2YWxpZGF0ZShpbmRpKSwgY29udHJvbGxlci5hZGRJbmRpdmR1YWxzKTtcblxuLy8gZWRpdGluZyBpbmRpdmlkdWFsXG5yb3V0ZXIucm91dGUoJy9pbmRpdmlkdWFsL2VkaXQnKS5wYXRjaCh2YWxpZGF0ZShpbmRpKSwgY29udHJvbGxlci5lZGl0SW5kaXZpZHVhbCk7XG5cblxuLy8gZGVsZXR0aW5nIGluZGl2aWR1YWxcblxucm91dGVyLnJvdXRlKCcvaW5kaXZpZHVhbC86aWQnKS5kZWxldGUodmFsaWRhdGUoSUQpLCBjb250cm9sbGVyLmRlbGV0ZUluZGl2aXN1YWwpO1xuXG4vLyBnZXQgaW5kaXZpZHVhbHNcblxucm91dGVyLnJvdXRlKCcvaW5kaXZpZHVhbHMnKS5nZXQoY29udHJvbGxlci5nZXRJbmRpdmlkdWFscylcbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "individuals.router.js"
      ],
      "names": [
        "router",
        "route",
        "post",
        "indi",
        "controller",
        "addIndivduals",
        "patch",
        "editIndividual",
        "delete",
        "ID",
        "deleteIndivisual",
        "get",
        "getIndividuals"
      ],
      "mappings": ";;;;;;;AAEA;;AACA;;AACA;;AACA;;;;AALA;;AACA;AAMA,IAAMA,MAAM,GAAG,sBAAf,C,CAEA;;AACAA,MAAM,CAACC,KAAP,CAAa,aAAb,EAA4BC,IAA5B,CAAiC,gCAASC,gBAAT,CAAjC,EAAiDC,qBAAWC,aAA5D,E,CAEA;;AACAL,MAAM,CAACC,KAAP,CAAa,kBAAb,EAAiCK,KAAjC,CAAuC,gCAASH,gBAAT,CAAvC,EAAuDC,qBAAWG,cAAlE,E,CAGA;;AAEAP,MAAM,CAACC,KAAP,CAAa,iBAAb,EAAgCO,MAAhC,CAAuC,gCAASC,cAAT,CAAvC,EAAqDL,qBAAWM,gBAAhE,E,CAEA;;AAEAV,MAAM,CAACC,KAAP,CAAa,cAAb,EAA6BU,GAA7B,CAAiCP,qBAAWQ,cAA5C;eACeZ,M",
      "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/features/individuals",
      "sourcesContent": [
        "/* eslint-disable import/no-unresolved */\n/* eslint-disable import/no-named-as-default */\nimport { Router } from 'express';\nimport validate from 'express-validation';\nimport { indi, ID } from './individual.validation';\nimport controller from './individual.controller';\n\nconst router = Router();\n\n// first rest urli for adding individual\nrouter.route('/individual').post(validate(indi), controller.addIndivduals);\n\n// editing individual\nrouter.route('/individual/edit').patch(validate(indi), controller.editIndividual);\n\n\n// deletting individual\n\nrouter.route('/individual/:id').delete(validate(ID), controller.deleteIndivisual);\n\n// get individuals\n\nrouter.route('/individuals').get(controller.getIndividuals)\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1548714639869
  },
  "{\"sourceRoot\":\"/var/www/html/sales/hayderApp/app/backend/src/helpers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/var/www/html/sales/hayderApp/app/backend\",\"filename\":\"/var/www/html/sales/hayderApp/app/backend/src/helpers/resonses.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/var/www/html/sales/hayderApp/app/backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/helpers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/var/www/html/sales/hayderApp/app/backend",
      "filename": "/var/www/html/sales/hayderApp/app/backend/src/helpers/resonses.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/var/www/html/sales/hayderApp/app/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/var/www/html/sales/hayderApp/app/backend/src/helpers/resonses.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/var/www/html/sales/hayderApp/app/backend/src/helpers/resonses.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/helpers",
        "sourceFileName": "resonses.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.cleanResponse = void 0;\n\nvar cleanResponse = function cleanResponse(res, _ref) {\n  var msg = _ref.msg,\n      code = _ref.code,\n      data = _ref.data;\n\n  if (data) {\n    return res.status(code).send({\n      msg: msg,\n      data: data\n    });\n  }\n\n  return res.status(code).send({\n    msg: msg\n  });\n};\n\nexports.cleanResponse = cleanResponse;\nvar _default = {\n  cleanResponse: cleanResponse\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc29uc2VzLmpzIl0sIm5hbWVzIjpbImNsZWFuUmVzcG9uc2UiLCJyZXMiLCJtc2ciLCJjb2RlIiwiZGF0YSIsInN0YXR1cyIsInNlbmQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBTyxJQUFNQSxhQUFhLEdBQUcsU0FBaEJBLGFBQWdCLENBQUNDLEdBQUQsUUFBOEI7QUFBQSxNQUF0QkMsR0FBc0IsUUFBdEJBLEdBQXNCO0FBQUEsTUFBakJDLElBQWlCLFFBQWpCQSxJQUFpQjtBQUFBLE1BQVhDLElBQVcsUUFBWEEsSUFBVzs7QUFDekQsTUFBSUEsSUFBSixFQUFVO0FBQ1IsV0FBT0gsR0FBRyxDQUFDSSxNQUFKLENBQVdGLElBQVgsRUFBaUJHLElBQWpCLENBQXNCO0FBQUVKLE1BQUFBLEdBQUcsRUFBSEEsR0FBRjtBQUFPRSxNQUFBQSxJQUFJLEVBQUpBO0FBQVAsS0FBdEIsQ0FBUDtBQUNEOztBQUNELFNBQU9ILEdBQUcsQ0FBQ0ksTUFBSixDQUFXRixJQUFYLEVBQWlCRyxJQUFqQixDQUFzQjtBQUFFSixJQUFBQSxHQUFHLEVBQUhBO0FBQUYsR0FBdEIsQ0FBUDtBQUNELENBTE07OztlQVFRO0FBQ2RGLEVBQUFBLGFBQWEsRUFBYkE7QUFEYyxDIiwic291cmNlUm9vdCI6Ii92YXIvd3d3L2h0bWwvc2FsZXMvaGF5ZGVyQXBwL2FwcC9iYWNrZW5kL3NyYy9oZWxwZXJzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGNsZWFuUmVzcG9uc2UgPSAocmVzLCB7IG1zZywgY29kZSwgZGF0YSB9KSA9PiB7XG4gIGlmIChkYXRhKSB7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoY29kZSkuc2VuZCh7IG1zZywgZGF0YSB9KTtcbiAgfVxuICByZXR1cm4gcmVzLnN0YXR1cyhjb2RlKS5zZW5kKHsgbXNnIH0pO1xufTtcblxuXG5leHBvcnQgZGVmYXVsdCB7XG5cdGNsZWFuUmVzcG9uc2Vcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "resonses.js"
      ],
      "names": [
        "cleanResponse",
        "res",
        "msg",
        "code",
        "data",
        "status",
        "send"
      ],
      "mappings": ";;;;;;;AAAO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,GAAD,QAA8B;AAAA,MAAtBC,GAAsB,QAAtBA,GAAsB;AAAA,MAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AACzD,MAAIA,IAAJ,EAAU;AACR,WAAOH,GAAG,CAACI,MAAJ,CAAWF,IAAX,EAAiBG,IAAjB,CAAsB;AAAEJ,MAAAA,GAAG,EAAHA,GAAF;AAAOE,MAAAA,IAAI,EAAJA;AAAP,KAAtB,CAAP;AACD;;AACD,SAAOH,GAAG,CAACI,MAAJ,CAAWF,IAAX,EAAiBG,IAAjB,CAAsB;AAAEJ,IAAAA,GAAG,EAAHA;AAAF,GAAtB,CAAP;AACD,CALM;;;eAQQ;AACdF,EAAAA,aAAa,EAAbA;AADc,C",
      "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/helpers",
      "sourcesContent": [
        "export const cleanResponse = (res, { msg, code, data }) => {\n  if (data) {\n    return res.status(code).send({ msg, data });\n  }\n  return res.status(code).send({ msg });\n};\n\n\nexport default {\n\tcleanResponse\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1548801173287
  },
  "{\"sourceRoot\":\"/var/www/html/sales/hayderApp/app/backend/src/features/trips\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/var/www/html/sales/hayderApp/app/backend\",\"filename\":\"/var/www/html/sales/hayderApp/app/backend/src/features/trips/trips.router.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/var/www/html/sales/hayderApp/app/backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/features/trips",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/var/www/html/sales/hayderApp/app/backend",
      "filename": "/var/www/html/sales/hayderApp/app/backend/src/features/trips/trips.router.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/var/www/html/sales/hayderApp/app/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/var/www/html/sales/hayderApp/app/backend/src/features/trips/trips.router.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/var/www/html/sales/hayderApp/app/backend/src/features/trips/trips.router.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/features/trips",
        "sourceFileName": "trips.router.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _trips = _interopRequireDefault(require(\"./trips.controller\"));\n\nvar _trips2 = require(\"./trips.validate\");\n\nvar _expressValidation = _interopRequireDefault(require(\"express-validation\"));\n\nvar _express = require(\"express\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = (0, _express.Router)(); // add trips to database\n\nrouter.route('/trip').post((0, _expressValidation.default)(_trips2.tripValidate), _trips.default.addTrips); // edit trips\n\nrouter.route('/trip/:id').patch((0, _expressValidation.default)(_trips2.edtiDeleteValidate), _trips.default.editTrip); // delete trip by id\n\nrouter.route('/trip/:id').delete((0, _expressValidation.default)(_trips2.edtiDeleteValidate), _trips.default.deleteTrip); //get trip\n\nrouter.route('/trip').get((0, _expressValidation.default)(_trips2.queryValidate), _trips.default.getTrips);\nvar _default = router;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyaXBzLnJvdXRlci5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJyb3V0ZSIsInBvc3QiLCJ0cmlwVmFsaWRhdGUiLCJjb250cm9sbGVyIiwiYWRkVHJpcHMiLCJwYXRjaCIsImVkdGlEZWxldGVWYWxpZGF0ZSIsImVkaXRUcmlwIiwiZGVsZXRlIiwiZGVsZXRlVHJpcCIsImdldCIsInF1ZXJ5VmFsaWRhdGUiLCJnZXRUcmlwcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUEsSUFBTUEsTUFBTSxHQUFHLHNCQUFmLEMsQ0FFQTs7QUFDQUEsTUFBTSxDQUFDQyxLQUFQLENBQWEsT0FBYixFQUFzQkMsSUFBdEIsQ0FBMkIsZ0NBQVNDLG9CQUFULENBQTNCLEVBQW1EQyxlQUFXQyxRQUE5RCxFLENBRUE7O0FBQ0FMLE1BQU0sQ0FBQ0MsS0FBUCxDQUFhLFdBQWIsRUFBMEJLLEtBQTFCLENBQWdDLGdDQUFTQywwQkFBVCxDQUFoQyxFQUE4REgsZUFBV0ksUUFBekUsRSxDQUdBOztBQUNBUixNQUFNLENBQUNDLEtBQVAsQ0FBYSxXQUFiLEVBQTBCUSxNQUExQixDQUFpQyxnQ0FBU0YsMEJBQVQsQ0FBakMsRUFBK0RILGVBQVdNLFVBQTFFLEUsQ0FFQTs7QUFDQVYsTUFBTSxDQUFDQyxLQUFQLENBQWEsT0FBYixFQUFzQlUsR0FBdEIsQ0FBMEIsZ0NBQVNDLHFCQUFULENBQTFCLEVBQW1EUixlQUFXUyxRQUE5RDtlQUVlYixNIiwic291cmNlUm9vdCI6Ii92YXIvd3d3L2h0bWwvc2FsZXMvaGF5ZGVyQXBwL2FwcC9iYWNrZW5kL3NyYy9mZWF0dXJlcy90cmlwcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjb250cm9sbGVyIGZyb20gJy4vdHJpcHMuY29udHJvbGxlcic7XG5pbXBvcnQgeyB0cmlwVmFsaWRhdGUsIHF1ZXJ5VmFsaWRhdGUsIGVkdGlEZWxldGVWYWxpZGF0ZSB9IGZyb20gJy4vdHJpcHMudmFsaWRhdGUnO1xuaW1wb3J0IHZhbGlkYXRlIGZyb20gJ2V4cHJlc3MtdmFsaWRhdGlvbic7XG5pbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdleHByZXNzJztcblxuY29uc3Qgcm91dGVyID0gUm91dGVyKCk7XG5cbi8vIGFkZCB0cmlwcyB0byBkYXRhYmFzZVxucm91dGVyLnJvdXRlKCcvdHJpcCcpLnBvc3QodmFsaWRhdGUodHJpcFZhbGlkYXRlKSwgY29udHJvbGxlci5hZGRUcmlwcyk7XG5cbi8vIGVkaXQgdHJpcHNcbnJvdXRlci5yb3V0ZSgnL3RyaXAvOmlkJykucGF0Y2godmFsaWRhdGUoZWR0aURlbGV0ZVZhbGlkYXRlKSwgY29udHJvbGxlci5lZGl0VHJpcClcblxuXG4vLyBkZWxldGUgdHJpcCBieSBpZFxucm91dGVyLnJvdXRlKCcvdHJpcC86aWQnKS5kZWxldGUodmFsaWRhdGUoZWR0aURlbGV0ZVZhbGlkYXRlKSwgY29udHJvbGxlci5kZWxldGVUcmlwKVxuXG4vL2dldCB0cmlwXG5yb3V0ZXIucm91dGUoJy90cmlwJykuZ2V0KHZhbGlkYXRlKHF1ZXJ5VmFsaWRhdGUpLCBjb250cm9sbGVyLmdldFRyaXBzKVxuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "trips.router.js"
      ],
      "names": [
        "router",
        "route",
        "post",
        "tripValidate",
        "controller",
        "addTrips",
        "patch",
        "edtiDeleteValidate",
        "editTrip",
        "delete",
        "deleteTrip",
        "get",
        "queryValidate",
        "getTrips"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,MAAM,GAAG,sBAAf,C,CAEA;;AACAA,MAAM,CAACC,KAAP,CAAa,OAAb,EAAsBC,IAAtB,CAA2B,gCAASC,oBAAT,CAA3B,EAAmDC,eAAWC,QAA9D,E,CAEA;;AACAL,MAAM,CAACC,KAAP,CAAa,WAAb,EAA0BK,KAA1B,CAAgC,gCAASC,0BAAT,CAAhC,EAA8DH,eAAWI,QAAzE,E,CAGA;;AACAR,MAAM,CAACC,KAAP,CAAa,WAAb,EAA0BQ,MAA1B,CAAiC,gCAASF,0BAAT,CAAjC,EAA+DH,eAAWM,UAA1E,E,CAEA;;AACAV,MAAM,CAACC,KAAP,CAAa,OAAb,EAAsBU,GAAtB,CAA0B,gCAASC,qBAAT,CAA1B,EAAmDR,eAAWS,QAA9D;eAEeb,M",
      "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/features/trips",
      "sourcesContent": [
        "import controller from './trips.controller';\nimport { tripValidate, queryValidate, edtiDeleteValidate } from './trips.validate';\nimport validate from 'express-validation';\nimport { Router } from 'express';\n\nconst router = Router();\n\n// add trips to database\nrouter.route('/trip').post(validate(tripValidate), controller.addTrips);\n\n// edit trips\nrouter.route('/trip/:id').patch(validate(edtiDeleteValidate), controller.editTrip)\n\n\n// delete trip by id\nrouter.route('/trip/:id').delete(validate(edtiDeleteValidate), controller.deleteTrip)\n\n//get trip\nrouter.route('/trip').get(validate(queryValidate), controller.getTrips)\n\nexport default router\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1548846262742
  },
  "{\"sourceRoot\":\"/var/www/html/sales/hayderApp/app/backend/src/features/trips\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/var/www/html/sales/hayderApp/app/backend\",\"filename\":\"/var/www/html/sales/hayderApp/app/backend/src/features/trips/trips.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/var/www/html/sales/hayderApp/app/backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/features/trips",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/var/www/html/sales/hayderApp/app/backend",
      "filename": "/var/www/html/sales/hayderApp/app/backend/src/features/trips/trips.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/var/www/html/sales/hayderApp/app/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/var/www/html/sales/hayderApp/app/backend/src/features/trips/trips.controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/var/www/html/sales/hayderApp/app/backend/src/features/trips/trips.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/features/trips",
        "sourceFileName": "trips.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _trips = _interopRequireDefault(require(\"./trips.model\"));\n\nvar _resonses = require(\"../../helpers/resonses\");\n\nvar _chalking = _interopRequireDefault(require(\"../../config/chalking\"));\n\nvar _errora = _interopRequireDefault(require(\"../../config/errora\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// add trips to database\nvar addTrips = function addTrips(req, res, next) {\n  console.log(_chalking.default.bgreen('we here at #addTrip')); // extract data from body afet parse it using bodyParser\n\n  var data = req.body.data; // data extract by itslef\n\n  var newTrip = new _trips.default(data); // console.log(newTrip)\n  // save to database\n\n  newTrip.save().then(function (trip) {\n    console.log(_chalking.default.bgreen(trip));\n    (0, _resonses.cleanResponse)(res, {\n      code: 200,\n      msg: 'مبروك لقد قمت باضافة رحلة جديدة'\n    });\n  }).catch(function (err) {\n    console.log(_chalking.default.error(err));\n    next(err);\n  });\n}; // edit trips\n\n\nvar editTrip = function editTrip(req, res, next) {\n  var id = req.params.id;\n  var data = req.body.data; // edit one\n\n  _trips.default.findByIdAndUpdate(id, data).then(function (trip) {\n    console.log(trip);\n    (0, _resonses.cleanResponse)(res, {\n      code: 200,\n      msg: 'لقد قمت بتعديل هذا الكائن الحي'\n    });\n  }).catch(function (err) {\n    console.log(_chalking.default.error(err));\n    next(err);\n  });\n}; // delete trips\n\n\nvar deleteTrip = function deleteTrip(req, res, next) {\n  var id = req.params.id;\n\n  _trips.default.findByIdAndDelete(id).then(function (trip) {\n    console.log(trip);\n    (0, _resonses.cleanResponse)(res, {\n      code: 200,\n      msg: \"لقد قمت بسمح هذا الكائن الحي\"\n    });\n  }).catch(function (err) {\n    console.log((0, _chalking.default)(err));\n    next(err);\n  });\n}; // show trips\n\n\nvar getTrips = function getTrips(req, res, next) {\n  var _req$query = req.query,\n      trips_ui = _req$query.trips_ui,\n      l = _req$query.l,\n      p = _req$query.p,\n      id = _req$query.id; // paginattion thin\n\n  var skip = l * (p - 1); // const { id } = req.params;\n\n  var data = {}; // get data for tables\n\n  if (trips_ui === 'tableShow') {\n    _trips.default.find({}, {}, {\n      skip: skip,\n      limit: parseInt(l)\n    }).then(function (trips) {\n      data.trips = trips;\n      return _trips.default.countDocuments();\n    }).then(function (counts) {\n      data.pages = counts;\n      (0, _resonses.cleanResponse)(res, {\n        code: 200,\n        msg: 'لقد قمت بجلب الرحلات ',\n        data: data\n      });\n    }).catch(function (err) {\n      console.log(_chalking.default.error(err));\n      next(err);\n    });\n  } else if (trips_ui === 'tripShow') {\n    // tripShow\n    _trips.default.findById(id).then(function (trip) {\n      data.trip = trip;\n      (0, _resonses.cleanResponse)(res, {\n        code: 200,\n        msg: 'لقد قمت بجلب الرحلات ',\n        data: data\n      });\n    }).catch(function (err) {\n      console.log(_chalking.default.error(err));\n      next(err);\n    });\n  } else {\n    var err = new _errora.default('لتحاول تصير سمير عفية', {\n      status: 404\n    }); // if it is scape the constion\n\n    return next(err);\n  }\n};\n\nvar _default = {\n  addTrips: addTrips,\n  deleteTrip: deleteTrip,\n  editTrip: editTrip,\n  getTrips: getTrips\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "trips.controller.js"
      ],
      "names": [
        "addTrips",
        "req",
        "res",
        "next",
        "console",
        "log",
        "_c",
        "bgreen",
        "data",
        "body",
        "newTrip",
        "TRIPS",
        "save",
        "then",
        "trip",
        "code",
        "msg",
        "catch",
        "err",
        "error",
        "editTrip",
        "id",
        "params",
        "findByIdAndUpdate",
        "deleteTrip",
        "findByIdAndDelete",
        "getTrips",
        "query",
        "trips_ui",
        "l",
        "p",
        "skip",
        "find",
        "limit",
        "parseInt",
        "trips",
        "countDocuments",
        "counts",
        "pages",
        "findById",
        "E",
        "status"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AACA;AACA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAYC,kBAAGC,MAAH,CAAU,qBAAV,CAAZ,EADmC,CAEnC;;AAFmC,MAG3BC,IAH2B,GAGlBP,GAAG,CAACQ,IAHc,CAG3BD,IAH2B,EAKnC;;AACA,MAAME,OAAO,GAAG,IAAIC,cAAJ,CAAUH,IAAV,CAAhB,CANmC,CAQnC;AACA;;AACAE,EAAAA,OAAO,CAACE,IAAR,GAAeC,IAAf,CAAoB,UAACC,IAAD,EAAU;AAC5BV,IAAAA,OAAO,CAACC,GAAR,CAAYC,kBAAGC,MAAH,CAAUO,IAAV,CAAZ;AAEA,iCAAcZ,GAAd,EAAmB;AAAEa,MAAAA,IAAI,EAAE,GAAR;AAAaC,MAAAA,GAAG,EAAE;AAAlB,KAAnB;AACD,GAJD,EAIGC,KAJH,CAIS,UAACC,GAAD,EAAS;AAChBd,IAAAA,OAAO,CAACC,GAAR,CAAYC,kBAAGa,KAAH,CAASD,GAAT,CAAZ;AACAf,IAAAA,IAAI,CAACe,GAAD,CAAJ;AACD,GAPD;AAQD,CAlBD,C,CAqBA;;;AACA,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAACnB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAAA,MAC3BkB,EAD2B,GACpBpB,GAAG,CAACqB,MADgB,CAC3BD,EAD2B;AAAA,MAE3Bb,IAF2B,GAElBP,GAAG,CAACQ,IAFc,CAE3BD,IAF2B,EAKnC;;AACAG,iBAAMY,iBAAN,CAAwBF,EAAxB,EAA4Bb,IAA5B,EACGK,IADH,CACQ,UAACC,IAAD,EAAU;AACdV,IAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;AACA,iCAAcZ,GAAd,EAAmB;AAAEa,MAAAA,IAAI,EAAE,GAAR;AAAaC,MAAAA,GAAG,EAAE;AAAlB,KAAnB;AACD,GAJH,EAKGC,KALH,CAKS,UAACC,GAAD,EAAS;AACdd,IAAAA,OAAO,CAACC,GAAR,CAAYC,kBAAGa,KAAH,CAASD,GAAT,CAAZ;AACAf,IAAAA,IAAI,CAACe,GAAD,CAAJ;AACD,GARH;AASD,CAfD,C,CAiBA;;;AACA,IAAMM,UAAU,GAAG,SAAbA,UAAa,CAACvB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAAA,MAC7BkB,EAD6B,GACtBpB,GAAG,CAACqB,MADkB,CAC7BD,EAD6B;;AAGrCV,iBAAMc,iBAAN,CAAwBJ,EAAxB,EACGR,IADH,CACQ,UAACC,IAAD,EAAU;AACjBV,IAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;AACG,iCAAcZ,GAAd,EAAmB;AAACa,MAAAA,IAAI,EAAE,GAAP;AAAYC,MAAAA,GAAG,EAAC;AAAhB,KAAnB;AACD,GAJH,EAKGC,KALH,CAKS,UAACC,GAAD,EAAS;AACdd,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAGa,GAAH,CAAZ;AACAf,IAAAA,IAAI,CAACe,GAAD,CAAJ;AACD,GARH;AASD,CAZD,C,CAeA;;;AACA,IAAMQ,QAAQ,GAAG,SAAXA,QAAW,CAACzB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAAA,mBAGjCF,GAAG,CAAC0B,KAH6B;AAAA,MAEpCC,QAFoC,cAEpCA,QAFoC;AAAA,MAE1BC,CAF0B,cAE1BA,CAF0B;AAAA,MAEvBC,CAFuB,cAEvBA,CAFuB;AAAA,MAEpBT,EAFoB,cAEpBA,EAFoB,EAInC;;AACA,MAAMU,IAAI,GAAGF,CAAC,IAAIC,CAAC,GAAG,CAAR,CAAd,CALmC,CAOnC;;AACA,MAAMtB,IAAI,GAAG,EAAb,CARmC,CASnC;;AACA,MAAIoB,QAAQ,KAAK,WAAjB,EAA8B;AAC5BjB,mBAAMqB,IAAN,CAAW,EAAX,EAAe,EAAf,EAAmB;AAAED,MAAAA,IAAI,EAAJA,IAAF;AAAQE,MAAAA,KAAK,EAAEC,QAAQ,CAACL,CAAD;AAAvB,KAAnB,EACGhB,IADH,CACQ,UAACsB,KAAD,EAAW;AACf3B,MAAAA,IAAI,CAAC2B,KAAL,GAAaA,KAAb;AACA,aAAOxB,eAAMyB,cAAN,EAAP;AACD,KAJH,EAIKvB,IAJL,CAIU,UAACwB,MAAD,EAAY;AAClB7B,MAAAA,IAAI,CAAC8B,KAAL,GAAaD,MAAb;AACA,mCAAcnC,GAAd,EAAmB;AAAEa,QAAAA,IAAI,EAAE,GAAR;AAAaC,QAAAA,GAAG,EAAE,uBAAlB;AAA2CR,QAAAA,IAAI,EAAJA;AAA3C,OAAnB;AACD,KAPH,EAOKS,KAPL,CAOW,UAACC,GAAD,EAAS;AAChBd,MAAAA,OAAO,CAACC,GAAR,CAAYC,kBAAGa,KAAH,CAASD,GAAT,CAAZ;AACAf,MAAAA,IAAI,CAACe,GAAD,CAAJ;AACD,KAVH;AAWD,GAZD,MAYO,IAAIU,QAAQ,KAAK,UAAjB,EAA6B;AAClC;AAEAjB,mBAAM4B,QAAN,CAAelB,EAAf,EACGR,IADH,CACQ,UAACC,IAAD,EAAU;AACdN,MAAAA,IAAI,CAACM,IAAL,GAAYA,IAAZ;AACA,mCAAcZ,GAAd,EAAmB;AAAEa,QAAAA,IAAI,EAAE,GAAR;AAAaC,QAAAA,GAAG,EAAE,uBAAlB;AAA2CR,QAAAA,IAAI,EAAJA;AAA3C,OAAnB;AACD,KAJH,EAKGS,KALH,CAKS,UAACC,GAAD,EAAS;AACdd,MAAAA,OAAO,CAACC,GAAR,CAAYC,kBAAGa,KAAH,CAASD,GAAT,CAAZ;AACAf,MAAAA,IAAI,CAACe,GAAD,CAAJ;AACD,KARH;AASD,GAZM,MAYD;AACJ,QAAMA,GAAG,GAAG,IAAIsB,eAAJ,CAAM,uBAAN,EAA+B;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAA/B,CAAZ,CADI,CAEJ;;AACA,WAAOtC,IAAI,CAACe,GAAD,CAAX;AACD;AACF,CAvCD;;eA0Ce;AACblB,EAAAA,QAAQ,EAARA,QADa;AACHwB,EAAAA,UAAU,EAAVA,UADG;AACSJ,EAAAA,QAAQ,EAARA,QADT;AACmBM,EAAAA,QAAQ,EAARA;AADnB,C",
      "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/features/trips",
      "sourcesContent": [
        "import TRIPS from './trips.model';\nimport { cleanResponse } from '../../helpers/resonses';\nimport _c from '../../config/chalking';\nimport E from '../../config/errora';\n// add trips to database\nconst addTrips = (req, res, next) => {\n  console.log(_c.bgreen('we here at #addTrip'));\n  // extract data from body afet parse it using bodyParser\n  const { data } = req.body;\n\n  // data extract by itslef\n  const newTrip = new TRIPS(data);\n\n  // console.log(newTrip)\n  // save to database\n  newTrip.save().then((trip) => {\n    console.log(_c.bgreen(trip));\n\n    cleanResponse(res, { code: 200, msg: 'مبروك لقد قمت باضافة رحلة جديدة' });\n  }).catch((err) => {\n    console.log(_c.error(err));\n    next(err);\n  });\n};\n\n\n// edit trips\nconst editTrip = (req, res, next) => {\n  const { id } = req.params;\n  const { data } = req.body;\n\n\n  // edit one\n  TRIPS.findByIdAndUpdate(id, data)\n    .then((trip) => {\n      console.log(trip);\n      cleanResponse(res, { code: 200, msg: 'لقد قمت بتعديل هذا الكائن الحي' });\n    })\n    .catch((err) => {\n      console.log(_c.error(err));\n      next(err);\n    });\n};\n\n// delete trips\nconst deleteTrip = (req, res, next) => {\n  const { id } = req.params;\n\n  TRIPS.findByIdAndDelete(id)\n    .then((trip) => {\n\t\t\tconsole.log(trip);\n      cleanResponse(res, {code: 200, msg:\"لقد قمت بسمح هذا الكائن الحي\"})\n    })\n    .catch((err) => {\n      console.log(_c(err));\n      next(err);\n    });\n};\n\n\n// show trips\nconst getTrips = (req, res, next) => {\n  const {\n trips_ui, l, p, id\n} = req.query;\n  // paginattion thin\n  const skip = l * (p - 1);\n\n  // const { id } = req.params;\n  const data = {};\n  // get data for tables\n  if (trips_ui === 'tableShow') {\n    TRIPS.find({}, {}, { skip, limit: parseInt(l) })\n      .then((trips) => {\n        data.trips = trips;\n        return TRIPS.countDocuments();\n      }).then((counts) => {\n        data.pages = counts;\n        cleanResponse(res, { code: 200, msg: 'لقد قمت بجلب الرحلات ', data });\n      }).catch((err) => {\n        console.log(_c.error(err));\n        next(err);\n      });\n  } else if (trips_ui === 'tripShow') {\n    // tripShow\n\n    TRIPS.findById(id)\n      .then((trip) => {\n        data.trip = trip;\n        cleanResponse(res, { code: 200, msg: 'لقد قمت بجلب الرحلات ', data });\n      })\n      .catch((err) => {\n        console.log(_c.error(err));\n        next(err);\n      });\n  }else {\n    const err = new E('لتحاول تصير سمير عفية', { status: 404 });\n    // if it is scape the constion\n    return next(err);\n  }\n};\n\n\nexport default {\n  addTrips, deleteTrip, editTrip, getTrips,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1548848719838
  },
  "{\"sourceRoot\":\"/var/www/html/sales/hayderApp/app/backend/src/features/trips\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/var/www/html/sales/hayderApp/app/backend\",\"filename\":\"/var/www/html/sales/hayderApp/app/backend/src/features/trips/trips.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/var/www/html/sales/hayderApp/app/backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/features/trips",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/var/www/html/sales/hayderApp/app/backend",
      "filename": "/var/www/html/sales/hayderApp/app/backend/src/features/trips/trips.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/var/www/html/sales/hayderApp/app/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/var/www/html/sales/hayderApp/app/backend/src/features/trips/trips.model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/var/www/html/sales/hayderApp/app/backend/src/features/trips/trips.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/features/trips",
        "sourceFileName": "trips.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _mongoose = require(\"mongoose\");\n\n/**\n *  {TRIP_SCHEMA}\n * @param {STRING}  title - name of trip\n * @param {STRING} type - type of trips\n * @param {STRING} note - notes for the string\n * @param {OBJECT}  date - consiste of\n * \t@param {DATE} from - date.from start date for the trips\n * \t@param {DATE} to -  date.to end date of trip\n * @param {STRING} place - where we go on this trip\n * @param {ARRAY} sby - supervise by so person fromindividual\n * @param {ARRAY} travelers  - individuals who would like to travel for long run\n *\n */\nvar tripsSchema = new _mongoose.Schema({\n  title: {\n    $type: String,\n    required: true\n  },\n  type: String,\n  note: String,\n  date: {\n    from: Date,\n    to: Date\n  },\n  place: String,\n  status: Number,\n  sby: [{\n    $type: _mongoose.Schema.Types.ObjectId,\n    ref: 'Individuals'\n  }],\n  travelers: [{\n    $type: _mongoose.Schema.Types.ObjectId,\n    ref: 'Individuals'\n  }],\n  by: _mongoose.Schema.Types.ObjectId\n}, {\n  timestamps: {\n    createdAt: 'created_at',\n    updatedAt: 'updated_at'\n  },\n  collation: {\n    locale: 'ar'\n  },\n  strictQuery: true,\n  typeKey: '$type'\n});\n\nvar _default = (0, _mongoose.model)('Trip', tripsSchema);\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyaXBzLm1vZGVsLmpzIl0sIm5hbWVzIjpbInRyaXBzU2NoZW1hIiwiU2NoZW1hIiwidGl0bGUiLCIkdHlwZSIsIlN0cmluZyIsInJlcXVpcmVkIiwidHlwZSIsIm5vdGUiLCJkYXRlIiwiZnJvbSIsIkRhdGUiLCJ0byIsInBsYWNlIiwic3RhdHVzIiwiTnVtYmVyIiwic2J5IiwiVHlwZXMiLCJPYmplY3RJZCIsInJlZiIsInRyYXZlbGVycyIsImJ5IiwidGltZXN0YW1wcyIsImNyZWF0ZWRBdCIsInVwZGF0ZWRBdCIsImNvbGxhdGlvbiIsImxvY2FsZSIsInN0cmljdFF1ZXJ5IiwidHlwZUtleSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUlBOzs7Ozs7Ozs7Ozs7O0FBY0EsSUFBTUEsV0FBVyxHQUFHLElBQUlDLGdCQUFKLENBQVc7QUFDN0JDLEVBQUFBLEtBQUssRUFBRTtBQUFFQyxJQUFBQSxLQUFLLEVBQUVDLE1BQVQ7QUFBaUJDLElBQUFBLFFBQVEsRUFBRTtBQUEzQixHQURzQjtBQUU3QkMsRUFBQUEsSUFBSSxFQUFFRixNQUZ1QjtBQUc3QkcsRUFBQUEsSUFBSSxFQUFFSCxNQUh1QjtBQUk3QkksRUFBQUEsSUFBSSxFQUFFO0FBQUVDLElBQUFBLElBQUksRUFBRUMsSUFBUjtBQUFjQyxJQUFBQSxFQUFFLEVBQUVEO0FBQWxCLEdBSnVCO0FBSzdCRSxFQUFBQSxLQUFLLEVBQUVSLE1BTHNCO0FBTTdCUyxFQUFBQSxNQUFNLEVBQUVDLE1BTnFCO0FBTzdCQyxFQUFBQSxHQUFHLEVBQUUsQ0FBQztBQUFFWixJQUFBQSxLQUFLLEVBQUVGLGlCQUFPZSxLQUFQLENBQWFDLFFBQXRCO0FBQWdDQyxJQUFBQSxHQUFHLEVBQUU7QUFBckMsR0FBRCxDQVB3QjtBQVE3QkMsRUFBQUEsU0FBUyxFQUFFLENBQUM7QUFBRWhCLElBQUFBLEtBQUssRUFBRUYsaUJBQU9lLEtBQVAsQ0FBYUMsUUFBdEI7QUFBZ0NDLElBQUFBLEdBQUcsRUFBRTtBQUFyQyxHQUFELENBUmtCO0FBUzdCRSxFQUFBQSxFQUFFLEVBQUVuQixpQkFBT2UsS0FBUCxDQUFhQztBQVRZLENBQVgsRUFVakI7QUFDREksRUFBQUEsVUFBVSxFQUFFO0FBQUVDLElBQUFBLFNBQVMsRUFBRSxZQUFiO0FBQTJCQyxJQUFBQSxTQUFTLEVBQUU7QUFBdEMsR0FEWDtBQUVEQyxFQUFBQSxTQUFTLEVBQUU7QUFBRUMsSUFBQUEsTUFBTSxFQUFFO0FBQVYsR0FGVjtBQUdEQyxFQUFBQSxXQUFXLEVBQUUsSUFIWjtBQUlEQyxFQUFBQSxPQUFPLEVBQUU7QUFKUixDQVZpQixDQUFwQjs7ZUFrQmUscUJBQU0sTUFBTixFQUFjM0IsV0FBZCxDIiwic291cmNlUm9vdCI6Ii92YXIvd3d3L2h0bWwvc2FsZXMvaGF5ZGVyQXBwL2FwcC9iYWNrZW5kL3NyYy9mZWF0dXJlcy90cmlwcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIFNjaGVtYSwgbW9kZWwsIFNjaGVtYVR5cGUsIFNjaGVtYVR5cGVzLFxufSBmcm9tICdtb25nb29zZSc7XG5cbi8qKlxuICogIHtUUklQX1NDSEVNQX1cbiAqIEBwYXJhbSB7U1RSSU5HfSAgdGl0bGUgLSBuYW1lIG9mIHRyaXBcbiAqIEBwYXJhbSB7U1RSSU5HfSB0eXBlIC0gdHlwZSBvZiB0cmlwc1xuICogQHBhcmFtIHtTVFJJTkd9IG5vdGUgLSBub3RlcyBmb3IgdGhlIHN0cmluZ1xuICogQHBhcmFtIHtPQkpFQ1R9ICBkYXRlIC0gY29uc2lzdGUgb2ZcbiAqIFx0QHBhcmFtIHtEQVRFfSBmcm9tIC0gZGF0ZS5mcm9tIHN0YXJ0IGRhdGUgZm9yIHRoZSB0cmlwc1xuICogXHRAcGFyYW0ge0RBVEV9IHRvIC0gIGRhdGUudG8gZW5kIGRhdGUgb2YgdHJpcFxuICogQHBhcmFtIHtTVFJJTkd9IHBsYWNlIC0gd2hlcmUgd2UgZ28gb24gdGhpcyB0cmlwXG4gKiBAcGFyYW0ge0FSUkFZfSBzYnkgLSBzdXBlcnZpc2UgYnkgc28gcGVyc29uIGZyb21pbmRpdmlkdWFsXG4gKiBAcGFyYW0ge0FSUkFZfSB0cmF2ZWxlcnMgIC0gaW5kaXZpZHVhbHMgd2hvIHdvdWxkIGxpa2UgdG8gdHJhdmVsIGZvciBsb25nIHJ1blxuICpcbiAqL1xuXG5jb25zdCB0cmlwc1NjaGVtYSA9IG5ldyBTY2hlbWEoe1xuICB0aXRsZTogeyAkdHlwZTogU3RyaW5nLFx0cmVxdWlyZWQ6XHR0cnVlIH0sXG4gIHR5cGU6IFN0cmluZyxcbiAgbm90ZTogU3RyaW5nLFxuICBkYXRlOiB7IGZyb206IERhdGUsIHRvOiBEYXRlIH0sXG4gIHBsYWNlOiBTdHJpbmcsXG4gIHN0YXR1czogTnVtYmVyLFxuICBzYnk6IFt7ICR0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsIHJlZjogJ0luZGl2aWR1YWxzJyB9XSxcbiAgdHJhdmVsZXJzOiBbeyAkdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLCByZWY6ICdJbmRpdmlkdWFscycgfV0sXG4gIGJ5OiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG59LCB7XG4gIHRpbWVzdGFtcHM6IHsgY3JlYXRlZEF0OiAnY3JlYXRlZF9hdCcsIHVwZGF0ZWRBdDogJ3VwZGF0ZWRfYXQnIH0sXG4gIGNvbGxhdGlvbjogeyBsb2NhbGU6ICdhcicgfSxcbiAgc3RyaWN0UXVlcnk6IHRydWUsXG4gIHR5cGVLZXk6ICckdHlwZScsXG59KTtcblxuXG5leHBvcnQgZGVmYXVsdCBtb2RlbCgnVHJpcCcsIHRyaXBzU2NoZW1hKTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "trips.model.js"
      ],
      "names": [
        "tripsSchema",
        "Schema",
        "title",
        "$type",
        "String",
        "required",
        "type",
        "note",
        "date",
        "from",
        "Date",
        "to",
        "place",
        "status",
        "Number",
        "sby",
        "Types",
        "ObjectId",
        "ref",
        "travelers",
        "by",
        "timestamps",
        "createdAt",
        "updatedAt",
        "collation",
        "locale",
        "strictQuery",
        "typeKey"
      ],
      "mappings": ";;;;;;;AAAA;;AAIA;;;;;;;;;;;;;AAcA,IAAMA,WAAW,GAAG,IAAIC,gBAAJ,CAAW;AAC7BC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,KAAK,EAAEC,MAAT;AAAiBC,IAAAA,QAAQ,EAAE;AAA3B,GADsB;AAE7BC,EAAAA,IAAI,EAAEF,MAFuB;AAG7BG,EAAAA,IAAI,EAAEH,MAHuB;AAI7BI,EAAAA,IAAI,EAAE;AAAEC,IAAAA,IAAI,EAAEC,IAAR;AAAcC,IAAAA,EAAE,EAAED;AAAlB,GAJuB;AAK7BE,EAAAA,KAAK,EAAER,MALsB;AAM7BS,EAAAA,MAAM,EAAEC,MANqB;AAO7BC,EAAAA,GAAG,EAAE,CAAC;AAAEZ,IAAAA,KAAK,EAAEF,iBAAOe,KAAP,CAAaC,QAAtB;AAAgCC,IAAAA,GAAG,EAAE;AAArC,GAAD,CAPwB;AAQ7BC,EAAAA,SAAS,EAAE,CAAC;AAAEhB,IAAAA,KAAK,EAAEF,iBAAOe,KAAP,CAAaC,QAAtB;AAAgCC,IAAAA,GAAG,EAAE;AAArC,GAAD,CARkB;AAS7BE,EAAAA,EAAE,EAAEnB,iBAAOe,KAAP,CAAaC;AATY,CAAX,EAUjB;AACDI,EAAAA,UAAU,EAAE;AAAEC,IAAAA,SAAS,EAAE,YAAb;AAA2BC,IAAAA,SAAS,EAAE;AAAtC,GADX;AAEDC,EAAAA,SAAS,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAFV;AAGDC,EAAAA,WAAW,EAAE,IAHZ;AAIDC,EAAAA,OAAO,EAAE;AAJR,CAViB,CAApB;;eAkBe,qBAAM,MAAN,EAAc3B,WAAd,C",
      "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/features/trips",
      "sourcesContent": [
        "import {\n  Schema, model, SchemaType, SchemaTypes,\n} from 'mongoose';\n\n/**\n *  {TRIP_SCHEMA}\n * @param {STRING}  title - name of trip\n * @param {STRING} type - type of trips\n * @param {STRING} note - notes for the string\n * @param {OBJECT}  date - consiste of\n * \t@param {DATE} from - date.from start date for the trips\n * \t@param {DATE} to -  date.to end date of trip\n * @param {STRING} place - where we go on this trip\n * @param {ARRAY} sby - supervise by so person fromindividual\n * @param {ARRAY} travelers  - individuals who would like to travel for long run\n *\n */\n\nconst tripsSchema = new Schema({\n  title: { $type: String,\trequired:\ttrue },\n  type: String,\n  note: String,\n  date: { from: Date, to: Date },\n  place: String,\n  status: Number,\n  sby: [{ $type: Schema.Types.ObjectId, ref: 'Individuals' }],\n  travelers: [{ $type: Schema.Types.ObjectId, ref: 'Individuals' }],\n  by: Schema.Types.ObjectId,\n}, {\n  timestamps: { createdAt: 'created_at', updatedAt: 'updated_at' },\n  collation: { locale: 'ar' },\n  strictQuery: true,\n  typeKey: '$type',\n});\n\n\nexport default model('Trip', tripsSchema);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1548802791591
  },
  "{\"sourceRoot\":\"/var/www/html/sales/hayderApp/app/backend/src/features/trips\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/var/www/html/sales/hayderApp/app/backend\",\"filename\":\"/var/www/html/sales/hayderApp/app/backend/src/features/trips/trips.validate.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/var/www/html/sales/hayderApp/app/backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/features/trips",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/var/www/html/sales/hayderApp/app/backend",
      "filename": "/var/www/html/sales/hayderApp/app/backend/src/features/trips/trips.validate.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/var/www/html/sales/hayderApp/app/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/var/www/html/sales/hayderApp/app/backend/src/features/trips/trips.validate.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/var/www/html/sales/hayderApp/app/backend/src/features/trips/trips.validate.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/features/trips",
        "sourceFileName": "trips.validate.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.tripValidate = exports.edtiDeleteValidate = exports.queryValidate = void 0;\n\nvar _joi = _interopRequireDefault(require(\"joi\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable import/prefer-default-export */\nvar str = _joi.default.string();\n\nvar ary = _joi.default.array();\n\nvar queryValidate = {\n  query: {\n    trips_ui: str.min(6).max(10).required(),\n    l: str.min(1).max(3),\n    p: str.min(1).max(3),\n    id: str\n  }\n};\nexports.queryValidate = queryValidate;\nvar edtiDeleteValidate = {\n  params: {\n    id: str.required()\n  }\n};\nexports.edtiDeleteValidate = edtiDeleteValidate;\nvar tripValidate = {\n  body: {\n    data: {\n      title: str.min(2).max(200).required(),\n      type: str.min(2).max(100),\n      note: str,\n      place: str,\n      status: str.max(1),\n      date: _joi.default.object({\n        from: _joi.default.date(),\n        to: _joi.default.date()\n      }),\n      sby: ary.items(str),\n      travelers: ary.items(str),\n      by: str\n    }\n  }\n};\nexports.tripValidate = tripValidate;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyaXBzLnZhbGlkYXRlLmpzIl0sIm5hbWVzIjpbInN0ciIsImpvaSIsInN0cmluZyIsImFyeSIsImFycmF5IiwicXVlcnlWYWxpZGF0ZSIsInF1ZXJ5IiwidHJpcHNfdWkiLCJtaW4iLCJtYXgiLCJyZXF1aXJlZCIsImwiLCJwIiwiaWQiLCJlZHRpRGVsZXRlVmFsaWRhdGUiLCJwYXJhbXMiLCJ0cmlwVmFsaWRhdGUiLCJib2R5IiwiZGF0YSIsInRpdGxlIiwidHlwZSIsIm5vdGUiLCJwbGFjZSIsInN0YXR1cyIsImRhdGUiLCJvYmplY3QiLCJmcm9tIiwidG8iLCJzYnkiLCJpdGVtcyIsInRyYXZlbGVycyIsImJ5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7Ozs7QUFEQTtBQUdBLElBQU1BLEdBQUcsR0FBR0MsYUFBSUMsTUFBSixFQUFaOztBQUNBLElBQU1DLEdBQUcsR0FBR0YsYUFBSUcsS0FBSixFQUFaOztBQUVPLElBQU1DLGFBQWEsR0FBRztBQUMzQkMsRUFBQUEsS0FBSyxFQUFFO0FBQ0xDLElBQUFBLFFBQVEsRUFBRVAsR0FBRyxDQUFDUSxHQUFKLENBQVEsQ0FBUixFQUFXQyxHQUFYLENBQWUsRUFBZixFQUFtQkMsUUFBbkIsRUFETDtBQUVMQyxJQUFBQSxDQUFDLEVBQUVYLEdBQUcsQ0FBQ1EsR0FBSixDQUFRLENBQVIsRUFBV0MsR0FBWCxDQUFlLENBQWYsQ0FGRTtBQUdMRyxJQUFBQSxDQUFDLEVBQUVaLEdBQUcsQ0FBQ1EsR0FBSixDQUFRLENBQVIsRUFBV0MsR0FBWCxDQUFlLENBQWYsQ0FIRTtBQUlMSSxJQUFBQSxFQUFFLEVBQUViO0FBSkM7QUFEb0IsQ0FBdEI7O0FBUUEsSUFBTWMsa0JBQWtCLEdBQUc7QUFDaENDLEVBQUFBLE1BQU0sRUFBRTtBQUNORixJQUFBQSxFQUFFLEVBQUViLEdBQUcsQ0FBQ1UsUUFBSjtBQURFO0FBRHdCLENBQTNCOztBQU1BLElBQU1NLFlBQVksR0FBRztBQUMxQkMsRUFBQUEsSUFBSSxFQUFFO0FBQ0pDLElBQUFBLElBQUksRUFBRTtBQUNKQyxNQUFBQSxLQUFLLEVBQUVuQixHQUFHLENBQUNRLEdBQUosQ0FBUSxDQUFSLEVBQVdDLEdBQVgsQ0FBZSxHQUFmLEVBQW9CQyxRQUFwQixFQURIO0FBRUpVLE1BQUFBLElBQUksRUFBRXBCLEdBQUcsQ0FBQ1EsR0FBSixDQUFRLENBQVIsRUFBV0MsR0FBWCxDQUFlLEdBQWYsQ0FGRjtBQUdKWSxNQUFBQSxJQUFJLEVBQUVyQixHQUhGO0FBSUpzQixNQUFBQSxLQUFLLEVBQUV0QixHQUpIO0FBS0p1QixNQUFBQSxNQUFNLEVBQUV2QixHQUFHLENBQUNTLEdBQUosQ0FBUSxDQUFSLENBTEo7QUFNSmUsTUFBQUEsSUFBSSxFQUFFdkIsYUFBSXdCLE1BQUosQ0FBVztBQUNmQyxRQUFBQSxJQUFJLEVBQUV6QixhQUFJdUIsSUFBSixFQURTO0FBRWZHLFFBQUFBLEVBQUUsRUFBRTFCLGFBQUl1QixJQUFKO0FBRlcsT0FBWCxDQU5GO0FBVUpJLE1BQUFBLEdBQUcsRUFBRXpCLEdBQUcsQ0FBQzBCLEtBQUosQ0FBVTdCLEdBQVYsQ0FWRDtBQVdKOEIsTUFBQUEsU0FBUyxFQUFFM0IsR0FBRyxDQUFDMEIsS0FBSixDQUFVN0IsR0FBVixDQVhQO0FBWUorQixNQUFBQSxFQUFFLEVBQUUvQjtBQVpBO0FBREY7QUFEb0IsQ0FBckIiLCJzb3VyY2VSb290IjoiL3Zhci93d3cvaHRtbC9zYWxlcy9oYXlkZXJBcHAvYXBwL2JhY2tlbmQvc3JjL2ZlYXR1cmVzL3RyaXBzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgaW1wb3J0L3ByZWZlci1kZWZhdWx0LWV4cG9ydCAqL1xuaW1wb3J0IGpvaSBmcm9tICdqb2knO1xuXG5jb25zdCBzdHIgPSBqb2kuc3RyaW5nKCk7XG5jb25zdCBhcnkgPSBqb2kuYXJyYXkoKTtcblxuZXhwb3J0IGNvbnN0IHF1ZXJ5VmFsaWRhdGUgPSB7XG4gIHF1ZXJ5OiB7XG4gICAgdHJpcHNfdWk6IHN0ci5taW4oNikubWF4KDEwKS5yZXF1aXJlZCgpLFxuICAgIGw6IHN0ci5taW4oMSkubWF4KDMpLFxuICAgIHA6IHN0ci5taW4oMSkubWF4KDMpLFxuICAgIGlkOiBzdHJcbiAgfVxufTtcbmV4cG9ydCBjb25zdCBlZHRpRGVsZXRlVmFsaWRhdGUgPSB7XG4gIHBhcmFtczoge1xuICAgIGlkOiBzdHIucmVxdWlyZWQoKSxcbiAgfSxcbn07XG5cbmV4cG9ydCBjb25zdCB0cmlwVmFsaWRhdGUgPSB7XG4gIGJvZHk6IHtcbiAgICBkYXRhOiB7XG4gICAgICB0aXRsZTogc3RyLm1pbigyKS5tYXgoMjAwKS5yZXF1aXJlZCgpLFxuICAgICAgdHlwZTogc3RyLm1pbigyKS5tYXgoMTAwKSxcbiAgICAgIG5vdGU6IHN0cixcbiAgICAgIHBsYWNlOiBzdHIsXG4gICAgICBzdGF0dXM6IHN0ci5tYXgoMSksXG4gICAgICBkYXRlOiBqb2kub2JqZWN0KHtcbiAgICAgICAgZnJvbTogam9pLmRhdGUoKSxcbiAgICAgICAgdG86IGpvaS5kYXRlKCksXG4gICAgICB9KSxcbiAgICAgIHNieTogYXJ5Lml0ZW1zKHN0ciksXG4gICAgICB0cmF2ZWxlcnM6IGFyeS5pdGVtcyhzdHIpLFxuICAgICAgYnk6IHN0cixcbiAgICB9LFxuICB9LFxuXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "trips.validate.js"
      ],
      "names": [
        "str",
        "joi",
        "string",
        "ary",
        "array",
        "queryValidate",
        "query",
        "trips_ui",
        "min",
        "max",
        "required",
        "l",
        "p",
        "id",
        "edtiDeleteValidate",
        "params",
        "tripValidate",
        "body",
        "data",
        "title",
        "type",
        "note",
        "place",
        "status",
        "date",
        "object",
        "from",
        "to",
        "sby",
        "items",
        "travelers",
        "by"
      ],
      "mappings": ";;;;;;;AACA;;;;AADA;AAGA,IAAMA,GAAG,GAAGC,aAAIC,MAAJ,EAAZ;;AACA,IAAMC,GAAG,GAAGF,aAAIG,KAAJ,EAAZ;;AAEO,IAAMC,aAAa,GAAG;AAC3BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAEP,GAAG,CAACQ,GAAJ,CAAQ,CAAR,EAAWC,GAAX,CAAe,EAAf,EAAmBC,QAAnB,EADL;AAELC,IAAAA,CAAC,EAAEX,GAAG,CAACQ,GAAJ,CAAQ,CAAR,EAAWC,GAAX,CAAe,CAAf,CAFE;AAGLG,IAAAA,CAAC,EAAEZ,GAAG,CAACQ,GAAJ,CAAQ,CAAR,EAAWC,GAAX,CAAe,CAAf,CAHE;AAILI,IAAAA,EAAE,EAAEb;AAJC;AADoB,CAAtB;;AAQA,IAAMc,kBAAkB,GAAG;AAChCC,EAAAA,MAAM,EAAE;AACNF,IAAAA,EAAE,EAAEb,GAAG,CAACU,QAAJ;AADE;AADwB,CAA3B;;AAMA,IAAMM,YAAY,GAAG;AAC1BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAEnB,GAAG,CAACQ,GAAJ,CAAQ,CAAR,EAAWC,GAAX,CAAe,GAAf,EAAoBC,QAApB,EADH;AAEJU,MAAAA,IAAI,EAAEpB,GAAG,CAACQ,GAAJ,CAAQ,CAAR,EAAWC,GAAX,CAAe,GAAf,CAFF;AAGJY,MAAAA,IAAI,EAAErB,GAHF;AAIJsB,MAAAA,KAAK,EAAEtB,GAJH;AAKJuB,MAAAA,MAAM,EAAEvB,GAAG,CAACS,GAAJ,CAAQ,CAAR,CALJ;AAMJe,MAAAA,IAAI,EAAEvB,aAAIwB,MAAJ,CAAW;AACfC,QAAAA,IAAI,EAAEzB,aAAIuB,IAAJ,EADS;AAEfG,QAAAA,EAAE,EAAE1B,aAAIuB,IAAJ;AAFW,OAAX,CANF;AAUJI,MAAAA,GAAG,EAAEzB,GAAG,CAAC0B,KAAJ,CAAU7B,GAAV,CAVD;AAWJ8B,MAAAA,SAAS,EAAE3B,GAAG,CAAC0B,KAAJ,CAAU7B,GAAV,CAXP;AAYJ+B,MAAAA,EAAE,EAAE/B;AAZA;AADF;AADoB,CAArB",
      "sourceRoot": "/var/www/html/sales/hayderApp/app/backend/src/features/trips",
      "sourcesContent": [
        "/* eslint-disable import/prefer-default-export */\nimport joi from 'joi';\n\nconst str = joi.string();\nconst ary = joi.array();\n\nexport const queryValidate = {\n  query: {\n    trips_ui: str.min(6).max(10).required(),\n    l: str.min(1).max(3),\n    p: str.min(1).max(3),\n    id: str\n  }\n};\nexport const edtiDeleteValidate = {\n  params: {\n    id: str.required(),\n  },\n};\n\nexport const tripValidate = {\n  body: {\n    data: {\n      title: str.min(2).max(200).required(),\n      type: str.min(2).max(100),\n      note: str,\n      place: str,\n      status: str.max(1),\n      date: joi.object({\n        from: joi.date(),\n        to: joi.date(),\n      }),\n      sby: ary.items(str),\n      travelers: ary.items(str),\n      by: str,\n    },\n  },\n\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1548848564926
  }
}